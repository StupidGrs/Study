// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.ServiceClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Service
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wServiceAtValuationDate wServiceAtValuationDate
        {
            get
            {
                if ((this.mwServiceAtValuationDate == null))
                {
                    this.mwServiceAtValuationDate = new wServiceAtValuationDate(this);
                }
                return this.mwServiceAtValuationDate;
            }
        }
        
        public wRulesBasedService wRulesBasedService
        {
            get
            {
                if ((this.mwRulesBasedService == null))
                {
                    this.mwRulesBasedService = new wRulesBasedService(this);
                }
                return this.mwRulesBasedService;
            }
        }
        
        public wCustomCode wCustomCode
        {
            get
            {
                if ((this.mwCustomCode == null))
                {
                    this.mwCustomCode = new wCustomCode(this);
                }
                return this.mwCustomCode;
            }
        }
        
        public wUseServiceCap wUseServiceCap
        {
            get
            {
                if ((this.mwUseServiceCap == null))
                {
                    this.mwUseServiceCap = new wUseServiceCap(this);
                }
                return this.mwUseServiceCap;
            }
        }
        
        public wServiceAtValuationDate_ProvidedInDataField wServiceAtValuationDate_ProvidedInDataField
        {
            get
            {
                if ((this.mwServiceAtValuationDate_ProvidedInDataField == null))
                {
                    this.mwServiceAtValuationDate_ProvidedInDataField = new wServiceAtValuationDate_ProvidedInDataField(this);
                }
                return this.mwServiceAtValuationDate_ProvidedInDataField;
            }
        }
        
        public wServiceAtValuationDate_RoundingRule wServiceAtValuationDate_RoundingRule
        {
            get
            {
                if ((this.mwServiceAtValuationDate_RoundingRule == null))
                {
                    this.mwServiceAtValuationDate_RoundingRule = new wServiceAtValuationDate_RoundingRule(this);
                }
                return this.mwServiceAtValuationDate_RoundingRule;
            }
        }
        
        public wServiceAtValuationDate_VIcon wServiceAtValuationDate_VIcon
        {
            get
            {
                if ((this.mwServiceAtValuationDate_VIcon == null))
                {
                    this.mwServiceAtValuationDate_VIcon = new wServiceAtValuationDate_VIcon(this);
                }
                return this.mwServiceAtValuationDate_VIcon;
            }
        }
        
        public wServiceAtValuationDate_CIcon wServiceAtValuationDate_CIcon
        {
            get
            {
                if ((this.mwServiceAtValuationDate_CIcon == null))
                {
                    this.mwServiceAtValuationDate_CIcon = new wServiceAtValuationDate_CIcon(this);
                }
                return this.mwServiceAtValuationDate_CIcon;
            }
        }
        
        public wServiceAtValuationDate_TIcon wServiceAtValuationDate_TIcon
        {
            get
            {
                if ((this.mwServiceAtValuationDate_TIcon == null))
                {
                    this.mwServiceAtValuationDate_TIcon = new wServiceAtValuationDate_TIcon(this);
                }
                return this.mwServiceAtValuationDate_TIcon;
            }
        }
        
        public wServiceAtValuationDate_ServiceIncrement_txt wServiceAtValuationDate_ServiceIncrement_txt
        {
            get
            {
                if ((this.mwServiceAtValuationDate_ServiceIncrement_txt == null))
                {
                    this.mwServiceAtValuationDate_ServiceIncrement_txt = new wServiceAtValuationDate_ServiceIncrement_txt(this);
                }
                return this.mwServiceAtValuationDate_ServiceIncrement_txt;
            }
        }
        
        public wServiceAtValuationDate_ServiceIncrease_cbo wServiceAtValuationDate_ServiceIncrease_cbo
        {
            get
            {
                if ((this.mwServiceAtValuationDate_ServiceIncrease_cbo == null))
                {
                    this.mwServiceAtValuationDate_ServiceIncrease_cbo = new wServiceAtValuationDate_ServiceIncrease_cbo(this);
                }
                return this.mwServiceAtValuationDate_ServiceIncrease_cbo;
            }
        }
        
        public wRulesBasedService_Date wRulesBasedService_Date
        {
            get
            {
                if ((this.mwRulesBasedService_Date == null))
                {
                    this.mwRulesBasedService_Date = new wRulesBasedService_Date(this);
                }
                return this.mwRulesBasedService_Date;
            }
        }
        
        public wServiceAsAFunction wServiceAsAFunction
        {
            get
            {
                if ((this.mwServiceAsAFunction == null))
                {
                    this.mwServiceAsAFunction = new wServiceAsAFunction(this);
                }
                return this.mwServiceAsAFunction;
            }
        }
        
        public wMaximumService_UseServiceCap wMaximumService_UseServiceCap
        {
            get
            {
                if ((this.mwMaximumService_UseServiceCap == null))
                {
                    this.mwMaximumService_UseServiceCap = new wMaximumService_UseServiceCap(this);
                }
                return this.mwMaximumService_UseServiceCap;
            }
        }
        
        public wFixedDate_UseServiceCap wFixedDate_UseServiceCap
        {
            get
            {
                if ((this.mwFixedDate_UseServiceCap == null))
                {
                    this.mwFixedDate_UseServiceCap = new wFixedDate_UseServiceCap(this);
                }
                return this.mwFixedDate_UseServiceCap;
            }
        }
        
        public wDate_UseServiceCap wDate_UseServiceCap
        {
            get
            {
                if ((this.mwDate_UseServiceCap == null))
                {
                    this.mwDate_UseServiceCap = new wDate_UseServiceCap(this);
                }
                return this.mwDate_UseServiceCap;
            }
        }
        
        public wCalculationMethod_DE wCalculationMethod_DE
        {
            get
            {
                if ((this.mwCalculationMethod_DE == null))
                {
                    this.mwCalculationMethod_DE = new wCalculationMethod_DE(this);
                }
                return this.mwCalculationMethod_DE;
            }
        }
        
        public wRoundingPeriod_DE wRoundingPeriod_DE
        {
            get
            {
                if ((this.mwRoundingPeriod_DE == null))
                {
                    this.mwRoundingPeriod_DE = new wRoundingPeriod_DE(this);
                }
                return this.mwRoundingPeriod_DE;
            }
        }
        
        public wRoundingMethod_DE wRoundingMethod_DE
        {
            get
            {
                if ((this.mwRoundingMethod_DE == null))
                {
                    this.mwRoundingMethod_DE = new wRoundingMethod_DE(this);
                }
                return this.mwRoundingMethod_DE;
            }
        }
        
        public wServiceStarts_FixedDate_DE wServiceStarts_FixedDate_DE
        {
            get
            {
                if ((this.mwServiceStarts_FixedDate_DE == null))
                {
                    this.mwServiceStarts_FixedDate_DE = new wServiceStarts_FixedDate_DE(this);
                }
                return this.mwServiceStarts_FixedDate_DE;
            }
        }
        
        public wServiceEnds_FixedDate_DE wServiceEnds_FixedDate_DE
        {
            get
            {
                if ((this.mwServiceEnds_FixedDate_DE == null))
                {
                    this.mwServiceEnds_FixedDate_DE = new wServiceEnds_FixedDate_DE(this);
                }
                return this.mwServiceEnds_FixedDate_DE;
            }
        }
        
        public wServiceEnds_Date_DE wServiceEnds_Date_DE
        {
            get
            {
                if ((this.mwServiceEnds_Date_DE == null))
                {
                    this.mwServiceEnds_Date_DE = new wServiceEnds_Date_DE(this);
                }
                return this.mwServiceEnds_Date_DE;
            }
        }
        
        public wForInternationalAccounting_DE wForInternationalAccounting_DE
        {
            get
            {
                if ((this.mwForInternationalAccounting_DE == null))
                {
                    this.mwForInternationalAccounting_DE = new wForInternationalAccounting_DE(this);
                }
                return this.mwForInternationalAccounting_DE;
            }
        }
        
        public wForTrade_DE wForTrade_DE
        {
            get
            {
                if ((this.mwForTrade_DE == null))
                {
                    this.mwForTrade_DE = new wForTrade_DE(this);
                }
                return this.mwForTrade_DE;
            }
        }
        
        public wServiceStarts_Age_V wServiceStarts_Age_V
        {
            get
            {
                if ((this.mwServiceStarts_Age_V == null))
                {
                    this.mwServiceStarts_Age_V = new wServiceStarts_Age_V(this);
                }
                return this.mwServiceStarts_Age_V;
            }
        }
        
        public wServiceStarts_Age_C wServiceStarts_Age_C
        {
            get
            {
                if ((this.mwServiceStarts_Age_C == null))
                {
                    this.mwServiceStarts_Age_C = new wServiceStarts_Age_C(this);
                }
                return this.mwServiceStarts_Age_C;
            }
        }
        
        public wCommon_cbo wCommon_cbo
        {
            get
            {
                if ((this.mwCommon_cbo == null))
                {
                    this.mwCommon_cbo = new wCommon_cbo(this);
                }
                return this.mwCommon_cbo;
            }
        }
        
        public wCommon_txt wCommon_txt
        {
            get
            {
                if ((this.mwCommon_txt == null))
                {
                    this.mwCommon_txt = new wCommon_txt(this);
                }
                return this.mwCommon_txt;
            }
        }
        
        public wServiceIncreasement_V wServiceIncreasement_V
        {
            get
            {
                if ((this.mwServiceIncreasement_V == null))
                {
                    this.mwServiceIncreasement_V = new wServiceIncreasement_V(this);
                }
                return this.mwServiceIncreasement_V;
            }
        }
        
        public wServiceIncreasement_C wServiceIncreasement_C
        {
            get
            {
                if ((this.mwServiceIncreasement_C == null))
                {
                    this.mwServiceIncreasement_C = new wServiceIncreasement_C(this);
                }
                return this.mwServiceIncreasement_C;
            }
        }
        
        public wRulesBased_UseCap_ServiceIncrease_V wRulesBased_UseCap_ServiceIncrease_V
        {
            get
            {
                if ((this.mwRulesBased_UseCap_ServiceIncrease_V == null))
                {
                    this.mwRulesBased_UseCap_ServiceIncrease_V = new wRulesBased_UseCap_ServiceIncrease_V(this);
                }
                return this.mwRulesBased_UseCap_ServiceIncrease_V;
            }
        }
        
        public wRulesBased_UseCap_ServiceIncrease_C wRulesBased_UseCap_ServiceIncrease_C
        {
            get
            {
                if ((this.mwRulesBased_UseCap_ServiceIncrease_C == null))
                {
                    this.mwRulesBased_UseCap_ServiceIncrease_C = new wRulesBased_UseCap_ServiceIncrease_C(this);
                }
                return this.mwRulesBased_UseCap_ServiceIncrease_C;
            }
        }
        
        public wCalculateExactServiceAt wCalculateExactServiceAt
        {
            get
            {
                if ((this.mwCalculateExactServiceAt == null))
                {
                    this.mwCalculateExactServiceAt = new wCalculateExactServiceAt(this);
                }
                return this.mwCalculateExactServiceAt;
            }
        }
        
        public wOtherDate wOtherDate
        {
            get
            {
                if ((this.mwOtherDate == null))
                {
                    this.mwOtherDate = new wOtherDate(this);
                }
                return this.mwOtherDate;
            }
        }
        
        public wMonth wMonth
        {
            get
            {
                if ((this.mwMonth == null))
                {
                    this.mwMonth = new wMonth(this);
                }
                return this.mwMonth;
            }
        }
        
        public wDay wDay
        {
            get
            {
                if ((this.mwDay == null))
                {
                    this.mwDay = new wDay(this);
                }
                return this.mwDay;
            }
        }
        
        public wAlignment wAlignment
        {
            get
            {
                if ((this.mwAlignment == null))
                {
                    this.mwAlignment = new wAlignment(this);
                }
                return this.mwAlignment;
            }
        }
        #endregion
        
        #region Fields
        private wServiceAtValuationDate mwServiceAtValuationDate;
        
        private wRulesBasedService mwRulesBasedService;
        
        private wCustomCode mwCustomCode;
        
        private wUseServiceCap mwUseServiceCap;
        
        private wServiceAtValuationDate_ProvidedInDataField mwServiceAtValuationDate_ProvidedInDataField;
        
        private wServiceAtValuationDate_RoundingRule mwServiceAtValuationDate_RoundingRule;
        
        private wServiceAtValuationDate_VIcon mwServiceAtValuationDate_VIcon;
        
        private wServiceAtValuationDate_CIcon mwServiceAtValuationDate_CIcon;
        
        private wServiceAtValuationDate_TIcon mwServiceAtValuationDate_TIcon;
        
        private wServiceAtValuationDate_ServiceIncrement_txt mwServiceAtValuationDate_ServiceIncrement_txt;
        
        private wServiceAtValuationDate_ServiceIncrease_cbo mwServiceAtValuationDate_ServiceIncrease_cbo;
        
        private wRulesBasedService_Date mwRulesBasedService_Date;
        
        private wServiceAsAFunction mwServiceAsAFunction;
        
        private wMaximumService_UseServiceCap mwMaximumService_UseServiceCap;
        
        private wFixedDate_UseServiceCap mwFixedDate_UseServiceCap;
        
        private wDate_UseServiceCap mwDate_UseServiceCap;
        
        private wCalculationMethod_DE mwCalculationMethod_DE;
        
        private wRoundingPeriod_DE mwRoundingPeriod_DE;
        
        private wRoundingMethod_DE mwRoundingMethod_DE;
        
        private wServiceStarts_FixedDate_DE mwServiceStarts_FixedDate_DE;
        
        private wServiceEnds_FixedDate_DE mwServiceEnds_FixedDate_DE;
        
        private wServiceEnds_Date_DE mwServiceEnds_Date_DE;
        
        private wForInternationalAccounting_DE mwForInternationalAccounting_DE;
        
        private wForTrade_DE mwForTrade_DE;
        
        private wServiceStarts_Age_V mwServiceStarts_Age_V;
        
        private wServiceStarts_Age_C mwServiceStarts_Age_C;
        
        private wCommon_cbo mwCommon_cbo;
        
        private wCommon_txt mwCommon_txt;
        
        private wServiceIncreasement_V mwServiceIncreasement_V;
        
        private wServiceIncreasement_C mwServiceIncreasement_C;
        
        private wRulesBased_UseCap_ServiceIncrease_V mwRulesBased_UseCap_ServiceIncrease_V;
        
        private wRulesBased_UseCap_ServiceIncrease_C mwRulesBased_UseCap_ServiceIncrease_C;
        
        private wCalculateExactServiceAt mwCalculateExactServiceAt;
        
        private wOtherDate mwOtherDate;
        
        private wMonth mwMonth;
        
        private wDay mwDay;
        
        private wAlignment mwAlignment;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate : WinWindow
    {
        
        public wServiceAtValuationDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPriorServiceDataField";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdServiceAtValuationDate
        {
            get
            {
                if ((this.mrdServiceAtValuationDate == null))
                {
                    this.mrdServiceAtValuationDate = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdServiceAtValuationDate.SearchProperties[WinRadioButton.PropertyNames.Name] = "Service at valuation date";
                    this.mrdServiceAtValuationDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdServiceAtValuationDate;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdServiceAtValuationDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRulesBasedService : WinWindow
    {
        
        public wRulesBasedService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCalculatePriorService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdRulesBasedService
        {
            get
            {
                if ((this.mrdRulesBasedService == null))
                {
                    this.mrdRulesBasedService = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdRulesBasedService.SearchProperties[WinRadioButton.PropertyNames.Name] = "Rules based service";
                    this.mrdRulesBasedService.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdRulesBasedService;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdRulesBasedService;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCustomCode : WinWindow
    {
        
        public wCustomCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCustomCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCustomCode
        {
            get
            {
                if ((this.mrdCustomCode == null))
                {
                    this.mrdCustomCode = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCustomCode.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom code";
                    this.mrdCustomCode.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCustomCode;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCustomCode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wUseServiceCap : WinWindow
    {
        
        public wUseServiceCap(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkUseServiceCap";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkUseServiceCap
        {
            get
            {
                if ((this.mchkUseServiceCap == null))
                {
                    this.mchkUseServiceCap = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkUseServiceCap.SearchProperties[WinCheckBox.PropertyNames.Name] = "Use service cap";
                    this.mchkUseServiceCap.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkUseServiceCap;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkUseServiceCap;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_ProvidedInDataField : WinWindow
    {
        
        public wServiceAtValuationDate_ProvidedInDataField(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPriorServiceDataField";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboProvidedInDataField
        {
            get
            {
                if ((this.mcboProvidedInDataField == null))
                {
                    this.mcboProvidedInDataField = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboProvidedInDataField.SearchProperties[WinComboBox.PropertyNames.Name] = "Provided in data field";
                    this.mcboProvidedInDataField.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboProvidedInDataField;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboProvidedInDataField;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_RoundingRule : WinWindow
    {
        
        public wServiceAtValuationDate_RoundingRule(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboServiceRoundingRule";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboRoundingRule
        {
            get
            {
                if ((this.mcboRoundingRule == null))
                {
                    this.mcboRoundingRule = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboRoundingRule.SearchProperties[WinComboBox.PropertyNames.Name] = "Rounding rule";
                    this.mcboRoundingRule.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcboRoundingRule.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboRoundingRule;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboRoundingRule;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_VIcon : WinWindow
    {
        
        public wServiceAtValuationDate_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnV
        {
            get
            {
                if ((this.mbtnV == null))
                {
                    this.mbtnV = new WinButton(this);
                    #region Search Criteria
                    this.mbtnV.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnV.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnV;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnV;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_CIcon : WinWindow
    {
        
        public wServiceAtValuationDate_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnC
        {
            get
            {
                if ((this.mbtnC == null))
                {
                    this.mbtnC = new WinButton(this);
                    #region Search Criteria
                    this.mbtnC.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnC.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnC;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnC;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_TIcon : WinWindow
    {
        
        public wServiceAtValuationDate_TIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnT
        {
            get
            {
                if ((this.mbtnT == null))
                {
                    this.mbtnT = new WinButton(this);
                    #region Search Criteria
                    this.mbtnT.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtnT.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnT;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnT;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_ServiceIncrement_txt : WinWindow
    {
        
        public wServiceAtValuationDate_ServiceIncrement_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtServiceIncrement txtServiceIncrement
        {
            get
            {
                if ((this.mtxtServiceIncrement == null))
                {
                    this.mtxtServiceIncrement = new txtServiceIncrement(this);
                }
                return this.mtxtServiceIncrement;
            }
        }
        #endregion
        
        #region Fields
        private txtServiceIncrement mtxtServiceIncrement;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtServiceIncrement : WinEdit
    {
        
        public txtServiceIncrement(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAtValuationDate_ServiceIncrease_cbo : WinWindow
    {
        
        public wServiceAtValuationDate_ServiceIncrease_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboServiceIncrement
        {
            get
            {
                if ((this.mcboServiceIncrement == null))
                {
                    this.mcboServiceIncrement = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboServiceIncrement.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcboServiceIncrement.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboServiceIncrement;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboServiceIncrement;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRulesBasedService_Date : WinWindow
    {
        
        public wRulesBasedService_Date(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboStartsAtDateField";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboDate
        {
            get
            {
                if ((this.mcboDate == null))
                {
                    this.mcboDate = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboDate.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcboDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboDate;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceAsAFunction : WinWindow
    {
        
        public wServiceAsAFunction(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnServiceFunctionOfService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdwServiceAsAFunction
        {
            get
            {
                if ((this.mrdwServiceAsAFunction == null))
                {
                    this.mrdwServiceAsAFunction = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdwServiceAsAFunction.SearchProperties[WinRadioButton.PropertyNames.Name] = "Service as a function of other service definitions";
                    this.mrdwServiceAsAFunction.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mrdwServiceAsAFunction.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdwServiceAsAFunction;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdwServiceAsAFunction;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMaximumService_UseServiceCap : WinWindow
    {
        
        public wMaximumService_UseServiceCap(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "uneMaximumService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUneMaximumServiceEdit1
        {
            get
            {
                if ((this.mUIUneMaximumServiceEdit1 == null))
                {
                    this.mUIUneMaximumServiceEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUneMaximumServiceEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIUneMaximumServiceEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIUneMaximumServiceEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUneMaximumServiceEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFixedDate_UseServiceCap : WinWindow
    {
        
        public wFixedDate_UseServiceCap(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteServiceEndsFixedDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDate_UseServiceCap : WinWindow
    {
        
        public wDate_UseServiceCap(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboEndsAtDateField";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCalculationMethod_DE : WinWindow
    {
        
        public wCalculationMethod_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboCalculationMethod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Rounding period";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRoundingPeriod_DE : WinWindow
    {
        
        public wRoundingPeriod_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboRoundingPeriod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRoundingMethod_DE : WinWindow
    {
        
        public wRoundingMethod_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboRoundingMethod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceStarts_FixedDate_DE : WinWindow
    {
        
        public wServiceStarts_FixedDate_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteStartsAtDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo1 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo1(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo1 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo1 : WinComboBox
    {
        
        public cbo1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceEnds_FixedDate_DE : WinWindow
    {
        
        public wServiceEnds_FixedDate_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteServiceEndsFixedDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo2 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo2(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo2 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo2 : WinComboBox
    {
        
        public cbo2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceEnds_Date_DE : WinWindow
    {
        
        public wServiceEnds_Date_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboEndsAtDateField";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wForInternationalAccounting_DE : WinWindow
    {
        
        public wForInternationalAccounting_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ckbInternationalAccouting";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "for International Accouting";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wForTrade_DE : WinWindow
    {
        
        public wForTrade_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ckbTrade";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "for Trade";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceStarts_Age_V : WinWindow
    {
        
        public wServiceStarts_Age_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceStarts_Age_C : WinWindow
    {
        
        public wServiceStarts_Age_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo : WinWindow
    {
        
        public wCommon_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt : WinWindow
    {
        
        public wCommon_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceIncreasement_V : WinWindow
    {
        
        public wServiceIncreasement_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wServiceIncreasement_C : WinWindow
    {
        
        public wServiceIncreasement_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRulesBased_UseCap_ServiceIncrease_V : WinWindow
    {
        
        public wRulesBased_UseCap_ServiceIncrease_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRulesBased_UseCap_ServiceIncrease_C : WinWindow
    {
        
        public wRulesBased_UseCap_ServiceIncrease_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCalculateExactServiceAt : WinWindow
    {
        
        public wCalculateExactServiceAt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkCalculateExactService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Calculate exact service at retirement age";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOtherDate : WinWindow
    {
        
        public wOtherDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ckbOtherDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMonth : WinWindow
    {
        
        public wMonth(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbMonth";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDay : WinWindow
    {
        
        public wDay(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "uneDay";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUneDayEdit1
        {
            get
            {
                if ((this.mUIUneDayEdit1 == null))
                {
                    this.mUIUneDayEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUneDayEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIUneDayEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIUneDayEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUneDayEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAlignment : WinWindow
    {
        
        public wAlignment(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAlignment";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
}
