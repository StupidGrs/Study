// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.EmployeeContributionsFormulaClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class EmployeeContributionsFormula
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wStandard wStandard
        {
            get
            {
                if ((this.mwStandard == null))
                {
                    this.mwStandard = new wStandard(this);
                }
                return this.mwStandard;
            }
        }
        
        public wCustomCode wCustomCode
        {
            get
            {
                if ((this.mwCustomCode == null))
                {
                    this.mwCustomCode = new wCustomCode(this);
                }
                return this.mwCustomCode;
            }
        }
        
        public wFormulaCalculated wFormulaCalculated
        {
            get
            {
                if ((this.mwFormulaCalculated == null))
                {
                    this.mwFormulaCalculated = new wFormulaCalculated(this);
                }
                return this.mwFormulaCalculated;
            }
        }
        
        public wPredefinedAmount_rd wPredefinedAmount_rd
        {
            get
            {
                if ((this.mwPredefinedAmount_rd == null))
                {
                    this.mwPredefinedAmount_rd = new wPredefinedAmount_rd(this);
                }
                return this.mwPredefinedAmount_rd;
            }
        }
        
        public wStartingBalanceAsOfOneYear wStartingBalanceAsOfOneYear
        {
            get
            {
                if ((this.mwStartingBalanceAsOfOneYear == null))
                {
                    this.mwStartingBalanceAsOfOneYear = new wStartingBalanceAsOfOneYear(this);
                }
                return this.mwStartingBalanceAsOfOneYear;
            }
        }
        
        public wStartingBalance_V wStartingBalance_V
        {
            get
            {
                if ((this.mwStartingBalance_V == null))
                {
                    this.mwStartingBalance_V = new wStartingBalance_V(this);
                }
                return this.mwStartingBalance_V;
            }
        }
        
        public wStartingBalance_C wStartingBalance_C
        {
            get
            {
                if ((this.mwStartingBalance_C == null))
                {
                    this.mwStartingBalance_C = new wStartingBalance_C(this);
                }
                return this.mwStartingBalance_C;
            }
        }
        
        public wPreDefinedAmount wPreDefinedAmount
        {
            get
            {
                if ((this.mwPreDefinedAmount == null))
                {
                    this.mwPreDefinedAmount = new wPreDefinedAmount(this);
                }
                return this.mwPreDefinedAmount;
            }
        }
        
        public wStopContributionAt_V wStopContributionAt_V
        {
            get
            {
                if ((this.mwStopContributionAt_V == null))
                {
                    this.mwStopContributionAt_V = new wStopContributionAt_V(this);
                }
                return this.mwStopContributionAt_V;
            }
        }
        
        public wStopContributionAt_C wStopContributionAt_C
        {
            get
            {
                if ((this.mwStopContributionAt_C == null))
                {
                    this.mwStopContributionAt_C = new wStopContributionAt_C(this);
                }
                return this.mwStopContributionAt_C;
            }
        }
        
        public wOffsetToAnnual_V wOffsetToAnnual_V
        {
            get
            {
                if ((this.mwOffsetToAnnual_V == null))
                {
                    this.mwOffsetToAnnual_V = new wOffsetToAnnual_V(this);
                }
                return this.mwOffsetToAnnual_V;
            }
        }
        
        public wOffsetToAnnual_C wOffsetToAnnual_C
        {
            get
            {
                if ((this.mwOffsetToAnnual_C == null))
                {
                    this.mwOffsetToAnnual_C = new wOffsetToAnnual_C(this);
                }
                return this.mwOffsetToAnnual_C;
            }
        }
        
        public wLimitToAnnual_V wLimitToAnnual_V
        {
            get
            {
                if ((this.mwLimitToAnnual_V == null))
                {
                    this.mwLimitToAnnual_V = new wLimitToAnnual_V(this);
                }
                return this.mwLimitToAnnual_V;
            }
        }
        
        public wLimitToAnnual_C wLimitToAnnual_C
        {
            get
            {
                if ((this.mwLimitToAnnual_C == null))
                {
                    this.mwLimitToAnnual_C = new wLimitToAnnual_C(this);
                }
                return this.mwLimitToAnnual_C;
            }
        }
        
        public wCommon_cbo wCommon_cbo
        {
            get
            {
                if ((this.mwCommon_cbo == null))
                {
                    this.mwCommon_cbo = new wCommon_cbo(this);
                }
                return this.mwCommon_cbo;
            }
        }
        
        public wCommon_txt wCommon_txt
        {
            get
            {
                if ((this.mwCommon_txt == null))
                {
                    this.mwCommon_txt = new wCommon_txt(this);
                }
                return this.mwCommon_txt;
            }
        }
        
        public wRateForYear_V wRateForYear_V
        {
            get
            {
                if ((this.mwRateForYear_V == null))
                {
                    this.mwRateForYear_V = new wRateForYear_V(this);
                }
                return this.mwRateForYear_V;
            }
        }
        
        public wRateForYear_P wRateForYear_P
        {
            get
            {
                if ((this.mwRateForYear_P == null))
                {
                    this.mwRateForYear_P = new wRateForYear_P(this);
                }
                return this.mwRateForYear_P;
            }
        }
        
        public wRateForYear_T wRateForYear_T
        {
            get
            {
                if ((this.mwRateForYear_T == null))
                {
                    this.mwRateForYear_T = new wRateForYear_T(this);
                }
                return this.mwRateForYear_T;
            }
        }
        
        public wSameRatesApplies wSameRatesApplies
        {
            get
            {
                if ((this.mwSameRatesApplies == null))
                {
                    this.mwSameRatesApplies = new wSameRatesApplies(this);
                }
                return this.mwSameRatesApplies;
            }
        }
        
        public wRate_V wRate_V
        {
            get
            {
                if ((this.mwRate_V == null))
                {
                    this.mwRate_V = new wRate_V(this);
                }
                return this.mwRate_V;
            }
        }
        
        public wRate_P wRate_P
        {
            get
            {
                if ((this.mwRate_P == null))
                {
                    this.mwRate_P = new wRate_P(this);
                }
                return this.mwRate_P;
            }
        }
        
        public wRate_T wRate_T
        {
            get
            {
                if ((this.mwRate_T == null))
                {
                    this.mwRate_T = new wRate_T(this);
                }
                return this.mwRate_T;
            }
        }
        
        public wProjectedPay wProjectedPay
        {
            get
            {
                if ((this.mwProjectedPay == null))
                {
                    this.mwProjectedPay = new wProjectedPay(this);
                }
                return this.mwProjectedPay;
            }
        }
        
        public wService wService
        {
            get
            {
                if ((this.mwService == null))
                {
                    this.mwService = new wService(this);
                }
                return this.mwService;
            }
        }
        
        public wRatesTiersBasedOn wRatesTiersBasedOn
        {
            get
            {
                if ((this.mwRatesTiersBasedOn == null))
                {
                    this.mwRatesTiersBasedOn = new wRatesTiersBasedOn(this);
                }
                return this.mwRatesTiersBasedOn;
            }
        }
        
        public wIntegrationType wIntegrationType
        {
            get
            {
                if ((this.mwIntegrationType == null))
                {
                    this.mwIntegrationType = new wIntegrationType(this);
                }
                return this.mwIntegrationType;
            }
        }
        
        public UI_cboVariableWindow UI_cboVariableWindow
        {
            get
            {
                if ((this.mUI_cboVariableWindow == null))
                {
                    this.mUI_cboVariableWindow = new UI_cboVariableWindow(this);
                }
                return this.mUI_cboVariableWindow;
            }
        }
        
        public UI_numEditConstantWindow UI_numEditConstantWindow
        {
            get
            {
                if ((this.mUI_numEditConstantWindow == null))
                {
                    this.mUI_numEditConstantWindow = new UI_numEditConstantWindow(this);
                }
                return this.mUI_numEditConstantWindow;
            }
        }
        
        public wInterestCredited wInterestCredited
        {
            get
            {
                if ((this.mwInterestCredited == null))
                {
                    this.mwInterestCredited = new wInterestCredited(this);
                }
                return this.mwInterestCredited;
            }
        }
        
        public wContributionsMade wContributionsMade
        {
            get
            {
                if ((this.mwContributionsMade == null))
                {
                    this.mwContributionsMade = new wContributionsMade(this);
                }
                return this.mwContributionsMade;
            }
        }
        
        public wCommon_txt_P wCommon_txt_P
        {
            get
            {
                if ((this.mwCommon_txt_P == null))
                {
                    this.mwCommon_txt_P = new wCommon_txt_P(this);
                }
                return this.mwCommon_txt_P;
            }
        }
        
        public wInterestCredited_txt wInterestCredited_txt
        {
            get
            {
                if ((this.mwInterestCredited_txt == null))
                {
                    this.mwInterestCredited_txt = new wInterestCredited_txt(this);
                }
                return this.mwInterestCredited_txt;
            }
        }
        
        public wContributionsMade_txt wContributionsMade_txt
        {
            get
            {
                if ((this.mwContributionsMade_txt == null))
                {
                    this.mwContributionsMade_txt = new wContributionsMade_txt(this);
                }
                return this.mwContributionsMade_txt;
            }
        }
        
        public wStopContributionAt_V_BR wStopContributionAt_V_BR
        {
            get
            {
                if ((this.mwStopContributionAt_V_BR == null))
                {
                    this.mwStopContributionAt_V_BR = new wStopContributionAt_V_BR(this);
                }
                return this.mwStopContributionAt_V_BR;
            }
        }
        
        public wStopContributionAt_C_BR wStopContributionAt_C_BR
        {
            get
            {
                if ((this.mwStopContributionAt_C_BR == null))
                {
                    this.mwStopContributionAt_C_BR = new wStopContributionAt_C_BR(this);
                }
                return this.mwStopContributionAt_C_BR;
            }
        }
        
        public wRate_V_BR wRate_V_BR
        {
            get
            {
                if ((this.mwRate_V_BR == null))
                {
                    this.mwRate_V_BR = new wRate_V_BR(this);
                }
                return this.mwRate_V_BR;
            }
        }
        
        public wRate_T_BR wRate_T_BR
        {
            get
            {
                if ((this.mwRate_T_BR == null))
                {
                    this.mwRate_T_BR = new wRate_T_BR(this);
                }
                return this.mwRate_T_BR;
            }
        }
        
        public wApplyNumberOfContributions wApplyNumberOfContributions
        {
            get
            {
                if ((this.mwApplyNumberOfContributions == null))
                {
                    this.mwApplyNumberOfContributions = new wApplyNumberOfContributions(this);
                }
                return this.mwApplyNumberOfContributions;
            }
        }
        #endregion
        
        #region Fields
        private wStandard mwStandard;
        
        private wCustomCode mwCustomCode;
        
        private wFormulaCalculated mwFormulaCalculated;
        
        private wPredefinedAmount_rd mwPredefinedAmount_rd;
        
        private wStartingBalanceAsOfOneYear mwStartingBalanceAsOfOneYear;
        
        private wStartingBalance_V mwStartingBalance_V;
        
        private wStartingBalance_C mwStartingBalance_C;
        
        private wPreDefinedAmount mwPreDefinedAmount;
        
        private wStopContributionAt_V mwStopContributionAt_V;
        
        private wStopContributionAt_C mwStopContributionAt_C;
        
        private wOffsetToAnnual_V mwOffsetToAnnual_V;
        
        private wOffsetToAnnual_C mwOffsetToAnnual_C;
        
        private wLimitToAnnual_V mwLimitToAnnual_V;
        
        private wLimitToAnnual_C mwLimitToAnnual_C;
        
        private wCommon_cbo mwCommon_cbo;
        
        private wCommon_txt mwCommon_txt;
        
        private wRateForYear_V mwRateForYear_V;
        
        private wRateForYear_P mwRateForYear_P;
        
        private wRateForYear_T mwRateForYear_T;
        
        private wSameRatesApplies mwSameRatesApplies;
        
        private wRate_V mwRate_V;
        
        private wRate_P mwRate_P;
        
        private wRate_T mwRate_T;
        
        private wProjectedPay mwProjectedPay;
        
        private wService mwService;
        
        private wRatesTiersBasedOn mwRatesTiersBasedOn;
        
        private wIntegrationType mwIntegrationType;
        
        private UI_cboVariableWindow mUI_cboVariableWindow;
        
        private UI_numEditConstantWindow mUI_numEditConstantWindow;
        
        private wInterestCredited mwInterestCredited;
        
        private wContributionsMade mwContributionsMade;
        
        private wCommon_txt_P mwCommon_txt_P;
        
        private wInterestCredited_txt mwInterestCredited_txt;
        
        private wContributionsMade_txt mwContributionsMade_txt;
        
        private wStopContributionAt_V_BR mwStopContributionAt_V_BR;
        
        private wStopContributionAt_C_BR mwStopContributionAt_C_BR;
        
        private wRate_V_BR mwRate_V_BR;
        
        private wRate_T_BR mwRate_T_BR;
        
        private wApplyNumberOfContributions mwApplyNumberOfContributions;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStandard : WinWindow
    {
        
        public wStandard(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radStandard";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Standard";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCustomCode : WinWindow
    {
        
        public wCustomCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCustomCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom code";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFormulaCalculated : WinWindow
    {
        
        public wFormulaCalculated(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFormulaCalculated";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Formula calculated";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPredefinedAmount_rd : WinWindow
    {
        
        public wPredefinedAmount_rd(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPreDefinedAmount";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Pre-defined amount";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStartingBalanceAsOfOneYear : WinWindow
    {
        
        public wStartingBalanceAsOfOneYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkStartingBalanceAsOfOneYearBeforeValuationDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Starting balance as of one year before valuation date";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStartingBalance_V : WinWindow
    {
        
        public wStartingBalance_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStartingBalance_C : WinWindow
    {
        
        public wStartingBalance_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPreDefinedAmount : WinWindow
    {
        
        public wPreDefinedAmount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPreDefinedAmount";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Stop contributions at";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStopContributionAt_V : WinWindow
    {
        
        public wStopContributionAt_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStopContributionAt_C : WinWindow
    {
        
        public wStopContributionAt_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOffsetToAnnual_V : WinWindow
    {
        
        public wOffsetToAnnual_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOffsetToAnnual_C : WinWindow
    {
        
        public wOffsetToAnnual_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLimitToAnnual_V : WinWindow
    {
        
        public wLimitToAnnual_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLimitToAnnual_C : WinWindow
    {
        
        public wLimitToAnnual_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo : WinWindow
    {
        
        public wCommon_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt : WinWindow
    {
        
        public wCommon_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRateForYear_V : WinWindow
    {
        
        public wRateForYear_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRateForYear_P : WinWindow
    {
        
        public wRateForYear_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRateForYear_T : WinWindow
    {
        
        public wRateForYear_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameRatesApplies : WinWindow
    {
        
        public wSameRatesApplies(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSameRateApplies";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Same rate applies before       and after termination";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRate_V : WinWindow
    {
        
        public wRate_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRate_P : WinWindow
    {
        
        public wRate_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRate_T : WinWindow
    {
        
        public wRate_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wProjectedPay : WinWindow
    {
        
        public wProjectedPay(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboProjectedPay";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Number of breakpoints";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wService : WinWindow
    {
        
        public wService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Enter contribution rate as portion of pay (enter as decimal)";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRatesTiersBasedOn : WinWindow
    {
        
        public wRatesTiersBasedOn(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboRateTiersBasis";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Pay limit";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIntegrationType : WinWindow
    {
        
        public wIntegrationType(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboIntegrationType";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Formula";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_cboVariableWindow : WinWindow
    {
        
        public UI_cboVariableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI_cboVariableComboBox
        {
            get
            {
                if ((this.mUI_cboVariableComboBox == null))
                {
                    this.mUI_cboVariableComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUI_cboVariableComboBox.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_cboVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI_cboVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_numEditConstantWindow : WinWindow
    {
        
        public UI_numEditConstantWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UI_numEditConstantEdit UI_numEditConstantEdit
        {
            get
            {
                if ((this.mUI_numEditConstantEdit == null))
                {
                    this.mUI_numEditConstantEdit = new UI_numEditConstantEdit(this);
                }
                return this.mUI_numEditConstantEdit;
            }
        }
        #endregion
        
        #region Fields
        private UI_numEditConstantEdit mUI_numEditConstantEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_numEditConstantEdit : WinEdit
    {
        
        public UI_numEditConstantEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestCredited : WinWindow
    {
        
        public wInterestCredited(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboInterestCredited";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Interest credit before                  termination";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContributionsMade : WinWindow
    {
        
        public wContributionsMade(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboContributionsMade";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt_P : WinWindow
    {
        
        public wCommon_txt_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestCredited_txt : WinWindow
    {
        
        public wInterestCredited_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numFrequency";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumFrequencyEdit1
        {
            get
            {
                if ((this.mUINumFrequencyEdit1 == null))
                {
                    this.mUINumFrequencyEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumFrequencyEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumFrequencyEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumFrequencyEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumFrequencyEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContributionsMade_txt : WinWindow
    {
        
        public wContributionsMade_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numproportionOfInterestEarnedOnCurrentYearContributions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt3 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt3(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt3 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt3 : WinEdit
    {
        
        public txt3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumproportionOfInterEdit1
        {
            get
            {
                if ((this.mUINumproportionOfInterEdit1 == null))
                {
                    this.mUINumproportionOfInterEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumproportionOfInterEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumproportionOfInterEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumproportionOfInterEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumproportionOfInterEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStopContributionAt_V_BR : WinWindow
    {
        
        public wStopContributionAt_V_BR(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStopContributionAt_C_BR : WinWindow
    {
        
        public wStopContributionAt_C_BR(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRate_V_BR : WinWindow
    {
        
        public wRate_V_BR(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRate_T_BR : WinWindow
    {
        
        public wRate_T_BR(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wApplyNumberOfContributions : WinWindow
    {
        
        public wApplyNumberOfContributions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkApplyNumberOfContributionsPerYearFactor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply number of contributions per year factor";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
}
