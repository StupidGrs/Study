// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.AssumptionsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Assumptions
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        
        public wNewLiabilityTypeFolder wNewLiabilityTypeFolder
        {
            get
            {
                if ((this.mwNewLiabilityTypeFolder == null))
                {
                    this.mwNewLiabilityTypeFolder = new wNewLiabilityTypeFolder();
                }
                return this.mwNewLiabilityTypeFolder;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        
        private wNewLiabilityTypeFolder mwNewLiabilityTypeFolder;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public tvNaviTree tvNaviTree
        {
            get
            {
                if ((this.mtvNaviTree == null))
                {
                    this.mtvNaviTree = new tvNaviTree(this);
                }
                return this.mtvNaviTree;
            }
        }
        
        public wTreeViewEdit wTreeViewEdit
        {
            get
            {
                if ((this.mwTreeViewEdit == null))
                {
                    this.mwTreeViewEdit = new wTreeViewEdit(this);
                }
                return this.mwTreeViewEdit;
            }
        }
        
        public wAssmp_Decrement_Para_Adjustments wAssmp_Decrement_Para_Adjustments
        {
            get
            {
                if ((this.mwAssmp_Decrement_Para_Adjustments == null))
                {
                    this.mwAssmp_Decrement_Para_Adjustments = new wAssmp_Decrement_Para_Adjustments(this);
                }
                return this.mwAssmp_Decrement_Para_Adjustments;
            }
        }
        
        public wAssmp_Decrement_Para_RetWithdrawDis_cbo wAssmp_Decrement_Para_RetWithdrawDis_cbo
        {
            get
            {
                if ((this.mwAssmp_Decrement_Para_RetWithdrawDis_cbo == null))
                {
                    this.mwAssmp_Decrement_Para_RetWithdrawDis_cbo = new wAssmp_Decrement_Para_RetWithdrawDis_cbo(this);
                }
                return this.mwAssmp_Decrement_Para_RetWithdrawDis_cbo;
            }
        }
        
        public wAssmp_Decrement_Cond_PreDefinedEligibility_rd wAssmp_Decrement_Cond_PreDefinedEligibility_rd
        {
            get
            {
                if ((this.mwAssmp_Decrement_Cond_PreDefinedEligibility_rd == null))
                {
                    this.mwAssmp_Decrement_Cond_PreDefinedEligibility_rd = new wAssmp_Decrement_Cond_PreDefinedEligibility_rd(this);
                }
                return this.mwAssmp_Decrement_Cond_PreDefinedEligibility_rd;
            }
        }
        
        public wAssmp_Decrement_Cond_LocalEligibility_rd wAssmp_Decrement_Cond_LocalEligibility_rd
        {
            get
            {
                if ((this.mwAssmp_Decrement_Cond_LocalEligibility_rd == null))
                {
                    this.mwAssmp_Decrement_Cond_LocalEligibility_rd = new wAssmp_Decrement_Cond_LocalEligibility_rd(this);
                }
                return this.mwAssmp_Decrement_Cond_LocalEligibility_rd;
            }
        }
        
        public wAssmp_Decrement_Cond_LocalEligibility_txt wAssmp_Decrement_Cond_LocalEligibility_txt
        {
            get
            {
                if ((this.mwAssmp_Decrement_Cond_LocalEligibility_txt == null))
                {
                    this.mwAssmp_Decrement_Cond_LocalEligibility_txt = new wAssmp_Decrement_Cond_LocalEligibility_txt(this);
                }
                return this.mwAssmp_Decrement_Cond_LocalEligibility_txt;
            }
        }
        
        public wAssmp_Decrement_Cond_AddToEligibilities wAssmp_Decrement_Cond_AddToEligibilities
        {
            get
            {
                if ((this.mwAssmp_Decrement_Cond_AddToEligibilities == null))
                {
                    this.mwAssmp_Decrement_Cond_AddToEligibilities = new wAssmp_Decrement_Cond_AddToEligibilities(this);
                }
                return this.mwAssmp_Decrement_Cond_AddToEligibilities;
            }
        }
        
        public wAssmp_Decrement_Cond_EligibilityCondition wAssmp_Decrement_Cond_EligibilityCondition
        {
            get
            {
                if ((this.mwAssmp_Decrement_Cond_EligibilityCondition == null))
                {
                    this.mwAssmp_Decrement_Cond_EligibilityCondition = new wAssmp_Decrement_Cond_EligibilityCondition(this);
                }
                return this.mwAssmp_Decrement_Cond_EligibilityCondition;
            }
        }
        
        public wValidate wValidate
        {
            get
            {
                if ((this.mwValidate == null))
                {
                    this.mwValidate = new wValidate(this);
                }
                return this.mwValidate;
            }
        }
        
        public wTab wTab
        {
            get
            {
                if ((this.mwTab == null))
                {
                    this.mwTab = new wTab(this);
                }
                return this.mwTab;
            }
        }
        
        public wAssmp_Decrement_Cond_PrdefinedEligibility_cbo wAssmp_Decrement_Cond_PrdefinedEligibility_cbo
        {
            get
            {
                if ((this.mwAssmp_Decrement_Cond_PrdefinedEligibility_cbo == null))
                {
                    this.mwAssmp_Decrement_Cond_PrdefinedEligibility_cbo = new wAssmp_Decrement_Cond_PrdefinedEligibility_cbo(this);
                }
                return this.mwAssmp_Decrement_Cond_PrdefinedEligibility_cbo;
            }
        }
        
        public wProvision_CustomCode_FPGrid wProvision_CustomCode_FPGrid
        {
            get
            {
                if ((this.mwProvision_CustomCode_FPGrid == null))
                {
                    this.mwProvision_CustomCode_FPGrid = new wProvision_CustomCode_FPGrid(this);
                }
                return this.mwProvision_CustomCode_FPGrid;
            }
        }
        
        public wProvision_CustomCode_rd wProvision_CustomCode_rd
        {
            get
            {
                if ((this.mwProvision_CustomCode_rd == null))
                {
                    this.mwProvision_CustomCode_rd = new wProvision_CustomCode_rd(this);
                }
                return this.mwProvision_CustomCode_rd;
            }
        }
        
        public wTreeViewTab wTreeViewTab
        {
            get
            {
                if ((this.mwTreeViewTab == null))
                {
                    this.mwTreeViewTab = new wTreeViewTab(this);
                }
                return this.mwTreeViewTab;
            }
        }
        
        public wAssumption_Month_UK wAssumption_Month_UK
        {
            get
            {
                if ((this.mwAssumption_Month_UK == null))
                {
                    this.mwAssumption_Month_UK = new wAssumption_Month_UK(this);
                }
                return this.mwAssumption_Month_UK;
            }
        }
        
        public wAssumption_Year_UK wAssumption_Year_UK
        {
            get
            {
                if ((this.mwAssumption_Year_UK == null))
                {
                    this.mwAssumption_Year_UK = new wAssumption_Year_UK(this);
                }
                return this.mwAssumption_Year_UK;
            }
        }
        
        public wAssumption_SolvencyBasis_UK wAssumption_SolvencyBasis_UK
        {
            get
            {
                if ((this.mwAssumption_SolvencyBasis_UK == null))
                {
                    this.mwAssumption_SolvencyBasis_UK = new wAssumption_SolvencyBasis_UK(this);
                }
                return this.mwAssumption_SolvencyBasis_UK;
            }
        }
        
        public wInputTextBox_Internal wInputTextBox_Internal
        {
            get
            {
                if ((this.mwInputTextBox_Internal == null))
                {
                    this.mwInputTextBox_Internal = new wInputTextBox_Internal(this);
                }
                return this.mwInputTextBox_Internal;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public wAssmp_Decrement_Para_Service_cbo wAssmp_Decrement_Para_Service_cbo
        {
            get
            {
                if ((this.mwAssmp_Decrement_Para_Service_cbo == null))
                {
                    this.mwAssmp_Decrement_Para_Service_cbo = new wAssmp_Decrement_Para_Service_cbo(this);
                }
                return this.mwAssmp_Decrement_Para_Service_cbo;
            }
        }
        
        public wAssmp_Decrement_AdjustmentOperat wAssmp_Decrement_AdjustmentOperat
        {
            get
            {
                if ((this.mwAssmp_Decrement_AdjustmentOperat == null))
                {
                    this.mwAssmp_Decrement_AdjustmentOperat = new wAssmp_Decrement_AdjustmentOperat(this);
                }
                return this.mwAssmp_Decrement_AdjustmentOperat;
            }
        }
        
        public wAssmp_Decrement_Adjustment_txt wAssmp_Decrement_Adjustment_txt
        {
            get
            {
                if ((this.mwAssmp_Decrement_Adjustment_txt == null))
                {
                    this.mwAssmp_Decrement_Adjustment_txt = new wAssmp_Decrement_Adjustment_txt(this);
                }
                return this.mwAssmp_Decrement_Adjustment_txt;
            }
        }
        
        public wAssmp_Decrement_Other wAssmp_Decrement_Other
        {
            get
            {
                if ((this.mwAssmp_Decrement_Other == null))
                {
                    this.mwAssmp_Decrement_Other = new wAssmp_Decrement_Other(this);
                }
                return this.mwAssmp_Decrement_Other;
            }
        }
        
        public wAssump_Decrement_Adjustment_P wAssump_Decrement_Adjustment_P
        {
            get
            {
                if ((this.mwAssump_Decrement_Adjustment_P == null))
                {
                    this.mwAssump_Decrement_Adjustment_P = new wAssump_Decrement_Adjustment_P(this);
                }
                return this.mwAssump_Decrement_Adjustment_P;
            }
        }
        
        public wAssump_Decrement_Adjustment_C wAssump_Decrement_Adjustment_C
        {
            get
            {
                if ((this.mwAssump_Decrement_Adjustment_C == null))
                {
                    this.mwAssump_Decrement_Adjustment_C = new wAssump_Decrement_Adjustment_C(this);
                }
                return this.mwAssump_Decrement_Adjustment_C;
            }
        }
        
        public wCommT wCommT
        {
            get
            {
                if ((this.mwCommT == null))
                {
                    this.mwCommT = new wCommT(this);
                }
                return this.mwCommT;
            }
        }
        
        public wAdjustment_Tcbo wAdjustment_Tcbo
        {
            get
            {
                if ((this.mwAdjustment_Tcbo == null))
                {
                    this.mwAdjustment_Tcbo = new wAdjustment_Tcbo(this);
                }
                return this.mwAdjustment_Tcbo;
            }
        }
        
        public wAdjustment_T_extend wAdjustment_T_extend
        {
            get
            {
                if ((this.mwAdjustment_T_extend == null))
                {
                    this.mwAdjustment_T_extend = new wAdjustment_T_extend(this);
                }
                return this.mwAdjustment_T_extend;
            }
        }
        #endregion
        
        #region Fields
        private tvNaviTree mtvNaviTree;
        
        private wTreeViewEdit mwTreeViewEdit;
        
        private wAssmp_Decrement_Para_Adjustments mwAssmp_Decrement_Para_Adjustments;
        
        private wAssmp_Decrement_Para_RetWithdrawDis_cbo mwAssmp_Decrement_Para_RetWithdrawDis_cbo;
        
        private wAssmp_Decrement_Cond_PreDefinedEligibility_rd mwAssmp_Decrement_Cond_PreDefinedEligibility_rd;
        
        private wAssmp_Decrement_Cond_LocalEligibility_rd mwAssmp_Decrement_Cond_LocalEligibility_rd;
        
        private wAssmp_Decrement_Cond_LocalEligibility_txt mwAssmp_Decrement_Cond_LocalEligibility_txt;
        
        private wAssmp_Decrement_Cond_AddToEligibilities mwAssmp_Decrement_Cond_AddToEligibilities;
        
        private wAssmp_Decrement_Cond_EligibilityCondition mwAssmp_Decrement_Cond_EligibilityCondition;
        
        private wValidate mwValidate;
        
        private wTab mwTab;
        
        private wAssmp_Decrement_Cond_PrdefinedEligibility_cbo mwAssmp_Decrement_Cond_PrdefinedEligibility_cbo;
        
        private wProvision_CustomCode_FPGrid mwProvision_CustomCode_FPGrid;
        
        private wProvision_CustomCode_rd mwProvision_CustomCode_rd;
        
        private wTreeViewTab mwTreeViewTab;
        
        private wAssumption_Month_UK mwAssumption_Month_UK;
        
        private wAssumption_Year_UK mwAssumption_Year_UK;
        
        private wAssumption_SolvencyBasis_UK mwAssumption_SolvencyBasis_UK;
        
        private wInputTextBox_Internal mwInputTextBox_Internal;
        
        private UIItemWindow mUIItemWindow;
        
        private wAssmp_Decrement_Para_Service_cbo mwAssmp_Decrement_Para_Service_cbo;
        
        private wAssmp_Decrement_AdjustmentOperat mwAssmp_Decrement_AdjustmentOperat;
        
        private wAssmp_Decrement_Adjustment_txt mwAssmp_Decrement_Adjustment_txt;
        
        private wAssmp_Decrement_Other mwAssmp_Decrement_Other;
        
        private wAssump_Decrement_Adjustment_P mwAssump_Decrement_Adjustment_P;
        
        private wAssump_Decrement_Adjustment_C mwAssump_Decrement_Adjustment_C;
        
        private wCommT mwCommT;
        
        private wAdjustment_Tcbo mwAdjustment_Tcbo;
        
        private wAdjustment_T_extend mwAdjustment_T_extend;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class tvNaviTree : WinWindow
    {
        
        public tvNaviTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "trvLibraryExplorer";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIAssumptionsTreeItem
        {
            get
            {
                if ((this.mUIAssumptionsTreeItem == null))
                {
                    this.mUIAssumptionsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIAssumptionsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Assumptions";
                    this.mUIAssumptionsTreeItem.SearchProperties["Value"] = "0";
                    this.mUIAssumptionsTreeItem.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIAssumptionsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIAssumptionsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTreeViewEdit : WinWindow
    {
        
        public wTreeViewEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtName
        {
            get
            {
                if ((this.mtxtName == null))
                {
                    this.mtxtName = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtName.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtName;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Para_Adjustments : WinWindow
    {
        
        public wAssmp_Decrement_Para_Adjustments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbxAdjustments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkAdjustments
        {
            get
            {
                if ((this.mchkAdjustments == null))
                {
                    this.mchkAdjustments = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkAdjustments.SearchProperties[WinCheckBox.PropertyNames.Name] = "Adjustments";
                    this.mchkAdjustments.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkAdjustments;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkAdjustments;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Para_RetWithdrawDis_cbo : WinWindow
    {
        
        public wAssmp_Decrement_Para_RetWithdrawDis_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo_RetWithdrawDis
        {
            get
            {
                if ((this.mcbo_RetWithdrawDis == null))
                {
                    this.mcbo_RetWithdrawDis = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo_RetWithdrawDis.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo_RetWithdrawDis;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo_RetWithdrawDis;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Cond_PreDefinedEligibility_rd : WinWindow
    {
        
        public wAssmp_Decrement_Cond_PreDefinedEligibility_rd(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radPredefined";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPreDefinedEligibility
        {
            get
            {
                if ((this.mrdPreDefinedEligibility == null))
                {
                    this.mrdPreDefinedEligibility = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPreDefinedEligibility.SearchProperties[WinRadioButton.PropertyNames.Name] = "Pre-Defined Eligibility";
                    this.mrdPreDefinedEligibility.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPreDefinedEligibility;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPreDefinedEligibility;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Cond_LocalEligibility_rd : WinWindow
    {
        
        public wAssmp_Decrement_Cond_LocalEligibility_rd(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radCustom";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdLocalEligibility
        {
            get
            {
                if ((this.mrdLocalEligibility == null))
                {
                    this.mrdLocalEligibility = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdLocalEligibility.SearchProperties[WinRadioButton.PropertyNames.Name] = "Local Eligibility";
                    this.mrdLocalEligibility.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdLocalEligibility;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdLocalEligibility;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Cond_LocalEligibility_txt : WinWindow
    {
        
        public wAssmp_Decrement_Cond_LocalEligibility_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCustomEligibilityName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtLocalEligibility
        {
            get
            {
                if ((this.mtxtLocalEligibility == null))
                {
                    this.mtxtLocalEligibility = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtLocalEligibility.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtLocalEligibility;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtLocalEligibility;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Cond_AddToEligibilities : WinWindow
    {
        
        public wAssmp_Decrement_Cond_AddToEligibilities(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmdAddToPreDefined";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnAddToEligibilities
        {
            get
            {
                if ((this.mbtnAddToEligibilities == null))
                {
                    this.mbtnAddToEligibilities = new WinButton(this);
                    #region Search Criteria
                    this.mbtnAddToEligibilities.SearchProperties[WinButton.PropertyNames.Name] = "Add to Eligibilities";
                    this.mbtnAddToEligibilities.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnAddToEligibilities;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnAddToEligibilities;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Cond_EligibilityCondition : WinWindow
    {
        
        public wAssmp_Decrement_Cond_EligibilityCondition(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_acTextBox";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtEligibilityCondition
        {
            get
            {
                if ((this.mtxtEligibilityCondition == null))
                {
                    this.mtxtEligibilityCondition = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtEligibilityCondition.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtEligibilityCondition;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtEligibilityCondition;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValidate : WinWindow
    {
        
        public wValidate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnValidate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnValidate
        {
            get
            {
                if ((this.mbtnValidate == null))
                {
                    this.mbtnValidate = new WinButton(this);
                    #region Search Criteria
                    this.mbtnValidate.SearchProperties[WinButton.PropertyNames.Name] = "Validate";
                    this.mbtnValidate.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mbtnValidate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnValidate;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnValidate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTab : WinWindow
    {
        
        public wTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "fc4a45a7-1858-418d-95e6-8ea3ce86507e";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wTabList wTabList
        {
            get
            {
                if ((this.mwTabList == null))
                {
                    this.mwTabList = new wTabList(this);
                }
                return this.mwTabList;
            }
        }
        #endregion
        
        #region Fields
        private wTabList mwTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTabList : WinTabList
    {
        
        public wTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Name:";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIParametersTabPage
        {
            get
            {
                if ((this.mUIParametersTabPage == null))
                {
                    this.mUIParametersTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIParametersTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Parameters";
                    this.mUIParametersTabPage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIParametersTabPage;
            }
        }
        
        public WinTabPage UIConditionsTabPage
        {
            get
            {
                if ((this.mUIConditionsTabPage == null))
                {
                    this.mUIConditionsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIConditionsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Conditions";
                    this.mUIConditionsTabPage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIConditionsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIParametersTabPage;
        
        private WinTabPage mUIConditionsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Cond_PrdefinedEligibility_cbo : WinWindow
    {
        
        public wAssmp_Decrement_Cond_PrdefinedEligibility_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPrdefinedEligibility";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboPreDefinedEligibility
        {
            get
            {
                if ((this.mcboPreDefinedEligibility == null))
                {
                    this.mcboPreDefinedEligibility = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboPreDefinedEligibility.SearchProperties[WinComboBox.PropertyNames.Name] = "Local Eligibility";
                    this.mcboPreDefinedEligibility.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboPreDefinedEligibility;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboPreDefinedEligibility;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wProvision_CustomCode_FPGrid : WinWindow
    {
        
        public wProvision_CustomCode_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadCustomDefinitions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wProvision_CustomCode_rd : WinWindow
    {
        
        public wProvision_CustomCode_rd(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCustomCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCustomCode
        {
            get
            {
                if ((this.mrdCustomCode == null))
                {
                    this.mrdCustomCode = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCustomCode.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom code";
                    this.mrdCustomCode.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mrdCustomCode.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCustomCode;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCustomCode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTreeViewTab : WinWindow
    {
        
        public wTreeViewTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "wspLibraryExplorer";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTabPage tabTax
        {
            get
            {
                if ((this.mtabTax == null))
                {
                    this.mtabTax = new WinTabPage(this);
                    #region Search Criteria
                    this.mtabTax.SearchProperties[WinTabPage.PropertyNames.Name] = "Tax";
                    this.mtabTax.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtabTax;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mtabTax;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssumption_Month_UK : WinWindow
    {
        
        public wAssumption_Month_UK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboDayMonth";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssumption_Year_UK : WinWindow
    {
        
        public wAssumption_Year_UK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboYear";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Date";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssumption_SolvencyBasis_UK : WinWindow
    {
        
        public wAssumption_SolvencyBasis_UK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboBasis";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInputTextBox_Internal : WinWindow
    {
        
        public wInputTextBox_Internal(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "InputTextBox_Internal";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "18";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient UISpreadCustomDefinitiClient
        {
            get
            {
                if ((this.mUISpreadCustomDefinitiClient == null))
                {
                    this.mUISpreadCustomDefinitiClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISpreadCustomDefinitiClient.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUISpreadCustomDefinitiClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISpreadCustomDefinitiClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Para_Service_cbo : WinWindow
    {
        
        public wAssmp_Decrement_Para_Service_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableIndex2";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_AdjustmentOperat : WinWindow
    {
        
        public wAssmp_Decrement_AdjustmentOperat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAdjustment1Operator";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Adjustment_txt : WinWindow
    {
        
        public wAssmp_Decrement_Adjustment_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit : WinEdit
    {
        
        public Edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssmp_Decrement_Other : WinWindow
    {
        
        public wAssmp_Decrement_Other(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOther";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Other";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssump_Decrement_Adjustment_P : WinWindow
    {
        
        public wAssump_Decrement_Adjustment_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssump_Decrement_Adjustment_C : WinWindow
    {
        
        public wAssump_Decrement_Adjustment_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommT : WinWindow
    {
        
        public wCommT(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment_Tcbo : WinWindow
    {
        
        public wAdjustment_Tcbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment_T_extend : WinWindow
    {
        
        public wAdjustment_T_extend(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableIndex1";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNewLiabilityTypeFolder : WinWindow
    {
        
        public wNewLiabilityTypeFolder()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "New Liability Type Folder";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("New Liability Type Folder");
            #endregion
        }
        
        #region Properties
        public wFolderName wFolderName
        {
            get
            {
                if ((this.mwFolderName == null))
                {
                    this.mwFolderName = new wFolderName(this);
                }
                return this.mwFolderName;
            }
        }
        
        public wOK wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK(this);
                }
                return this.mwOK;
            }
        }
        
        public wListLiabilityTypes wListLiabilityTypes
        {
            get
            {
                if ((this.mwListLiabilityTypes == null))
                {
                    this.mwListLiabilityTypes = new wListLiabilityTypes(this);
                }
                return this.mwListLiabilityTypes;
            }
        }
        #endregion
        
        #region Fields
        private wFolderName mwFolderName;
        
        private wOK mwOK;
        
        private wListLiabilityTypes mwListLiabilityTypes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFolderName : WinWindow
    {
        
        public wFolderName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtFolderName";
            this.WindowTitles.Add("New Liability Type Folder");
            #endregion
        }
        
        #region Properties
        public WinEdit txtFolderName
        {
            get
            {
                if ((this.mtxtFolderName == null))
                {
                    this.mtxtFolderName = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtFolderName.SearchProperties[WinEdit.PropertyNames.Name] = "Folder Name";
                    this.mtxtFolderName.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mtxtFolderName;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtFolderName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK : WinWindow
    {
        
        public wOK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("New Liability Type Folder");
            #endregion
        }
        
        #region Properties
        public WinButton btnOK
        {
            get
            {
                if ((this.mbtnOK == null))
                {
                    this.mbtnOK = new WinButton(this);
                    #region Search Criteria
                    this.mbtnOK.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtnOK.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mbtnOK;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wListLiabilityTypes : WinList
    {
        
        public wListLiabilityTypes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Includes which liability types?";
            this.WindowTitles.Add("New Liability Type Folder");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkEAN
        {
            get
            {
                if ((this.mchkEAN == null))
                {
                    this.mchkEAN = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkEAN.SearchProperties[WinCheckBox.PropertyNames.Name] = "EAN";
                    this.mchkEAN.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkEAN;
            }
        }
        
        public WinCheckBox chkFAS35PVAB
        {
            get
            {
                if ((this.mchkFAS35PVAB == null))
                {
                    this.mchkFAS35PVAB = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkFAS35PVAB.SearchProperties[WinCheckBox.PropertyNames.Name] = "FAS 35 PVAB";
                    this.mchkFAS35PVAB.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkFAS35PVAB;
            }
        }
        
        public WinCheckBox chkFAS35PVVB
        {
            get
            {
                if ((this.mchkFAS35PVVB == null))
                {
                    this.mchkFAS35PVVB = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkFAS35PVVB.SearchProperties[WinCheckBox.PropertyNames.Name] = "FAS 35 PVVB";
                    this.mchkFAS35PVVB.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkFAS35PVVB;
            }
        }
        
        public WinCheckBox chkNondiscrimination
        {
            get
            {
                if ((this.mchkNondiscrimination == null))
                {
                    this.mchkNondiscrimination = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkNondiscrimination.SearchProperties[WinCheckBox.PropertyNames.Name] = "Nondiscrimination";
                    this.mchkNondiscrimination.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkNondiscrimination;
            }
        }
        
        public WinCheckBox chkPBGCARPVVB
        {
            get
            {
                if ((this.mchkPBGCARPVVB == null))
                {
                    this.mchkPBGCARPVVB = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPBGCARPVVB.SearchProperties[WinCheckBox.PropertyNames.Name] = "PBGC AR PVVB";
                    this.mchkPBGCARPVVB.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPBGCARPVVB;
            }
        }
        
        public WinCheckBox chkPBGCNARPVVB
        {
            get
            {
                if ((this.mchkPBGCNARPVVB == null))
                {
                    this.mchkPBGCNARPVVB = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPBGCNARPVVB.SearchProperties[WinCheckBox.PropertyNames.Name] = "PBGC NAR PVVB";
                    this.mchkPBGCNARPVVB.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPBGCNARPVVB;
            }
        }
        
        public WinCheckBox chkPPAARMax
        {
            get
            {
                if ((this.mchkPPAARMax == null))
                {
                    this.mchkPPAARMax = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPPAARMax.SearchProperties[WinCheckBox.PropertyNames.Name] = "PPA AR Max";
                    this.mchkPPAARMax.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPPAARMax;
            }
        }
        
        public WinCheckBox chkPPAARMin
        {
            get
            {
                if ((this.mchkPPAARMin == null))
                {
                    this.mchkPPAARMin = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPPAARMin.SearchProperties[WinCheckBox.PropertyNames.Name] = "PPA AR Min";
                    this.mchkPPAARMin.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPPAARMin;
            }
        }
        
        public WinCheckBox chkPPAARPVVB
        {
            get
            {
                if ((this.mchkPPAARPVVB == null))
                {
                    this.mchkPPAARPVVB = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPPAARPVVB.SearchProperties[WinCheckBox.PropertyNames.Name] = "PPA AR PVVB";
                    this.mchkPPAARPVVB.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPPAARPVVB;
            }
        }
        
        public WinCheckBox chkPPANARMax
        {
            get
            {
                if ((this.mchkPPANARMax == null))
                {
                    this.mchkPPANARMax = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPPANARMax.SearchProperties[WinCheckBox.PropertyNames.Name] = "PPA NAR Max";
                    this.mchkPPANARMax.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPPANARMax;
            }
        }
        
        public WinCheckBox chkPPANARMin
        {
            get
            {
                if ((this.mchkPPANARMin == null))
                {
                    this.mchkPPANARMin = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPPANARMin.SearchProperties[WinCheckBox.PropertyNames.Name] = "PPA NAR Min";
                    this.mchkPPANARMin.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPPANARMin;
            }
        }
        
        public WinCheckBox chkPPANARPVVB
        {
            get
            {
                if ((this.mchkPPANARPVVB == null))
                {
                    this.mchkPPANARPVVB = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPPANARPVVB.SearchProperties[WinCheckBox.PropertyNames.Name] = "PPA NAR PVVB";
                    this.mchkPPANARPVVB.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPPANARPVVB;
            }
        }
        
        public WinCheckBox chkProjection
        {
            get
            {
                if ((this.mchkProjection == null))
                {
                    this.mchkProjection = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkProjection.SearchProperties[WinCheckBox.PropertyNames.Name] = "Projection";
                    this.mchkProjection.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkProjection;
            }
        }
        
        public WinCheckBox chkPBGCPlanTerm
        {
            get
            {
                if ((this.mchkPBGCPlanTerm == null))
                {
                    this.mchkPBGCPlanTerm = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkPBGCPlanTerm.SearchProperties[WinCheckBox.PropertyNames.Name] = "PBGC Plan Term";
                    this.mchkPBGCPlanTerm.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkPBGCPlanTerm;
            }
        }
        
        public WinCheckBox chkIntlAccountingABO
        {
            get
            {
                if ((this.mchkIntlAccountingABO == null))
                {
                    this.mchkIntlAccountingABO = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkIntlAccountingABO.SearchProperties[WinCheckBox.PropertyNames.Name] = "Intl Accounting ABO";
                    this.mchkIntlAccountingABO.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkIntlAccountingABO.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkIntlAccountingABO;
            }
        }
        
        public WinCheckBox chkIntlAccountingPBO
        {
            get
            {
                if ((this.mchkIntlAccountingPBO == null))
                {
                    this.mchkIntlAccountingPBO = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkIntlAccountingPBO.SearchProperties[WinCheckBox.PropertyNames.Name] = "Intl Accounting PBO";
                    this.mchkIntlAccountingPBO.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkIntlAccountingPBO.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkIntlAccountingPBO;
            }
        }
        
        public WinCheckBox chkTax
        {
            get
            {
                if ((this.mchkTax == null))
                {
                    this.mchkTax = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkTax.SearchProperties[WinCheckBox.PropertyNames.Name] = "Tax";
                    this.mchkTax.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkTax.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkTax;
            }
        }
        
        public WinCheckBox chkTrade
        {
            get
            {
                if ((this.mchkTrade == null))
                {
                    this.mchkTrade = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkTrade.SearchProperties[WinCheckBox.PropertyNames.Name] = "Trade";
                    this.mchkTrade.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkTrade.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkTrade;
            }
        }
        
        public WinCheckBox chkSolvency
        {
            get
            {
                if ((this.mchkSolvency == null))
                {
                    this.mchkSolvency = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkSolvency.SearchProperties[WinCheckBox.PropertyNames.Name] = "Solvency";
                    this.mchkSolvency.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkSolvency.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkSolvency;
            }
        }
        
        public WinCheckBox chkFunding
        {
            get
            {
                if ((this.mchkFunding == null))
                {
                    this.mchkFunding = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkFunding.SearchProperties[WinCheckBox.PropertyNames.Name] = "Funding";
                    this.mchkFunding.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkFunding.WindowTitles.Add("New Liability Type Folder");
                    #endregion
                }
                return this.mchkFunding;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkEAN;
        
        private WinCheckBox mchkFAS35PVAB;
        
        private WinCheckBox mchkFAS35PVVB;
        
        private WinCheckBox mchkNondiscrimination;
        
        private WinCheckBox mchkPBGCARPVVB;
        
        private WinCheckBox mchkPBGCNARPVVB;
        
        private WinCheckBox mchkPPAARMax;
        
        private WinCheckBox mchkPPAARMin;
        
        private WinCheckBox mchkPPAARPVVB;
        
        private WinCheckBox mchkPPANARMax;
        
        private WinCheckBox mchkPPANARMin;
        
        private WinCheckBox mchkPPANARPVVB;
        
        private WinCheckBox mchkProjection;
        
        private WinCheckBox mchkPBGCPlanTerm;
        
        private WinCheckBox mchkIntlAccountingABO;
        
        private WinCheckBox mchkIntlAccountingPBO;
        
        private WinCheckBox mchkTax;
        
        private WinCheckBox mchkTrade;
        
        private WinCheckBox mchkSolvency;
        
        private WinCheckBox mchkFunding;
        #endregion
    }
}
