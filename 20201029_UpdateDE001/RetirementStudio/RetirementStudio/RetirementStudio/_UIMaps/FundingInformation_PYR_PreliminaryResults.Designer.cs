// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.FundingInformation_PYR_PreliminaryResultsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class FundingInformation_PYR_PreliminaryResults
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wPlanDates_OriginalPlanEffectDate wPlanDates_OriginalPlanEffectDate
        {
            get
            {
                if ((this.mwPlanDates_OriginalPlanEffectDate == null))
                {
                    this.mwPlanDates_OriginalPlanEffectDate = new wPlanDates_OriginalPlanEffectDate(this);
                }
                return this.mwPlanDates_OriginalPlanEffectDate;
            }
        }
        
        public wPlanDates_BeginningOfPlanYear wPlanDates_BeginningOfPlanYear
        {
            get
            {
                if ((this.mwPlanDates_BeginningOfPlanYear == null))
                {
                    this.mwPlanDates_BeginningOfPlanYear = new wPlanDates_BeginningOfPlanYear(this);
                }
                return this.mwPlanDates_BeginningOfPlanYear;
            }
        }
        
        public wPlanDates_EndOfPlanYear wPlanDates_EndOfPlanYear
        {
            get
            {
                if ((this.mwPlanDates_EndOfPlanYear == null))
                {
                    this.mwPlanDates_EndOfPlanYear = new wPlanDates_EndOfPlanYear(this);
                }
                return this.mwPlanDates_EndOfPlanYear;
            }
        }
        
        public wPlanDates_ValuationDate wPlanDates_ValuationDate
        {
            get
            {
                if ((this.mwPlanDates_ValuationDate == null))
                {
                    this.mwPlanDates_ValuationDate = new wPlanDates_ValuationDate(this);
                }
                return this.mwPlanDates_ValuationDate;
            }
        }
        
        public wPlanDates_ValuationYear wPlanDates_ValuationYear
        {
            get
            {
                if ((this.mwPlanDates_ValuationYear == null))
                {
                    this.mwPlanDates_ValuationYear = new wPlanDates_ValuationYear(this);
                }
                return this.mwPlanDates_ValuationYear;
            }
        }
        
        public wPlanDates_PlanTotallyFrozen wPlanDates_PlanTotallyFrozen
        {
            get
            {
                if ((this.mwPlanDates_PlanTotallyFrozen == null))
                {
                    this.mwPlanDates_PlanTotallyFrozen = new wPlanDates_PlanTotallyFrozen(this);
                }
                return this.mwPlanDates_PlanTotallyFrozen;
            }
        }
        
        public wPBGC_PBGCFlatRate_ParticipantCount wPBGC_PBGCFlatRate_ParticipantCount
        {
            get
            {
                if ((this.mwPBGC_PBGCFlatRate_ParticipantCount == null))
                {
                    this.mwPBGC_PBGCFlatRate_ParticipantCount = new wPBGC_PBGCFlatRate_ParticipantCount(this);
                }
                return this.mwPBGC_PBGCFlatRate_ParticipantCount;
            }
        }
        
        public wPBGC_PBGCFlatRate_PerParticipant wPBGC_PBGCFlatRate_PerParticipant
        {
            get
            {
                if ((this.mwPBGC_PBGCFlatRate_PerParticipant == null))
                {
                    this.mwPBGC_PBGCFlatRate_PerParticipant = new wPBGC_PBGCFlatRate_PerParticipant(this);
                }
                return this.mwPBGC_PBGCFlatRate_PerParticipant;
            }
        }
        
        public wPBGC_PBGCFlatRate_FlatRatePremium wPBGC_PBGCFlatRate_FlatRatePremium
        {
            get
            {
                if ((this.mwPBGC_PBGCFlatRate_FlatRatePremium == null))
                {
                    this.mwPBGC_PBGCFlatRate_FlatRatePremium = new wPBGC_PBGCFlatRate_FlatRatePremium(this);
                }
                return this.mwPBGC_PBGCFlatRate_FlatRatePremium;
            }
        }
        
        public wPBGC_NotAtRisk_InPayStatus wPBGC_NotAtRisk_InPayStatus
        {
            get
            {
                if ((this.mwPBGC_NotAtRisk_InPayStatus == null))
                {
                    this.mwPBGC_NotAtRisk_InPayStatus = new wPBGC_NotAtRisk_InPayStatus(this);
                }
                return this.mwPBGC_NotAtRisk_InPayStatus;
            }
        }
        
        public wPBGC_NotAtRisk_DeferredStatus wPBGC_NotAtRisk_DeferredStatus
        {
            get
            {
                if ((this.mwPBGC_NotAtRisk_DeferredStatus == null))
                {
                    this.mwPBGC_NotAtRisk_DeferredStatus = new wPBGC_NotAtRisk_DeferredStatus(this);
                }
                return this.mwPBGC_NotAtRisk_DeferredStatus;
            }
        }
        
        public wPBGC_NotAtRisk_VestedActives wPBGC_NotAtRisk_VestedActives
        {
            get
            {
                if ((this.mwPBGC_NotAtRisk_VestedActives == null))
                {
                    this.mwPBGC_NotAtRisk_VestedActives = new wPBGC_NotAtRisk_VestedActives(this);
                }
                return this.mwPBGC_NotAtRisk_VestedActives;
            }
        }
        
        public wPBGC_NotAtRisk_Total wPBGC_NotAtRisk_Total
        {
            get
            {
                if ((this.mwPBGC_NotAtRisk_Total == null))
                {
                    this.mwPBGC_NotAtRisk_Total = new wPBGC_NotAtRisk_Total(this);
                }
                return this.mwPBGC_NotAtRisk_Total;
            }
        }
        
        public wPBGC_ExpenseLoad_InPayStatus wPBGC_ExpenseLoad_InPayStatus
        {
            get
            {
                if ((this.mwPBGC_ExpenseLoad_InPayStatus == null))
                {
                    this.mwPBGC_ExpenseLoad_InPayStatus = new wPBGC_ExpenseLoad_InPayStatus(this);
                }
                return this.mwPBGC_ExpenseLoad_InPayStatus;
            }
        }
        
        public wPBGC_ExpenseLoad_DeferredStatus wPBGC_ExpenseLoad_DeferredStatus
        {
            get
            {
                if ((this.mwPBGC_ExpenseLoad_DeferredStatus == null))
                {
                    this.mwPBGC_ExpenseLoad_DeferredStatus = new wPBGC_ExpenseLoad_DeferredStatus(this);
                }
                return this.mwPBGC_ExpenseLoad_DeferredStatus;
            }
        }
        
        public wPBGC_ExpenseLoad_VestedActives wPBGC_ExpenseLoad_VestedActives
        {
            get
            {
                if ((this.mwPBGC_ExpenseLoad_VestedActives == null))
                {
                    this.mwPBGC_ExpenseLoad_VestedActives = new wPBGC_ExpenseLoad_VestedActives(this);
                }
                return this.mwPBGC_ExpenseLoad_VestedActives;
            }
        }
        
        public wPBGC_ExpenseLoad_Total wPBGC_ExpenseLoad_Total
        {
            get
            {
                if ((this.mwPBGC_ExpenseLoad_Total == null))
                {
                    this.mwPBGC_ExpenseLoad_Total = new wPBGC_ExpenseLoad_Total(this);
                }
                return this.mwPBGC_ExpenseLoad_Total;
            }
        }
        
        public wPBGC_AtRiskNoExpense_InPayStatus wPBGC_AtRiskNoExpense_InPayStatus
        {
            get
            {
                if ((this.mwPBGC_AtRiskNoExpense_InPayStatus == null))
                {
                    this.mwPBGC_AtRiskNoExpense_InPayStatus = new wPBGC_AtRiskNoExpense_InPayStatus(this);
                }
                return this.mwPBGC_AtRiskNoExpense_InPayStatus;
            }
        }
        
        public wPBGC_AtRiskNoExpense_DeferredStatus wPBGC_AtRiskNoExpense_DeferredStatus
        {
            get
            {
                if ((this.mwPBGC_AtRiskNoExpense_DeferredStatus == null))
                {
                    this.mwPBGC_AtRiskNoExpense_DeferredStatus = new wPBGC_AtRiskNoExpense_DeferredStatus(this);
                }
                return this.mwPBGC_AtRiskNoExpense_DeferredStatus;
            }
        }
        
        public wPBGC_AtRiskNoExpense_VestedActives wPBGC_AtRiskNoExpense_VestedActives
        {
            get
            {
                if ((this.mwPBGC_AtRiskNoExpense_VestedActives == null))
                {
                    this.mwPBGC_AtRiskNoExpense_VestedActives = new wPBGC_AtRiskNoExpense_VestedActives(this);
                }
                return this.mwPBGC_AtRiskNoExpense_VestedActives;
            }
        }
        
        public wPBGC_AtRiskNoExpense_Total wPBGC_AtRiskNoExpense_Total
        {
            get
            {
                if ((this.mwPBGC_AtRiskNoExpense_Total == null))
                {
                    this.mwPBGC_AtRiskNoExpense_Total = new wPBGC_AtRiskNoExpense_Total(this);
                }
                return this.mwPBGC_AtRiskNoExpense_Total;
            }
        }
        
        public wPBGC_AtRiskWithExpense_InPayStatus wPBGC_AtRiskWithExpense_InPayStatus
        {
            get
            {
                if ((this.mwPBGC_AtRiskWithExpense_InPayStatus == null))
                {
                    this.mwPBGC_AtRiskWithExpense_InPayStatus = new wPBGC_AtRiskWithExpense_InPayStatus(this);
                }
                return this.mwPBGC_AtRiskWithExpense_InPayStatus;
            }
        }
        
        public wPBGC_AtRiskWithExpense_DeferredStatus wPBGC_AtRiskWithExpense_DeferredStatus
        {
            get
            {
                if ((this.mwPBGC_AtRiskWithExpense_DeferredStatus == null))
                {
                    this.mwPBGC_AtRiskWithExpense_DeferredStatus = new wPBGC_AtRiskWithExpense_DeferredStatus(this);
                }
                return this.mwPBGC_AtRiskWithExpense_DeferredStatus;
            }
        }
        
        public wPBGC_AtRiskWithExpense_VestedActives wPBGC_AtRiskWithExpense_VestedActives
        {
            get
            {
                if ((this.mwPBGC_AtRiskWithExpense_VestedActives == null))
                {
                    this.mwPBGC_AtRiskWithExpense_VestedActives = new wPBGC_AtRiskWithExpense_VestedActives(this);
                }
                return this.mwPBGC_AtRiskWithExpense_VestedActives;
            }
        }
        
        public wPBGC_AtRiskWithExpense_Total wPBGC_AtRiskWithExpense_Total
        {
            get
            {
                if ((this.mwPBGC_AtRiskWithExpense_Total == null))
                {
                    this.mwPBGC_AtRiskWithExpense_Total = new wPBGC_AtRiskWithExpense_Total(this);
                }
                return this.mwPBGC_AtRiskWithExpense_Total;
            }
        }
        
        public wPBGC_FinalAtRisk_InPayStatus wPBGC_FinalAtRisk_InPayStatus
        {
            get
            {
                if ((this.mwPBGC_FinalAtRisk_InPayStatus == null))
                {
                    this.mwPBGC_FinalAtRisk_InPayStatus = new wPBGC_FinalAtRisk_InPayStatus(this);
                }
                return this.mwPBGC_FinalAtRisk_InPayStatus;
            }
        }
        
        public wPBGC_FinalAtRisk_DeferredStatus wPBGC_FinalAtRisk_DeferredStatus
        {
            get
            {
                if ((this.mwPBGC_FinalAtRisk_DeferredStatus == null))
                {
                    this.mwPBGC_FinalAtRisk_DeferredStatus = new wPBGC_FinalAtRisk_DeferredStatus(this);
                }
                return this.mwPBGC_FinalAtRisk_DeferredStatus;
            }
        }
        
        public wPBGC_FinalAtRisk_VestedActives wPBGC_FinalAtRisk_VestedActives
        {
            get
            {
                if ((this.mwPBGC_FinalAtRisk_VestedActives == null))
                {
                    this.mwPBGC_FinalAtRisk_VestedActives = new wPBGC_FinalAtRisk_VestedActives(this);
                }
                return this.mwPBGC_FinalAtRisk_VestedActives;
            }
        }
        
        public wPBGC_FinalAtRisk_Total wPBGC_FinalAtRisk_Total
        {
            get
            {
                if ((this.mwPBGC_FinalAtRisk_Total == null))
                {
                    this.mwPBGC_FinalAtRisk_Total = new wPBGC_FinalAtRisk_Total(this);
                }
                return this.mwPBGC_FinalAtRisk_Total;
            }
        }
        
        public wPBGC_PBGCTarget_InpayStatus wPBGC_PBGCTarget_InpayStatus
        {
            get
            {
                if ((this.mwPBGC_PBGCTarget_InpayStatus == null))
                {
                    this.mwPBGC_PBGCTarget_InpayStatus = new wPBGC_PBGCTarget_InpayStatus(this);
                }
                return this.mwPBGC_PBGCTarget_InpayStatus;
            }
        }
        
        public wPBGC_PBGCTarget_VestedActives wPBGC_PBGCTarget_VestedActives
        {
            get
            {
                if ((this.mwPBGC_PBGCTarget_VestedActives == null))
                {
                    this.mwPBGC_PBGCTarget_VestedActives = new wPBGC_PBGCTarget_VestedActives(this);
                }
                return this.mwPBGC_PBGCTarget_VestedActives;
            }
        }
        
        public wPBGC_PBGCTarget_DeferredStatus wPBGC_PBGCTarget_DeferredStatus
        {
            get
            {
                if ((this.mwPBGC_PBGCTarget_DeferredStatus == null))
                {
                    this.mwPBGC_PBGCTarget_DeferredStatus = new wPBGC_PBGCTarget_DeferredStatus(this);
                }
                return this.mwPBGC_PBGCTarget_DeferredStatus;
            }
        }
        
        public wPBGC_PBGCTarget_Total wPBGC_PBGCTarget_Total
        {
            get
            {
                if ((this.mwPBGC_PBGCTarget_Total == null))
                {
                    this.mwPBGC_PBGCTarget_Total = new wPBGC_PBGCTarget_Total(this);
                }
                return this.mwPBGC_PBGCTarget_Total;
            }
        }
        
        public wPBGC_PBGCTarget_MVofAssets wPBGC_PBGCTarget_MVofAssets
        {
            get
            {
                if ((this.mwPBGC_PBGCTarget_MVofAssets == null))
                {
                    this.mwPBGC_PBGCTarget_MVofAssets = new wPBGC_PBGCTarget_MVofAssets(this);
                }
                return this.mwPBGC_PBGCTarget_MVofAssets;
            }
        }
        
        public wPBGC_PBGCVariable_Unfunded wPBGC_PBGCVariable_Unfunded
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_Unfunded == null))
                {
                    this.mwPBGC_PBGCVariable_Unfunded = new wPBGC_PBGCVariable_Unfunded(this);
                }
                return this.mwPBGC_PBGCVariable_Unfunded;
            }
        }
        
        public wPBGC_PBGCVariable_9Per1000 wPBGC_PBGCVariable_9Per1000
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_9Per1000 == null))
                {
                    this.mwPBGC_PBGCVariable_9Per1000 = new wPBGC_PBGCVariable_9Per1000(this);
                }
                return this.mwPBGC_PBGCVariable_9Per1000;
            }
        }
        
        public wPBGC_PBGCVariable_NumOfEE wPBGC_PBGCVariable_NumOfEE
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_NumOfEE == null))
                {
                    this.mwPBGC_PBGCVariable_NumOfEE = new wPBGC_PBGCVariable_NumOfEE(this);
                }
                return this.mwPBGC_PBGCVariable_NumOfEE;
            }
        }
        
        public wPBGC_PBGCVariable_ParticipantCount wPBGC_PBGCVariable_ParticipantCount
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_ParticipantCount == null))
                {
                    this.mwPBGC_PBGCVariable_ParticipantCount = new wPBGC_PBGCVariable_ParticipantCount(this);
                }
                return this.mwPBGC_PBGCVariable_ParticipantCount;
            }
        }
        
        public wPBGC_PBGCVariable_PerParticipant wPBGC_PBGCVariable_PerParticipant
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_PerParticipant == null))
                {
                    this.mwPBGC_PBGCVariable_PerParticipant = new wPBGC_PBGCVariable_PerParticipant(this);
                }
                return this.mwPBGC_PBGCVariable_PerParticipant;
            }
        }
        
        public wPBGC_PBGCVariable_PBGCVariable wPBGC_PBGCVariable_PBGCVariable
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_PBGCVariable == null))
                {
                    this.mwPBGC_PBGCVariable_PBGCVariable = new wPBGC_PBGCVariable_PBGCVariable(this);
                }
                return this.mwPBGC_PBGCVariable_PBGCVariable;
            }
        }
        
        public wPBGC_PBGCVariable_CombinedPBGC wPBGC_PBGCVariable_CombinedPBGC
        {
            get
            {
                if ((this.mwPBGC_PBGCVariable_CombinedPBGC == null))
                {
                    this.mwPBGC_PBGCVariable_CombinedPBGC = new wPBGC_PBGCVariable_CombinedPBGC(this);
                }
                return this.mwPBGC_PBGCVariable_CombinedPBGC;
            }
        }
        
        public wData_InactivesInPayStatus wData_InactivesInPayStatus
        {
            get
            {
                if ((this.mwData_InactivesInPayStatus == null))
                {
                    this.mwData_InactivesInPayStatus = new wData_InactivesInPayStatus(this);
                }
                return this.mwData_InactivesInPayStatus;
            }
        }
        
        public wData_InactivesDeferredStatus wData_InactivesDeferredStatus
        {
            get
            {
                if ((this.mwData_InactivesDeferredStatus == null))
                {
                    this.mwData_InactivesDeferredStatus = new wData_InactivesDeferredStatus(this);
                }
                return this.mwData_InactivesDeferredStatus;
            }
        }
        
        public wData_VestedStatus wData_VestedStatus
        {
            get
            {
                if ((this.mwData_VestedStatus == null))
                {
                    this.mwData_VestedStatus = new wData_VestedStatus(this);
                }
                return this.mwData_VestedStatus;
            }
        }
        
        public wData_NonVestedStatus wData_NonVestedStatus
        {
            get
            {
                if ((this.mwData_NonVestedStatus == null))
                {
                    this.mwData_NonVestedStatus = new wData_NonVestedStatus(this);
                }
                return this.mwData_NonVestedStatus;
            }
        }
        
        public wData_Total wData_Total
        {
            get
            {
                if ((this.mwData_Total == null))
                {
                    this.mwData_Total = new wData_Total(this);
                }
                return this.mwData_Total;
            }
        }
        
        public wData_TotalPlanParticipants wData_TotalPlanParticipants
        {
            get
            {
                if ((this.mwData_TotalPlanParticipants == null))
                {
                    this.mwData_TotalPlanParticipants = new wData_TotalPlanParticipants(this);
                }
                return this.mwData_TotalPlanParticipants;
            }
        }
        
        public wData_NumOfParticipants wData_NumOfParticipants
        {
            get
            {
                if ((this.mwData_NumOfParticipants == null))
                {
                    this.mwData_NumOfParticipants = new wData_NumOfParticipants(this);
                }
                return this.mwData_NumOfParticipants;
            }
        }
        
        public wAtRiskDetermination_PirorYearNum wAtRiskDetermination_PirorYearNum
        {
            get
            {
                if ((this.mwAtRiskDetermination_PirorYearNum == null))
                {
                    this.mwAtRiskDetermination_PirorYearNum = new wAtRiskDetermination_PirorYearNum(this);
                }
                return this.mwAtRiskDetermination_PirorYearNum;
            }
        }
        
        public wAtRiskDetermination_Prong1Determination wAtRiskDetermination_Prong1Determination
        {
            get
            {
                if ((this.mwAtRiskDetermination_Prong1Determination == null))
                {
                    this.mwAtRiskDetermination_Prong1Determination = new wAtRiskDetermination_Prong1Determination(this);
                }
                return this.mwAtRiskDetermination_Prong1Determination;
            }
        }
        
        public wAtRiskDetermination_Prong1Threshold wAtRiskDetermination_Prong1Threshold
        {
            get
            {
                if ((this.mwAtRiskDetermination_Prong1Threshold == null))
                {
                    this.mwAtRiskDetermination_Prong1Threshold = new wAtRiskDetermination_Prong1Threshold(this);
                }
                return this.mwAtRiskDetermination_Prong1Threshold;
            }
        }
        
        public wAtRiskDetermination_Prong2Determination wAtRiskDetermination_Prong2Determination
        {
            get
            {
                if ((this.mwAtRiskDetermination_Prong2Determination == null))
                {
                    this.mwAtRiskDetermination_Prong2Determination = new wAtRiskDetermination_Prong2Determination(this);
                }
                return this.mwAtRiskDetermination_Prong2Determination;
            }
        }
        
        public wAtRiskDetermination_Prong2Threshold wAtRiskDetermination_Prong2Threshold
        {
            get
            {
                if ((this.mwAtRiskDetermination_Prong2Threshold == null))
                {
                    this.mwAtRiskDetermination_Prong2Threshold = new wAtRiskDetermination_Prong2Threshold(this);
                }
                return this.mwAtRiskDetermination_Prong2Threshold;
            }
        }
        
        public wAtRiskDetermination_PlanIsAtRisk wAtRiskDetermination_PlanIsAtRisk
        {
            get
            {
                if ((this.mwAtRiskDetermination_PlanIsAtRisk == null))
                {
                    this.mwAtRiskDetermination_PlanIsAtRisk = new wAtRiskDetermination_PlanIsAtRisk(this);
                }
                return this.mwAtRiskDetermination_PlanIsAtRisk;
            }
        }
        
        public wAtRiskDetermination_IncludesExpenseLoad wAtRiskDetermination_IncludesExpenseLoad
        {
            get
            {
                if ((this.mwAtRiskDetermination_IncludesExpenseLoad == null))
                {
                    this.mwAtRiskDetermination_IncludesExpenseLoad = new wAtRiskDetermination_IncludesExpenseLoad(this);
                }
                return this.mwAtRiskDetermination_IncludesExpenseLoad;
            }
        }
        
        public wAtRiskDetermination_ConsecutiveYears wAtRiskDetermination_ConsecutiveYears
        {
            get
            {
                if ((this.mwAtRiskDetermination_ConsecutiveYears == null))
                {
                    this.mwAtRiskDetermination_ConsecutiveYears = new wAtRiskDetermination_ConsecutiveYears(this);
                }
                return this.mwAtRiskDetermination_ConsecutiveYears;
            }
        }
        
        public wAtRiskDetermination_FTReflects wAtRiskDetermination_FTReflects
        {
            get
            {
                if ((this.mwAtRiskDetermination_FTReflects == null))
                {
                    this.mwAtRiskDetermination_FTReflects = new wAtRiskDetermination_FTReflects(this);
                }
                return this.mwAtRiskDetermination_FTReflects;
            }
        }
        
        public wLiabilityMeasuresFTD_NAR_InPayStatus wLiabilityMeasuresFTD_NAR_InPayStatus
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_NAR_InPayStatus == null))
                {
                    this.mwLiabilityMeasuresFTD_NAR_InPayStatus = new wLiabilityMeasuresFTD_NAR_InPayStatus(this);
                }
                return this.mwLiabilityMeasuresFTD_NAR_InPayStatus;
            }
        }
        
        public wLiabilityMeasuresFTD_NAR_DeferredStatus wLiabilityMeasuresFTD_NAR_DeferredStatus
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_NAR_DeferredStatus == null))
                {
                    this.mwLiabilityMeasuresFTD_NAR_DeferredStatus = new wLiabilityMeasuresFTD_NAR_DeferredStatus(this);
                }
                return this.mwLiabilityMeasuresFTD_NAR_DeferredStatus;
            }
        }
        
        public wLiabilityMeasuresFTD_NAR_VestedActives wLiabilityMeasuresFTD_NAR_VestedActives
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_NAR_VestedActives == null))
                {
                    this.mwLiabilityMeasuresFTD_NAR_VestedActives = new wLiabilityMeasuresFTD_NAR_VestedActives(this);
                }
                return this.mwLiabilityMeasuresFTD_NAR_VestedActives;
            }
        }
        
        public wLiabilityMeasuresFTD_NAR_NonVestedActvies wLiabilityMeasuresFTD_NAR_NonVestedActvies
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_NAR_NonVestedActvies == null))
                {
                    this.mwLiabilityMeasuresFTD_NAR_NonVestedActvies = new wLiabilityMeasuresFTD_NAR_NonVestedActvies(this);
                }
                return this.mwLiabilityMeasuresFTD_NAR_NonVestedActvies;
            }
        }
        
        public wLiabilityMeasuresFTD_NAR_Total wLiabilityMeasuresFTD_NAR_Total
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_NAR_Total == null))
                {
                    this.mwLiabilityMeasuresFTD_NAR_Total = new wLiabilityMeasuresFTD_NAR_Total(this);
                }
                return this.mwLiabilityMeasuresFTD_NAR_Total;
            }
        }
        
        public wLiabilityMeasuresFTD_NAR_NormalCost wLiabilityMeasuresFTD_NAR_NormalCost
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_NAR_NormalCost == null))
                {
                    this.mwLiabilityMeasuresFTD_NAR_NormalCost = new wLiabilityMeasuresFTD_NAR_NormalCost(this);
                }
                return this.mwLiabilityMeasuresFTD_NAR_NormalCost;
            }
        }
        
        public wLiabilityMeasuresFTD_Final_InPayStatus wLiabilityMeasuresFTD_Final_InPayStatus
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_Final_InPayStatus == null))
                {
                    this.mwLiabilityMeasuresFTD_Final_InPayStatus = new wLiabilityMeasuresFTD_Final_InPayStatus(this);
                }
                return this.mwLiabilityMeasuresFTD_Final_InPayStatus;
            }
        }
        
        public wLiabilityMeasuresFTD_Final_DeferredStatus wLiabilityMeasuresFTD_Final_DeferredStatus
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_Final_DeferredStatus == null))
                {
                    this.mwLiabilityMeasuresFTD_Final_DeferredStatus = new wLiabilityMeasuresFTD_Final_DeferredStatus(this);
                }
                return this.mwLiabilityMeasuresFTD_Final_DeferredStatus;
            }
        }
        
        public wLiabilityMeasuresFTD_Final_VestedActives wLiabilityMeasuresFTD_Final_VestedActives
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_Final_VestedActives == null))
                {
                    this.mwLiabilityMeasuresFTD_Final_VestedActives = new wLiabilityMeasuresFTD_Final_VestedActives(this);
                }
                return this.mwLiabilityMeasuresFTD_Final_VestedActives;
            }
        }
        
        public wLiabilityMeasuresFTD_Final_NonVestedActives wLiabilityMeasuresFTD_Final_NonVestedActives
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_Final_NonVestedActives == null))
                {
                    this.mwLiabilityMeasuresFTD_Final_NonVestedActives = new wLiabilityMeasuresFTD_Final_NonVestedActives(this);
                }
                return this.mwLiabilityMeasuresFTD_Final_NonVestedActives;
            }
        }
        
        public wLiabilityMeasuresFTD_Final_Total wLiabilityMeasuresFTD_Final_Total
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_Final_Total == null))
                {
                    this.mwLiabilityMeasuresFTD_Final_Total = new wLiabilityMeasuresFTD_Final_Total(this);
                }
                return this.mwLiabilityMeasuresFTD_Final_Total;
            }
        }
        
        public wLiabilityMeasuresFTD_Final_NormalCost wLiabilityMeasuresFTD_Final_NormalCost
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_Final_NormalCost == null))
                {
                    this.mwLiabilityMeasuresFTD_Final_NormalCost = new wLiabilityMeasuresFTD_Final_NormalCost(this);
                }
                return this.mwLiabilityMeasuresFTD_Final_NormalCost;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_InPayStatus wLiabilityMeasuresFTD_FundingTarget_InPayStatus
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_InPayStatus == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_InPayStatus = new wLiabilityMeasuresFTD_FundingTarget_InPayStatus(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_InPayStatus;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_DeferredStatus wLiabilityMeasuresFTD_FundingTarget_DeferredStatus
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_DeferredStatus == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_DeferredStatus = new wLiabilityMeasuresFTD_FundingTarget_DeferredStatus(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_DeferredStatus;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_VestedActives wLiabilityMeasuresFTD_FundingTarget_VestedActives
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_VestedActives == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_VestedActives = new wLiabilityMeasuresFTD_FundingTarget_VestedActives(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_VestedActives;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_NonVestedActives wLiabilityMeasuresFTD_FundingTarget_NonVestedActives
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_NonVestedActives == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_NonVestedActives = new wLiabilityMeasuresFTD_FundingTarget_NonVestedActives(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_NonVestedActives;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_Total wLiabilityMeasuresFTD_FundingTarget_Total
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_Total == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_Total = new wLiabilityMeasuresFTD_FundingTarget_Total(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_Total;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_Administrative wLiabilityMeasuresFTD_FundingTarget_Administrative
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_Administrative == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_Administrative = new wLiabilityMeasuresFTD_FundingTarget_Administrative(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_Administrative;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_Discounted wLiabilityMeasuresFTD_FundingTarget_Discounted
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_Discounted == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_Discounted = new wLiabilityMeasuresFTD_FundingTarget_Discounted(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_Discounted;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_Expected wLiabilityMeasuresFTD_FundingTarget_Expected
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_Expected == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_Expected = new wLiabilityMeasuresFTD_FundingTarget_Expected(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_Expected;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_DiscountedExpected wLiabilityMeasuresFTD_FundingTarget_DiscountedExpected
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_DiscountedExpected == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_DiscountedExpected = new wLiabilityMeasuresFTD_FundingTarget_DiscountedExpected(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_DiscountedExpected;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_NormalCost wLiabilityMeasuresFTD_FundingTarget_NormalCost
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_NormalCost == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_NormalCost = new wLiabilityMeasuresFTD_FundingTarget_NormalCost(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_NormalCost;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_TotalNormalCost wLiabilityMeasuresFTD_FundingTarget_TotalNormalCost
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_TotalNormalCost == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_TotalNormalCost = new wLiabilityMeasuresFTD_FundingTarget_TotalNormalCost(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_TotalNormalCost;
            }
        }
        
        public wLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate wLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate
        {
            get
            {
                if ((this.mwLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate == null))
                {
                    this.mwLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate = new wLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate(this);
                }
                return this.mwLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate;
            }
        }
        
        public wLiabilityMeasuresMDC_NotAtRiskLiability wLiabilityMeasuresMDC_NotAtRiskLiability
        {
            get
            {
                if ((this.mwLiabilityMeasuresMDC_NotAtRiskLiability == null))
                {
                    this.mwLiabilityMeasuresMDC_NotAtRiskLiability = new wLiabilityMeasuresMDC_NotAtRiskLiability(this);
                }
                return this.mwLiabilityMeasuresMDC_NotAtRiskLiability;
            }
        }
        
        public wLiabilityMeasuresMDC_ExpenseLoad wLiabilityMeasuresMDC_ExpenseLoad
        {
            get
            {
                if ((this.mwLiabilityMeasuresMDC_ExpenseLoad == null))
                {
                    this.mwLiabilityMeasuresMDC_ExpenseLoad = new wLiabilityMeasuresMDC_ExpenseLoad(this);
                }
                return this.mwLiabilityMeasuresMDC_ExpenseLoad;
            }
        }
        
        public wLiabilityMeasuresMDC_AtRiskLiabilityNoExpense wLiabilityMeasuresMDC_AtRiskLiabilityNoExpense
        {
            get
            {
                if ((this.mwLiabilityMeasuresMDC_AtRiskLiabilityNoExpense == null))
                {
                    this.mwLiabilityMeasuresMDC_AtRiskLiabilityNoExpense = new wLiabilityMeasuresMDC_AtRiskLiabilityNoExpense(this);
                }
                return this.mwLiabilityMeasuresMDC_AtRiskLiabilityNoExpense;
            }
        }
        
        public wLiabilityMeasuresMDC_AtRiskLiabilityWithExpense wLiabilityMeasuresMDC_AtRiskLiabilityWithExpense
        {
            get
            {
                if ((this.mwLiabilityMeasuresMDC_AtRiskLiabilityWithExpense == null))
                {
                    this.mwLiabilityMeasuresMDC_AtRiskLiabilityWithExpense = new wLiabilityMeasuresMDC_AtRiskLiabilityWithExpense(this);
                }
                return this.mwLiabilityMeasuresMDC_AtRiskLiabilityWithExpense;
            }
        }
        
        public wLiabilityMeasuresMDC_FinalAtRisk wLiabilityMeasuresMDC_FinalAtRisk
        {
            get
            {
                if ((this.mwLiabilityMeasuresMDC_FinalAtRisk == null))
                {
                    this.mwLiabilityMeasuresMDC_FinalAtRisk = new wLiabilityMeasuresMDC_FinalAtRisk(this);
                }
                return this.mwLiabilityMeasuresMDC_FinalAtRisk;
            }
        }
        
        public wLiabilityMeasuresMDC_FundingTarget wLiabilityMeasuresMDC_FundingTarget
        {
            get
            {
                if ((this.mwLiabilityMeasuresMDC_FundingTarget == null))
                {
                    this.mwLiabilityMeasuresMDC_FundingTarget = new wLiabilityMeasuresMDC_FundingTarget(this);
                }
                return this.mwLiabilityMeasuresMDC_FundingTarget;
            }
        }
        
        public wCarryoverBalance_BalanceAtBegining wCarryoverBalance_BalanceAtBegining
        {
            get
            {
                if ((this.mwCarryoverBalance_BalanceAtBegining == null))
                {
                    this.mwCarryoverBalance_BalanceAtBegining = new wCarryoverBalance_BalanceAtBegining(this);
                }
                return this.mwCarryoverBalance_BalanceAtBegining;
            }
        }
        
        public wCarryoverBalance_PortionUsed wCarryoverBalance_PortionUsed
        {
            get
            {
                if ((this.mwCarryoverBalance_PortionUsed == null))
                {
                    this.mwCarryoverBalance_PortionUsed = new wCarryoverBalance_PortionUsed(this);
                }
                return this.mwCarryoverBalance_PortionUsed;
            }
        }
        
        public wCarryoverBalance_InterestUsing wCarryoverBalance_InterestUsing
        {
            get
            {
                if ((this.mwCarryoverBalance_InterestUsing == null))
                {
                    this.mwCarryoverBalance_InterestUsing = new wCarryoverBalance_InterestUsing(this);
                }
                return this.mwCarryoverBalance_InterestUsing;
            }
        }
        
        public wCarryoverBalance_BalanceAtBOY wCarryoverBalance_BalanceAtBOY
        {
            get
            {
                if ((this.mwCarryoverBalance_BalanceAtBOY == null))
                {
                    this.mwCarryoverBalance_BalanceAtBOY = new wCarryoverBalance_BalanceAtBOY(this);
                }
                return this.mwCarryoverBalance_BalanceAtBOY;
            }
        }
        
        public wCarryoverBalance_VoluntaryReduction wCarryoverBalance_VoluntaryReduction
        {
            get
            {
                if ((this.mwCarryoverBalance_VoluntaryReduction == null))
                {
                    this.mwCarryoverBalance_VoluntaryReduction = new wCarryoverBalance_VoluntaryReduction(this);
                }
                return this.mwCarryoverBalance_VoluntaryReduction;
            }
        }
        
        public wCarryoverBalance_DeemedWaivers wCarryoverBalance_DeemedWaivers
        {
            get
            {
                if ((this.mwCarryoverBalance_DeemedWaivers == null))
                {
                    this.mwCarryoverBalance_DeemedWaivers = new wCarryoverBalance_DeemedWaivers(this);
                }
                return this.mwCarryoverBalance_DeemedWaivers;
            }
        }
        
        public wCarryoverBalance_BOYBalance wCarryoverBalance_BOYBalance
        {
            get
            {
                if ((this.mwCarryoverBalance_BOYBalance == null))
                {
                    this.mwCarryoverBalance_BOYBalance = new wCarryoverBalance_BOYBalance(this);
                }
                return this.mwCarryoverBalance_BOYBalance;
            }
        }
        
        public wDevelopmentGL_Liability_Actuarial wDevelopmentGL_Liability_Actuarial
        {
            get
            {
                if ((this.mwDevelopmentGL_Liability_Actuarial == null))
                {
                    this.mwDevelopmentGL_Liability_Actuarial = new wDevelopmentGL_Liability_Actuarial(this);
                }
                return this.mwDevelopmentGL_Liability_Actuarial;
            }
        }
        
        public wDevelopmentGL_Liability_NormalCost wDevelopmentGL_Liability_NormalCost
        {
            get
            {
                if ((this.mwDevelopmentGL_Liability_NormalCost == null))
                {
                    this.mwDevelopmentGL_Liability_NormalCost = new wDevelopmentGL_Liability_NormalCost(this);
                }
                return this.mwDevelopmentGL_Liability_NormalCost;
            }
        }
        
        public wDevelopmentGL_Liability_Interest wDevelopmentGL_Liability_Interest
        {
            get
            {
                if ((this.mwDevelopmentGL_Liability_Interest == null))
                {
                    this.mwDevelopmentGL_Liability_Interest = new wDevelopmentGL_Liability_Interest(this);
                }
                return this.mwDevelopmentGL_Liability_Interest;
            }
        }
        
        public wDevelopmentGL_Benefits_BenefitPayments wDevelopmentGL_Benefits_BenefitPayments
        {
            get
            {
                if ((this.mwDevelopmentGL_Benefits_BenefitPayments == null))
                {
                    this.mwDevelopmentGL_Benefits_BenefitPayments = new wDevelopmentGL_Benefits_BenefitPayments(this);
                }
                return this.mwDevelopmentGL_Benefits_BenefitPayments;
            }
        }
        
        public wDevelopmentGL_Benefits_Administrative wDevelopmentGL_Benefits_Administrative
        {
            get
            {
                if ((this.mwDevelopmentGL_Benefits_Administrative == null))
                {
                    this.mwDevelopmentGL_Benefits_Administrative = new wDevelopmentGL_Benefits_Administrative(this);
                }
                return this.mwDevelopmentGL_Benefits_Administrative;
            }
        }
        
        public wDevelopmentGL_Benefits_EmployeeContrib wDevelopmentGL_Benefits_EmployeeContrib
        {
            get
            {
                if ((this.mwDevelopmentGL_Benefits_EmployeeContrib == null))
                {
                    this.mwDevelopmentGL_Benefits_EmployeeContrib = new wDevelopmentGL_Benefits_EmployeeContrib(this);
                }
                return this.mwDevelopmentGL_Benefits_EmployeeContrib;
            }
        }
        
        public wDevelopmentGL_Benefits_Total wDevelopmentGL_Benefits_Total
        {
            get
            {
                if ((this.mwDevelopmentGL_Benefits_Total == null))
                {
                    this.mwDevelopmentGL_Benefits_Total = new wDevelopmentGL_Benefits_Total(this);
                }
                return this.mwDevelopmentGL_Benefits_Total;
            }
        }
        
        public wDevelopmentGL_Benefits_ExpectedActuarial wDevelopmentGL_Benefits_ExpectedActuarial
        {
            get
            {
                if ((this.mwDevelopmentGL_Benefits_ExpectedActuarial == null))
                {
                    this.mwDevelopmentGL_Benefits_ExpectedActuarial = new wDevelopmentGL_Benefits_ExpectedActuarial(this);
                }
                return this.mwDevelopmentGL_Benefits_ExpectedActuarial;
            }
        }
        
        public wDevelopmentGL_Benefits_LiabilityGL wDevelopmentGL_Benefits_LiabilityGL
        {
            get
            {
                if ((this.mwDevelopmentGL_Benefits_LiabilityGL == null))
                {
                    this.mwDevelopmentGL_Benefits_LiabilityGL = new wDevelopmentGL_Benefits_LiabilityGL(this);
                }
                return this.mwDevelopmentGL_Benefits_LiabilityGL;
            }
        }
        
        public wDevelopmentGL_Asset_ActuarialAsset wDevelopmentGL_Asset_ActuarialAsset
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_ActuarialAsset == null))
                {
                    this.mwDevelopmentGL_Asset_ActuarialAsset = new wDevelopmentGL_Asset_ActuarialAsset(this);
                }
                return this.mwDevelopmentGL_Asset_ActuarialAsset;
            }
        }
        
        public wDevelopmentGL_Asset_InterestOnActuarial wDevelopmentGL_Asset_InterestOnActuarial
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_InterestOnActuarial == null))
                {
                    this.mwDevelopmentGL_Asset_InterestOnActuarial = new wDevelopmentGL_Asset_InterestOnActuarial(this);
                }
                return this.mwDevelopmentGL_Asset_InterestOnActuarial;
            }
        }
        
        public wDevelopmentGL_Asset_ContributionsMade wDevelopmentGL_Asset_ContributionsMade
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_ContributionsMade == null))
                {
                    this.mwDevelopmentGL_Asset_ContributionsMade = new wDevelopmentGL_Asset_ContributionsMade(this);
                }
                return this.mwDevelopmentGL_Asset_ContributionsMade;
            }
        }
        
        public wDevelopmentGL_Asset_InterestOnContrib wDevelopmentGL_Asset_InterestOnContrib
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_InterestOnContrib == null))
                {
                    this.mwDevelopmentGL_Asset_InterestOnContrib = new wDevelopmentGL_Asset_InterestOnContrib(this);
                }
                return this.mwDevelopmentGL_Asset_InterestOnContrib;
            }
        }
        
        public wDevelopmentGL_Asset_ExpectedActuarial wDevelopmentGL_Asset_ExpectedActuarial
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_ExpectedActuarial == null))
                {
                    this.mwDevelopmentGL_Asset_ExpectedActuarial = new wDevelopmentGL_Asset_ExpectedActuarial(this);
                }
                return this.mwDevelopmentGL_Asset_ExpectedActuarial;
            }
        }
        
        public wDevelopmentGL_Asset_ActuarialAssetGL wDevelopmentGL_Asset_ActuarialAssetGL
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_ActuarialAssetGL == null))
                {
                    this.mwDevelopmentGL_Asset_ActuarialAssetGL = new wDevelopmentGL_Asset_ActuarialAssetGL(this);
                }
                return this.mwDevelopmentGL_Asset_ActuarialAssetGL;
            }
        }
        
        public wDevelopmentGL_Asset_ActuarialGL wDevelopmentGL_Asset_ActuarialGL
        {
            get
            {
                if ((this.mwDevelopmentGL_Asset_ActuarialGL == null))
                {
                    this.mwDevelopmentGL_Asset_ActuarialGL = new wDevelopmentGL_Asset_ActuarialGL(this);
                }
                return this.mwDevelopmentGL_Asset_ActuarialGL;
            }
        }
        
        public wAR_NoExpenseLoad_RetiredAndBeneficiaries wAR_NoExpenseLoad_RetiredAndBeneficiaries
        {
            get
            {
                if ((this.mwAR_NoExpenseLoad_RetiredAndBeneficiaries == null))
                {
                    this.mwAR_NoExpenseLoad_RetiredAndBeneficiaries = new wAR_NoExpenseLoad_RetiredAndBeneficiaries(this);
                }
                return this.mwAR_NoExpenseLoad_RetiredAndBeneficiaries;
            }
        }
        
        public wAR_NoExpense_TermVested wAR_NoExpense_TermVested
        {
            get
            {
                if ((this.mwAR_NoExpense_TermVested == null))
                {
                    this.mwAR_NoExpense_TermVested = new wAR_NoExpense_TermVested(this);
                }
                return this.mwAR_NoExpense_TermVested;
            }
        }
        
        public wAR_NoExpense_VestedActives wAR_NoExpense_VestedActives
        {
            get
            {
                if ((this.mwAR_NoExpense_VestedActives == null))
                {
                    this.mwAR_NoExpense_VestedActives = new wAR_NoExpense_VestedActives(this);
                }
                return this.mwAR_NoExpense_VestedActives;
            }
        }
        
        public wAR_NoExpense_NonVestedActives wAR_NoExpense_NonVestedActives
        {
            get
            {
                if ((this.mwAR_NoExpense_NonVestedActives == null))
                {
                    this.mwAR_NoExpense_NonVestedActives = new wAR_NoExpense_NonVestedActives(this);
                }
                return this.mwAR_NoExpense_NonVestedActives;
            }
        }
        
        public wAR_NoExpense_Total wAR_NoExpense_Total
        {
            get
            {
                if ((this.mwAR_NoExpense_Total == null))
                {
                    this.mwAR_NoExpense_Total = new wAR_NoExpense_Total(this);
                }
                return this.mwAR_NoExpense_Total;
            }
        }
        
        public wAR_NoExpense_FundingNC wAR_NoExpense_FundingNC
        {
            get
            {
                if ((this.mwAR_NoExpense_FundingNC == null))
                {
                    this.mwAR_NoExpense_FundingNC = new wAR_NoExpense_FundingNC(this);
                }
                return this.mwAR_NoExpense_FundingNC;
            }
        }
        
        public wAR_Applicable_RetiredAndBeneficiries wAR_Applicable_RetiredAndBeneficiries
        {
            get
            {
                if ((this.mwAR_Applicable_RetiredAndBeneficiries == null))
                {
                    this.mwAR_Applicable_RetiredAndBeneficiries = new wAR_Applicable_RetiredAndBeneficiries(this);
                }
                return this.mwAR_Applicable_RetiredAndBeneficiries;
            }
        }
        
        public wAR_Applicable_TermVested wAR_Applicable_TermVested
        {
            get
            {
                if ((this.mwAR_Applicable_TermVested == null))
                {
                    this.mwAR_Applicable_TermVested = new wAR_Applicable_TermVested(this);
                }
                return this.mwAR_Applicable_TermVested;
            }
        }
        
        public wAR_Applicable_VestedActives wAR_Applicable_VestedActives
        {
            get
            {
                if ((this.mwAR_Applicable_VestedActives == null))
                {
                    this.mwAR_Applicable_VestedActives = new wAR_Applicable_VestedActives(this);
                }
                return this.mwAR_Applicable_VestedActives;
            }
        }
        
        public wAR_Applicable_NonVestedActives wAR_Applicable_NonVestedActives
        {
            get
            {
                if ((this.mwAR_Applicable_NonVestedActives == null))
                {
                    this.mwAR_Applicable_NonVestedActives = new wAR_Applicable_NonVestedActives(this);
                }
                return this.mwAR_Applicable_NonVestedActives;
            }
        }
        
        public wAR_Applicable_Total wAR_Applicable_Total
        {
            get
            {
                if ((this.mwAR_Applicable_Total == null))
                {
                    this.mwAR_Applicable_Total = new wAR_Applicable_Total(this);
                }
                return this.mwAR_Applicable_Total;
            }
        }
        
        public wAR_Applicable_FundingNC wAR_Applicable_FundingNC
        {
            get
            {
                if ((this.mwAR_Applicable_FundingNC == null))
                {
                    this.mwAR_Applicable_FundingNC = new wAR_Applicable_FundingNC(this);
                }
                return this.mwAR_Applicable_FundingNC;
            }
        }
        
        public wFully_PriorYear2008FTAP wFully_PriorYear2008FTAP
        {
            get
            {
                if ((this.mwFully_PriorYear2008FTAP == null))
                {
                    this.mwFully_PriorYear2008FTAP = new wFully_PriorYear2008FTAP(this);
                }
                return this.mwFully_PriorYear2008FTAP;
            }
        }
        
        public wFully_PriorYear2009FTAP wFully_PriorYear2009FTAP
        {
            get
            {
                if ((this.mwFully_PriorYear2009FTAP == null))
                {
                    this.mwFully_PriorYear2009FTAP = new wFully_PriorYear2009FTAP(this);
                }
                return this.mwFully_PriorYear2009FTAP;
            }
        }
        
        public wFully_PriorYear2010FTAP wFully_PriorYear2010FTAP
        {
            get
            {
                if ((this.mwFully_PriorYear2010FTAP == null))
                {
                    this.mwFully_PriorYear2010FTAP = new wFully_PriorYear2010FTAP(this);
                }
                return this.mwFully_PriorYear2010FTAP;
            }
        }
        
        public wAccelerated_Allowed wAccelerated_Allowed
        {
            get
            {
                if ((this.mwAccelerated_Allowed == null))
                {
                    this.mwAccelerated_Allowed = new wAccelerated_Allowed(this);
                }
                return this.mwAccelerated_Allowed;
            }
        }
        
        public wAddtitionalFunding_DoRestrictions wAddtitionalFunding_DoRestrictions
        {
            get
            {
                if ((this.mwAddtitionalFunding_DoRestrictions == null))
                {
                    this.mwAddtitionalFunding_DoRestrictions = new wAddtitionalFunding_DoRestrictions(this);
                }
                return this.mwAddtitionalFunding_DoRestrictions;
            }
        }
        
        public wCD_FirstQuarterly wCD_FirstQuarterly
        {
            get
            {
                if ((this.mwCD_FirstQuarterly == null))
                {
                    this.mwCD_FirstQuarterly = new wCD_FirstQuarterly(this);
                }
                return this.mwCD_FirstQuarterly;
            }
        }
        
        public wCD_SecondQuarterly wCD_SecondQuarterly
        {
            get
            {
                if ((this.mwCD_SecondQuarterly == null))
                {
                    this.mwCD_SecondQuarterly = new wCD_SecondQuarterly(this);
                }
                return this.mwCD_SecondQuarterly;
            }
        }
        
        public wCD_ThirdQuarterly wCD_ThirdQuarterly
        {
            get
            {
                if ((this.mwCD_ThirdQuarterly == null))
                {
                    this.mwCD_ThirdQuarterly = new wCD_ThirdQuarterly(this);
                }
                return this.mwCD_ThirdQuarterly;
            }
        }
        
        public wCD_FourthQuarterly wCD_FourthQuarterly
        {
            get
            {
                if ((this.mwCD_FourthQuarterly == null))
                {
                    this.mwCD_FourthQuarterly = new wCD_FourthQuarterly(this);
                }
                return this.mwCD_FourthQuarterly;
            }
        }
        
        public wCD_FinalContribution wCD_FinalContribution
        {
            get
            {
                if ((this.mwCD_FinalContribution == null))
                {
                    this.mwCD_FinalContribution = new wCD_FinalContribution(this);
                }
                return this.mwCD_FinalContribution;
            }
        }
        
        public wPrefundingBalance_BalanceAtBegin wPrefundingBalance_BalanceAtBegin
        {
            get
            {
                if ((this.mwPrefundingBalance_BalanceAtBegin == null))
                {
                    this.mwPrefundingBalance_BalanceAtBegin = new wPrefundingBalance_BalanceAtBegin(this);
                }
                return this.mwPrefundingBalance_BalanceAtBegin;
            }
        }
        
        public wPrefundingBalance_PortionUsed wPrefundingBalance_PortionUsed
        {
            get
            {
                if ((this.mwPrefundingBalance_PortionUsed == null))
                {
                    this.mwPrefundingBalance_PortionUsed = new wPrefundingBalance_PortionUsed(this);
                }
                return this.mwPrefundingBalance_PortionUsed;
            }
        }
        
        public wPrefundingBalance_InterestUsingPriorYrsActual wPrefundingBalance_InterestUsingPriorYrsActual
        {
            get
            {
                if ((this.mwPrefundingBalance_InterestUsingPriorYrsActual == null))
                {
                    this.mwPrefundingBalance_InterestUsingPriorYrsActual = new wPrefundingBalance_InterestUsingPriorYrsActual(this);
                }
                return this.mwPrefundingBalance_InterestUsingPriorYrsActual;
            }
        }
        
        public wPrefundingBalance_AmountRemaining wPrefundingBalance_AmountRemaining
        {
            get
            {
                if ((this.mwPrefundingBalance_AmountRemaining == null))
                {
                    this.mwPrefundingBalance_AmountRemaining = new wPrefundingBalance_AmountRemaining(this);
                }
                return this.mwPrefundingBalance_AmountRemaining;
            }
        }
        
        public wPrefundingBalance_PriorYrsExcessContrib wPrefundingBalance_PriorYrsExcessContrib
        {
            get
            {
                if ((this.mwPrefundingBalance_PriorYrsExcessContrib == null))
                {
                    this.mwPrefundingBalance_PriorYrsExcessContrib = new wPrefundingBalance_PriorYrsExcessContrib(this);
                }
                return this.mwPrefundingBalance_PriorYrsExcessContrib;
            }
        }
        
        public wPrefundingBalance_InterestOnAmount wPrefundingBalance_InterestOnAmount
        {
            get
            {
                if ((this.mwPrefundingBalance_InterestOnAmount == null))
                {
                    this.mwPrefundingBalance_InterestOnAmount = new wPrefundingBalance_InterestOnAmount(this);
                }
                return this.mwPrefundingBalance_InterestOnAmount;
            }
        }
        
        public wPrefundingBalance_InterestUsingPriorYrsEffective wPrefundingBalance_InterestUsingPriorYrsEffective
        {
            get
            {
                if ((this.mwPrefundingBalance_InterestUsingPriorYrsEffective == null))
                {
                    this.mwPrefundingBalance_InterestUsingPriorYrsEffective = new wPrefundingBalance_InterestUsingPriorYrsEffective(this);
                }
                return this.mwPrefundingBalance_InterestUsingPriorYrsEffective;
            }
        }
        
        public wPrefundingBalance_TotalAvailable wPrefundingBalance_TotalAvailable
        {
            get
            {
                if ((this.mwPrefundingBalance_TotalAvailable == null))
                {
                    this.mwPrefundingBalance_TotalAvailable = new wPrefundingBalance_TotalAvailable(this);
                }
                return this.mwPrefundingBalance_TotalAvailable;
            }
        }
        
        public wPrefundingBalance_PortionToBeAdded wPrefundingBalance_PortionToBeAdded
        {
            get
            {
                if ((this.mwPrefundingBalance_PortionToBeAdded == null))
                {
                    this.mwPrefundingBalance_PortionToBeAdded = new wPrefundingBalance_PortionToBeAdded(this);
                }
                return this.mwPrefundingBalance_PortionToBeAdded;
            }
        }
        
        public wPrefundingBalance_BalanceAtBOY wPrefundingBalance_BalanceAtBOY
        {
            get
            {
                if ((this.mwPrefundingBalance_BalanceAtBOY == null))
                {
                    this.mwPrefundingBalance_BalanceAtBOY = new wPrefundingBalance_BalanceAtBOY(this);
                }
                return this.mwPrefundingBalance_BalanceAtBOY;
            }
        }
        
        public wPrefundingBalance_VoluntaryReduction wPrefundingBalance_VoluntaryReduction
        {
            get
            {
                if ((this.mwPrefundingBalance_VoluntaryReduction == null))
                {
                    this.mwPrefundingBalance_VoluntaryReduction = new wPrefundingBalance_VoluntaryReduction(this);
                }
                return this.mwPrefundingBalance_VoluntaryReduction;
            }
        }
        
        public wPrefundingBalance_DeemedWaivers wPrefundingBalance_DeemedWaivers
        {
            get
            {
                if ((this.mwPrefundingBalance_DeemedWaivers == null))
                {
                    this.mwPrefundingBalance_DeemedWaivers = new wPrefundingBalance_DeemedWaivers(this);
                }
                return this.mwPrefundingBalance_DeemedWaivers;
            }
        }
        
        public wPrefundingBalance_BOYBalance wPrefundingBalance_BOYBalance
        {
            get
            {
                if ((this.mwPrefundingBalance_BOYBalance == null))
                {
                    this.mwPrefundingBalance_BOYBalance = new wPrefundingBalance_BOYBalance(this);
                }
                return this.mwPrefundingBalance_BOYBalance;
            }
        }
        #endregion
        
        #region Fields
        private wPlanDates_OriginalPlanEffectDate mwPlanDates_OriginalPlanEffectDate;
        
        private wPlanDates_BeginningOfPlanYear mwPlanDates_BeginningOfPlanYear;
        
        private wPlanDates_EndOfPlanYear mwPlanDates_EndOfPlanYear;
        
        private wPlanDates_ValuationDate mwPlanDates_ValuationDate;
        
        private wPlanDates_ValuationYear mwPlanDates_ValuationYear;
        
        private wPlanDates_PlanTotallyFrozen mwPlanDates_PlanTotallyFrozen;
        
        private wPBGC_PBGCFlatRate_ParticipantCount mwPBGC_PBGCFlatRate_ParticipantCount;
        
        private wPBGC_PBGCFlatRate_PerParticipant mwPBGC_PBGCFlatRate_PerParticipant;
        
        private wPBGC_PBGCFlatRate_FlatRatePremium mwPBGC_PBGCFlatRate_FlatRatePremium;
        
        private wPBGC_NotAtRisk_InPayStatus mwPBGC_NotAtRisk_InPayStatus;
        
        private wPBGC_NotAtRisk_DeferredStatus mwPBGC_NotAtRisk_DeferredStatus;
        
        private wPBGC_NotAtRisk_VestedActives mwPBGC_NotAtRisk_VestedActives;
        
        private wPBGC_NotAtRisk_Total mwPBGC_NotAtRisk_Total;
        
        private wPBGC_ExpenseLoad_InPayStatus mwPBGC_ExpenseLoad_InPayStatus;
        
        private wPBGC_ExpenseLoad_DeferredStatus mwPBGC_ExpenseLoad_DeferredStatus;
        
        private wPBGC_ExpenseLoad_VestedActives mwPBGC_ExpenseLoad_VestedActives;
        
        private wPBGC_ExpenseLoad_Total mwPBGC_ExpenseLoad_Total;
        
        private wPBGC_AtRiskNoExpense_InPayStatus mwPBGC_AtRiskNoExpense_InPayStatus;
        
        private wPBGC_AtRiskNoExpense_DeferredStatus mwPBGC_AtRiskNoExpense_DeferredStatus;
        
        private wPBGC_AtRiskNoExpense_VestedActives mwPBGC_AtRiskNoExpense_VestedActives;
        
        private wPBGC_AtRiskNoExpense_Total mwPBGC_AtRiskNoExpense_Total;
        
        private wPBGC_AtRiskWithExpense_InPayStatus mwPBGC_AtRiskWithExpense_InPayStatus;
        
        private wPBGC_AtRiskWithExpense_DeferredStatus mwPBGC_AtRiskWithExpense_DeferredStatus;
        
        private wPBGC_AtRiskWithExpense_VestedActives mwPBGC_AtRiskWithExpense_VestedActives;
        
        private wPBGC_AtRiskWithExpense_Total mwPBGC_AtRiskWithExpense_Total;
        
        private wPBGC_FinalAtRisk_InPayStatus mwPBGC_FinalAtRisk_InPayStatus;
        
        private wPBGC_FinalAtRisk_DeferredStatus mwPBGC_FinalAtRisk_DeferredStatus;
        
        private wPBGC_FinalAtRisk_VestedActives mwPBGC_FinalAtRisk_VestedActives;
        
        private wPBGC_FinalAtRisk_Total mwPBGC_FinalAtRisk_Total;
        
        private wPBGC_PBGCTarget_InpayStatus mwPBGC_PBGCTarget_InpayStatus;
        
        private wPBGC_PBGCTarget_VestedActives mwPBGC_PBGCTarget_VestedActives;
        
        private wPBGC_PBGCTarget_DeferredStatus mwPBGC_PBGCTarget_DeferredStatus;
        
        private wPBGC_PBGCTarget_Total mwPBGC_PBGCTarget_Total;
        
        private wPBGC_PBGCTarget_MVofAssets mwPBGC_PBGCTarget_MVofAssets;
        
        private wPBGC_PBGCVariable_Unfunded mwPBGC_PBGCVariable_Unfunded;
        
        private wPBGC_PBGCVariable_9Per1000 mwPBGC_PBGCVariable_9Per1000;
        
        private wPBGC_PBGCVariable_NumOfEE mwPBGC_PBGCVariable_NumOfEE;
        
        private wPBGC_PBGCVariable_ParticipantCount mwPBGC_PBGCVariable_ParticipantCount;
        
        private wPBGC_PBGCVariable_PerParticipant mwPBGC_PBGCVariable_PerParticipant;
        
        private wPBGC_PBGCVariable_PBGCVariable mwPBGC_PBGCVariable_PBGCVariable;
        
        private wPBGC_PBGCVariable_CombinedPBGC mwPBGC_PBGCVariable_CombinedPBGC;
        
        private wData_InactivesInPayStatus mwData_InactivesInPayStatus;
        
        private wData_InactivesDeferredStatus mwData_InactivesDeferredStatus;
        
        private wData_VestedStatus mwData_VestedStatus;
        
        private wData_NonVestedStatus mwData_NonVestedStatus;
        
        private wData_Total mwData_Total;
        
        private wData_TotalPlanParticipants mwData_TotalPlanParticipants;
        
        private wData_NumOfParticipants mwData_NumOfParticipants;
        
        private wAtRiskDetermination_PirorYearNum mwAtRiskDetermination_PirorYearNum;
        
        private wAtRiskDetermination_Prong1Determination mwAtRiskDetermination_Prong1Determination;
        
        private wAtRiskDetermination_Prong1Threshold mwAtRiskDetermination_Prong1Threshold;
        
        private wAtRiskDetermination_Prong2Determination mwAtRiskDetermination_Prong2Determination;
        
        private wAtRiskDetermination_Prong2Threshold mwAtRiskDetermination_Prong2Threshold;
        
        private wAtRiskDetermination_PlanIsAtRisk mwAtRiskDetermination_PlanIsAtRisk;
        
        private wAtRiskDetermination_IncludesExpenseLoad mwAtRiskDetermination_IncludesExpenseLoad;
        
        private wAtRiskDetermination_ConsecutiveYears mwAtRiskDetermination_ConsecutiveYears;
        
        private wAtRiskDetermination_FTReflects mwAtRiskDetermination_FTReflects;
        
        private wLiabilityMeasuresFTD_NAR_InPayStatus mwLiabilityMeasuresFTD_NAR_InPayStatus;
        
        private wLiabilityMeasuresFTD_NAR_DeferredStatus mwLiabilityMeasuresFTD_NAR_DeferredStatus;
        
        private wLiabilityMeasuresFTD_NAR_VestedActives mwLiabilityMeasuresFTD_NAR_VestedActives;
        
        private wLiabilityMeasuresFTD_NAR_NonVestedActvies mwLiabilityMeasuresFTD_NAR_NonVestedActvies;
        
        private wLiabilityMeasuresFTD_NAR_Total mwLiabilityMeasuresFTD_NAR_Total;
        
        private wLiabilityMeasuresFTD_NAR_NormalCost mwLiabilityMeasuresFTD_NAR_NormalCost;
        
        private wLiabilityMeasuresFTD_Final_InPayStatus mwLiabilityMeasuresFTD_Final_InPayStatus;
        
        private wLiabilityMeasuresFTD_Final_DeferredStatus mwLiabilityMeasuresFTD_Final_DeferredStatus;
        
        private wLiabilityMeasuresFTD_Final_VestedActives mwLiabilityMeasuresFTD_Final_VestedActives;
        
        private wLiabilityMeasuresFTD_Final_NonVestedActives mwLiabilityMeasuresFTD_Final_NonVestedActives;
        
        private wLiabilityMeasuresFTD_Final_Total mwLiabilityMeasuresFTD_Final_Total;
        
        private wLiabilityMeasuresFTD_Final_NormalCost mwLiabilityMeasuresFTD_Final_NormalCost;
        
        private wLiabilityMeasuresFTD_FundingTarget_InPayStatus mwLiabilityMeasuresFTD_FundingTarget_InPayStatus;
        
        private wLiabilityMeasuresFTD_FundingTarget_DeferredStatus mwLiabilityMeasuresFTD_FundingTarget_DeferredStatus;
        
        private wLiabilityMeasuresFTD_FundingTarget_VestedActives mwLiabilityMeasuresFTD_FundingTarget_VestedActives;
        
        private wLiabilityMeasuresFTD_FundingTarget_NonVestedActives mwLiabilityMeasuresFTD_FundingTarget_NonVestedActives;
        
        private wLiabilityMeasuresFTD_FundingTarget_Total mwLiabilityMeasuresFTD_FundingTarget_Total;
        
        private wLiabilityMeasuresFTD_FundingTarget_Administrative mwLiabilityMeasuresFTD_FundingTarget_Administrative;
        
        private wLiabilityMeasuresFTD_FundingTarget_Discounted mwLiabilityMeasuresFTD_FundingTarget_Discounted;
        
        private wLiabilityMeasuresFTD_FundingTarget_Expected mwLiabilityMeasuresFTD_FundingTarget_Expected;
        
        private wLiabilityMeasuresFTD_FundingTarget_DiscountedExpected mwLiabilityMeasuresFTD_FundingTarget_DiscountedExpected;
        
        private wLiabilityMeasuresFTD_FundingTarget_NormalCost mwLiabilityMeasuresFTD_FundingTarget_NormalCost;
        
        private wLiabilityMeasuresFTD_FundingTarget_TotalNormalCost mwLiabilityMeasuresFTD_FundingTarget_TotalNormalCost;
        
        private wLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate mwLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate;
        
        private wLiabilityMeasuresMDC_NotAtRiskLiability mwLiabilityMeasuresMDC_NotAtRiskLiability;
        
        private wLiabilityMeasuresMDC_ExpenseLoad mwLiabilityMeasuresMDC_ExpenseLoad;
        
        private wLiabilityMeasuresMDC_AtRiskLiabilityNoExpense mwLiabilityMeasuresMDC_AtRiskLiabilityNoExpense;
        
        private wLiabilityMeasuresMDC_AtRiskLiabilityWithExpense mwLiabilityMeasuresMDC_AtRiskLiabilityWithExpense;
        
        private wLiabilityMeasuresMDC_FinalAtRisk mwLiabilityMeasuresMDC_FinalAtRisk;
        
        private wLiabilityMeasuresMDC_FundingTarget mwLiabilityMeasuresMDC_FundingTarget;
        
        private wCarryoverBalance_BalanceAtBegining mwCarryoverBalance_BalanceAtBegining;
        
        private wCarryoverBalance_PortionUsed mwCarryoverBalance_PortionUsed;
        
        private wCarryoverBalance_InterestUsing mwCarryoverBalance_InterestUsing;
        
        private wCarryoverBalance_BalanceAtBOY mwCarryoverBalance_BalanceAtBOY;
        
        private wCarryoverBalance_VoluntaryReduction mwCarryoverBalance_VoluntaryReduction;
        
        private wCarryoverBalance_DeemedWaivers mwCarryoverBalance_DeemedWaivers;
        
        private wCarryoverBalance_BOYBalance mwCarryoverBalance_BOYBalance;
        
        private wDevelopmentGL_Liability_Actuarial mwDevelopmentGL_Liability_Actuarial;
        
        private wDevelopmentGL_Liability_NormalCost mwDevelopmentGL_Liability_NormalCost;
        
        private wDevelopmentGL_Liability_Interest mwDevelopmentGL_Liability_Interest;
        
        private wDevelopmentGL_Benefits_BenefitPayments mwDevelopmentGL_Benefits_BenefitPayments;
        
        private wDevelopmentGL_Benefits_Administrative mwDevelopmentGL_Benefits_Administrative;
        
        private wDevelopmentGL_Benefits_EmployeeContrib mwDevelopmentGL_Benefits_EmployeeContrib;
        
        private wDevelopmentGL_Benefits_Total mwDevelopmentGL_Benefits_Total;
        
        private wDevelopmentGL_Benefits_ExpectedActuarial mwDevelopmentGL_Benefits_ExpectedActuarial;
        
        private wDevelopmentGL_Benefits_LiabilityGL mwDevelopmentGL_Benefits_LiabilityGL;
        
        private wDevelopmentGL_Asset_ActuarialAsset mwDevelopmentGL_Asset_ActuarialAsset;
        
        private wDevelopmentGL_Asset_InterestOnActuarial mwDevelopmentGL_Asset_InterestOnActuarial;
        
        private wDevelopmentGL_Asset_ContributionsMade mwDevelopmentGL_Asset_ContributionsMade;
        
        private wDevelopmentGL_Asset_InterestOnContrib mwDevelopmentGL_Asset_InterestOnContrib;
        
        private wDevelopmentGL_Asset_ExpectedActuarial mwDevelopmentGL_Asset_ExpectedActuarial;
        
        private wDevelopmentGL_Asset_ActuarialAssetGL mwDevelopmentGL_Asset_ActuarialAssetGL;
        
        private wDevelopmentGL_Asset_ActuarialGL mwDevelopmentGL_Asset_ActuarialGL;
        
        private wAR_NoExpenseLoad_RetiredAndBeneficiaries mwAR_NoExpenseLoad_RetiredAndBeneficiaries;
        
        private wAR_NoExpense_TermVested mwAR_NoExpense_TermVested;
        
        private wAR_NoExpense_VestedActives mwAR_NoExpense_VestedActives;
        
        private wAR_NoExpense_NonVestedActives mwAR_NoExpense_NonVestedActives;
        
        private wAR_NoExpense_Total mwAR_NoExpense_Total;
        
        private wAR_NoExpense_FundingNC mwAR_NoExpense_FundingNC;
        
        private wAR_Applicable_RetiredAndBeneficiries mwAR_Applicable_RetiredAndBeneficiries;
        
        private wAR_Applicable_TermVested mwAR_Applicable_TermVested;
        
        private wAR_Applicable_VestedActives mwAR_Applicable_VestedActives;
        
        private wAR_Applicable_NonVestedActives mwAR_Applicable_NonVestedActives;
        
        private wAR_Applicable_Total mwAR_Applicable_Total;
        
        private wAR_Applicable_FundingNC mwAR_Applicable_FundingNC;
        
        private wFully_PriorYear2008FTAP mwFully_PriorYear2008FTAP;
        
        private wFully_PriorYear2009FTAP mwFully_PriorYear2009FTAP;
        
        private wFully_PriorYear2010FTAP mwFully_PriorYear2010FTAP;
        
        private wAccelerated_Allowed mwAccelerated_Allowed;
        
        private wAddtitionalFunding_DoRestrictions mwAddtitionalFunding_DoRestrictions;
        
        private wCD_FirstQuarterly mwCD_FirstQuarterly;
        
        private wCD_SecondQuarterly mwCD_SecondQuarterly;
        
        private wCD_ThirdQuarterly mwCD_ThirdQuarterly;
        
        private wCD_FourthQuarterly mwCD_FourthQuarterly;
        
        private wCD_FinalContribution mwCD_FinalContribution;
        
        private wPrefundingBalance_BalanceAtBegin mwPrefundingBalance_BalanceAtBegin;
        
        private wPrefundingBalance_PortionUsed mwPrefundingBalance_PortionUsed;
        
        private wPrefundingBalance_InterestUsingPriorYrsActual mwPrefundingBalance_InterestUsingPriorYrsActual;
        
        private wPrefundingBalance_AmountRemaining mwPrefundingBalance_AmountRemaining;
        
        private wPrefundingBalance_PriorYrsExcessContrib mwPrefundingBalance_PriorYrsExcessContrib;
        
        private wPrefundingBalance_InterestOnAmount mwPrefundingBalance_InterestOnAmount;
        
        private wPrefundingBalance_InterestUsingPriorYrsEffective mwPrefundingBalance_InterestUsingPriorYrsEffective;
        
        private wPrefundingBalance_TotalAvailable mwPrefundingBalance_TotalAvailable;
        
        private wPrefundingBalance_PortionToBeAdded mwPrefundingBalance_PortionToBeAdded;
        
        private wPrefundingBalance_BalanceAtBOY mwPrefundingBalance_BalanceAtBOY;
        
        private wPrefundingBalance_VoluntaryReduction mwPrefundingBalance_VoluntaryReduction;
        
        private wPrefundingBalance_DeemedWaivers mwPrefundingBalance_DeemedWaivers;
        
        private wPrefundingBalance_BOYBalance mwPrefundingBalance_BOYBalance;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPlanDates_OriginalPlanEffectDate : WinWindow
    {
        
        public wPlanDates_OriginalPlanEffectDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtOriginalPlanEffectiveDate";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtOriginalPlanEffectDate
        {
            get
            {
                if ((this.mtxtOriginalPlanEffectDate == null))
                {
                    this.mtxtOriginalPlanEffectDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtOriginalPlanEffectDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtOriginalPlanEffectDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtOriginalPlanEffectDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtOriginalPlanEffectDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPlanDates_BeginningOfPlanYear : WinWindow
    {
        
        public wPlanDates_BeginningOfPlanYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtBeginningOfPlanYear";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo1 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo1(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo1 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo1 : WinComboBox
    {
        
        public cbo1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtBeginningOfPlanYear
        {
            get
            {
                if ((this.mtxtBeginningOfPlanYear == null))
                {
                    this.mtxtBeginningOfPlanYear = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtBeginningOfPlanYear.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtBeginningOfPlanYear.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtBeginningOfPlanYear;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtBeginningOfPlanYear;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPlanDates_EndOfPlanYear : WinWindow
    {
        
        public wPlanDates_EndOfPlanYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtEndOfPlanYear";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo2 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo2(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo2 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo2 : WinComboBox
    {
        
        public cbo2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtEndOfPlanYear
        {
            get
            {
                if ((this.mtxtEndOfPlanYear == null))
                {
                    this.mtxtEndOfPlanYear = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtEndOfPlanYear.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtEndOfPlanYear.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtEndOfPlanYear;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtEndOfPlanYear;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPlanDates_ValuationDate : WinWindow
    {
        
        public wPlanDates_ValuationDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtValuationDate";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo3 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo3(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo3 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo3 : WinComboBox
    {
        
        public cbo3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtValuationDate
        {
            get
            {
                if ((this.mtxtValuationDate == null))
                {
                    this.mtxtValuationDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtValuationDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtValuationDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtValuationDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtValuationDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPlanDates_ValuationYear : WinWindow
    {
        
        public wPlanDates_ValuationYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "intValuationYear";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboValuationYear
        {
            get
            {
                if ((this.mcboValuationYear == null))
                {
                    this.mcboValuationYear = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboValuationYear.SearchProperties[WinComboBox.PropertyNames.Name] = "Beginning of plan year";
                    this.mcboValuationYear.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboValuationYear;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboValuationYear;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPlanDates_PlanTotallyFrozen : WinWindow
    {
        
        public wPlanDates_PlanTotallyFrozen(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "boolPlanFrozenBefore9105";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboPlanTotallyFrozen
        {
            get
            {
                if ((this.mcboPlanTotallyFrozen == null))
                {
                    this.mcboPlanTotallyFrozen = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboPlanTotallyFrozen.SearchProperties[WinComboBox.PropertyNames.Name] = "End of plan year";
                    this.mcboPlanTotallyFrozen.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboPlanTotallyFrozen;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboPlanTotallyFrozen;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCFlatRate_ParticipantCount : WinWindow
    {
        
        public wPBGC_PBGCFlatRate_ParticipantCount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "50";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCFlatRate_ParticipantCount txtPBGCFlatRate_ParticipantCount
        {
            get
            {
                if ((this.mtxtPBGCFlatRate_ParticipantCount == null))
                {
                    this.mtxtPBGCFlatRate_ParticipantCount = new txtPBGCFlatRate_ParticipantCount(this);
                }
                return this.mtxtPBGCFlatRate_ParticipantCount;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCFlatRate_ParticipantCount mtxtPBGCFlatRate_ParticipantCount;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCFlatRate_ParticipantCount : WinEdit
    {
        
        public txtPBGCFlatRate_ParticipantCount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCFlatRate_PerParticipant : WinWindow
    {
        
        public wPBGC_PBGCFlatRate_PerParticipant(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "48";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCFlatRate_PerParticipant txtPBGCFlatRate_PerParticipant
        {
            get
            {
                if ((this.mtxtPBGCFlatRate_PerParticipant == null))
                {
                    this.mtxtPBGCFlatRate_PerParticipant = new txtPBGCFlatRate_PerParticipant(this);
                }
                return this.mtxtPBGCFlatRate_PerParticipant;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCFlatRate_PerParticipant mtxtPBGCFlatRate_PerParticipant;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCFlatRate_PerParticipant : WinEdit
    {
        
        public txtPBGCFlatRate_PerParticipant(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCFlatRate_FlatRatePremium : WinWindow
    {
        
        public wPBGC_PBGCFlatRate_FlatRatePremium(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "49";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCFlatRate_FlatRatePremium txtPBGCFlatRate_FlatRatePremium
        {
            get
            {
                if ((this.mtxtPBGCFlatRate_FlatRatePremium == null))
                {
                    this.mtxtPBGCFlatRate_FlatRatePremium = new txtPBGCFlatRate_FlatRatePremium(this);
                }
                return this.mtxtPBGCFlatRate_FlatRatePremium;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCFlatRate_FlatRatePremium mtxtPBGCFlatRate_FlatRatePremium;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCFlatRate_FlatRatePremium : WinEdit
    {
        
        public txtPBGCFlatRate_FlatRatePremium(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_NotAtRisk_InPayStatus : WinWindow
    {
        
        public wPBGC_NotAtRisk_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "47";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNotAtRisk_InPayStatus txtNotAtRisk_InPayStatus
        {
            get
            {
                if ((this.mtxtNotAtRisk_InPayStatus == null))
                {
                    this.mtxtNotAtRisk_InPayStatus = new txtNotAtRisk_InPayStatus(this);
                }
                return this.mtxtNotAtRisk_InPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtNotAtRisk_InPayStatus mtxtNotAtRisk_InPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNotAtRisk_InPayStatus : WinEdit
    {
        
        public txtNotAtRisk_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_NotAtRisk_DeferredStatus : WinWindow
    {
        
        public wPBGC_NotAtRisk_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "45";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNotAtRisk_DeferredStatus txtNotAtRisk_DeferredStatus
        {
            get
            {
                if ((this.mtxtNotAtRisk_DeferredStatus == null))
                {
                    this.mtxtNotAtRisk_DeferredStatus = new txtNotAtRisk_DeferredStatus(this);
                }
                return this.mtxtNotAtRisk_DeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtNotAtRisk_DeferredStatus mtxtNotAtRisk_DeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNotAtRisk_DeferredStatus : WinEdit
    {
        
        public txtNotAtRisk_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_NotAtRisk_VestedActives : WinWindow
    {
        
        public wPBGC_NotAtRisk_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "46";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNotAtRisk_VestedActives txtNotAtRisk_VestedActives
        {
            get
            {
                if ((this.mtxtNotAtRisk_VestedActives == null))
                {
                    this.mtxtNotAtRisk_VestedActives = new txtNotAtRisk_VestedActives(this);
                }
                return this.mtxtNotAtRisk_VestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtNotAtRisk_VestedActives mtxtNotAtRisk_VestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNotAtRisk_VestedActives : WinEdit
    {
        
        public txtNotAtRisk_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_NotAtRisk_Total : WinWindow
    {
        
        public wPBGC_NotAtRisk_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "44";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNotAtRisk_Total txtNotAtRisk_Total
        {
            get
            {
                if ((this.mtxtNotAtRisk_Total == null))
                {
                    this.mtxtNotAtRisk_Total = new txtNotAtRisk_Total(this);
                }
                return this.mtxtNotAtRisk_Total;
            }
        }
        #endregion
        
        #region Fields
        private txtNotAtRisk_Total mtxtNotAtRisk_Total;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNotAtRisk_Total : WinEdit
    {
        
        public txtNotAtRisk_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_ExpenseLoad_InPayStatus : WinWindow
    {
        
        public wPBGC_ExpenseLoad_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "43";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpenseLoad_InPayStatus txtExpenseLoad_InPayStatus
        {
            get
            {
                if ((this.mtxtExpenseLoad_InPayStatus == null))
                {
                    this.mtxtExpenseLoad_InPayStatus = new txtExpenseLoad_InPayStatus(this);
                }
                return this.mtxtExpenseLoad_InPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtExpenseLoad_InPayStatus mtxtExpenseLoad_InPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpenseLoad_InPayStatus : WinEdit
    {
        
        public txtExpenseLoad_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_ExpenseLoad_DeferredStatus : WinWindow
    {
        
        public wPBGC_ExpenseLoad_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "41";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpenseLoad_DeferredStatus txtExpenseLoad_DeferredStatus
        {
            get
            {
                if ((this.mtxtExpenseLoad_DeferredStatus == null))
                {
                    this.mtxtExpenseLoad_DeferredStatus = new txtExpenseLoad_DeferredStatus(this);
                }
                return this.mtxtExpenseLoad_DeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtExpenseLoad_DeferredStatus mtxtExpenseLoad_DeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpenseLoad_DeferredStatus : WinEdit
    {
        
        public txtExpenseLoad_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_ExpenseLoad_VestedActives : WinWindow
    {
        
        public wPBGC_ExpenseLoad_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "42";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpenseLoad_VestedActives txtExpenseLoad_VestedActives
        {
            get
            {
                if ((this.mtxtExpenseLoad_VestedActives == null))
                {
                    this.mtxtExpenseLoad_VestedActives = new txtExpenseLoad_VestedActives(this);
                }
                return this.mtxtExpenseLoad_VestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtExpenseLoad_VestedActives mtxtExpenseLoad_VestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpenseLoad_VestedActives : WinEdit
    {
        
        public txtExpenseLoad_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_ExpenseLoad_Total : WinWindow
    {
        
        public wPBGC_ExpenseLoad_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "40";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpenseLoad_Total txtExpenseLoad_Total
        {
            get
            {
                if ((this.mtxtExpenseLoad_Total == null))
                {
                    this.mtxtExpenseLoad_Total = new txtExpenseLoad_Total(this);
                }
                return this.mtxtExpenseLoad_Total;
            }
        }
        #endregion
        
        #region Fields
        private txtExpenseLoad_Total mtxtExpenseLoad_Total;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpenseLoad_Total : WinEdit
    {
        
        public txtExpenseLoad_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskNoExpense_InPayStatus : WinWindow
    {
        
        public wPBGC_AtRiskNoExpense_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "39";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskNoExpense_InPayStatus txtAtRiskNoExpense_InPayStatus
        {
            get
            {
                if ((this.mtxtAtRiskNoExpense_InPayStatus == null))
                {
                    this.mtxtAtRiskNoExpense_InPayStatus = new txtAtRiskNoExpense_InPayStatus(this);
                }
                return this.mtxtAtRiskNoExpense_InPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskNoExpense_InPayStatus mtxtAtRiskNoExpense_InPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskNoExpense_InPayStatus : WinEdit
    {
        
        public txtAtRiskNoExpense_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskNoExpense_DeferredStatus : WinWindow
    {
        
        public wPBGC_AtRiskNoExpense_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "37";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskNoExpense_DeferredStatus txtAtRiskNoExpense_DeferredStatus
        {
            get
            {
                if ((this.mtxtAtRiskNoExpense_DeferredStatus == null))
                {
                    this.mtxtAtRiskNoExpense_DeferredStatus = new txtAtRiskNoExpense_DeferredStatus(this);
                }
                return this.mtxtAtRiskNoExpense_DeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskNoExpense_DeferredStatus mtxtAtRiskNoExpense_DeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskNoExpense_DeferredStatus : WinEdit
    {
        
        public txtAtRiskNoExpense_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskNoExpense_VestedActives : WinWindow
    {
        
        public wPBGC_AtRiskNoExpense_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "38";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskNoExpense_VestedActives txtAtRiskNoExpense_VestedActives
        {
            get
            {
                if ((this.mtxtAtRiskNoExpense_VestedActives == null))
                {
                    this.mtxtAtRiskNoExpense_VestedActives = new txtAtRiskNoExpense_VestedActives(this);
                }
                return this.mtxtAtRiskNoExpense_VestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskNoExpense_VestedActives mtxtAtRiskNoExpense_VestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskNoExpense_VestedActives : WinEdit
    {
        
        public txtAtRiskNoExpense_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskNoExpense_Total : WinWindow
    {
        
        public wPBGC_AtRiskNoExpense_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "36";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskNoExpense_Total txtAtRiskNoExpense_Total
        {
            get
            {
                if ((this.mtxtAtRiskNoExpense_Total == null))
                {
                    this.mtxtAtRiskNoExpense_Total = new txtAtRiskNoExpense_Total(this);
                }
                return this.mtxtAtRiskNoExpense_Total;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskNoExpense_Total mtxtAtRiskNoExpense_Total;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskNoExpense_Total : WinEdit
    {
        
        public txtAtRiskNoExpense_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskWithExpense_InPayStatus : WinWindow
    {
        
        public wPBGC_AtRiskWithExpense_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "35";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskWithExpense_InPayStatus txtAtRiskWithExpense_InPayStatus
        {
            get
            {
                if ((this.mtxtAtRiskWithExpense_InPayStatus == null))
                {
                    this.mtxtAtRiskWithExpense_InPayStatus = new txtAtRiskWithExpense_InPayStatus(this);
                }
                return this.mtxtAtRiskWithExpense_InPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskWithExpense_InPayStatus mtxtAtRiskWithExpense_InPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskWithExpense_InPayStatus : WinEdit
    {
        
        public txtAtRiskWithExpense_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskWithExpense_DeferredStatus : WinWindow
    {
        
        public wPBGC_AtRiskWithExpense_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "33";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskWithExpense_DeferredStatus txtAtRiskWithExpense_DeferredStatus
        {
            get
            {
                if ((this.mtxtAtRiskWithExpense_DeferredStatus == null))
                {
                    this.mtxtAtRiskWithExpense_DeferredStatus = new txtAtRiskWithExpense_DeferredStatus(this);
                }
                return this.mtxtAtRiskWithExpense_DeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskWithExpense_DeferredStatus mtxtAtRiskWithExpense_DeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskWithExpense_DeferredStatus : WinEdit
    {
        
        public txtAtRiskWithExpense_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskWithExpense_VestedActives : WinWindow
    {
        
        public wPBGC_AtRiskWithExpense_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "34";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskWithExpense_VestedActives txtAtRiskWithExpense_VestedActives
        {
            get
            {
                if ((this.mtxtAtRiskWithExpense_VestedActives == null))
                {
                    this.mtxtAtRiskWithExpense_VestedActives = new txtAtRiskWithExpense_VestedActives(this);
                }
                return this.mtxtAtRiskWithExpense_VestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskWithExpense_VestedActives mtxtAtRiskWithExpense_VestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskWithExpense_VestedActives : WinEdit
    {
        
        public txtAtRiskWithExpense_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_AtRiskWithExpense_Total : WinWindow
    {
        
        public wPBGC_AtRiskWithExpense_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "32";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskWithExpense_Total txtAtRiskWithExpense_Total
        {
            get
            {
                if ((this.mtxtAtRiskWithExpense_Total == null))
                {
                    this.mtxtAtRiskWithExpense_Total = new txtAtRiskWithExpense_Total(this);
                }
                return this.mtxtAtRiskWithExpense_Total;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskWithExpense_Total mtxtAtRiskWithExpense_Total;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskWithExpense_Total : WinEdit
    {
        
        public txtAtRiskWithExpense_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_FinalAtRisk_InPayStatus : WinWindow
    {
        
        public wPBGC_FinalAtRisk_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "31";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFinalAtRisk_InPayStatus txtFinalAtRisk_InPayStatus
        {
            get
            {
                if ((this.mtxtFinalAtRisk_InPayStatus == null))
                {
                    this.mtxtFinalAtRisk_InPayStatus = new txtFinalAtRisk_InPayStatus(this);
                }
                return this.mtxtFinalAtRisk_InPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtFinalAtRisk_InPayStatus mtxtFinalAtRisk_InPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFinalAtRisk_InPayStatus : WinEdit
    {
        
        public txtFinalAtRisk_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_FinalAtRisk_DeferredStatus : WinWindow
    {
        
        public wPBGC_FinalAtRisk_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "29";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFinalAtRisk_DeferredStatus txtFinalAtRisk_DeferredStatus
        {
            get
            {
                if ((this.mtxtFinalAtRisk_DeferredStatus == null))
                {
                    this.mtxtFinalAtRisk_DeferredStatus = new txtFinalAtRisk_DeferredStatus(this);
                }
                return this.mtxtFinalAtRisk_DeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtFinalAtRisk_DeferredStatus mtxtFinalAtRisk_DeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFinalAtRisk_DeferredStatus : WinEdit
    {
        
        public txtFinalAtRisk_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_FinalAtRisk_VestedActives : WinWindow
    {
        
        public wPBGC_FinalAtRisk_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "30";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFinalAtRisk_VestedActives txtFinalAtRisk_VestedActives
        {
            get
            {
                if ((this.mtxtFinalAtRisk_VestedActives == null))
                {
                    this.mtxtFinalAtRisk_VestedActives = new txtFinalAtRisk_VestedActives(this);
                }
                return this.mtxtFinalAtRisk_VestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtFinalAtRisk_VestedActives mtxtFinalAtRisk_VestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFinalAtRisk_VestedActives : WinEdit
    {
        
        public txtFinalAtRisk_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_FinalAtRisk_Total : WinWindow
    {
        
        public wPBGC_FinalAtRisk_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "28";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFinalAtRisk_Total txtFinalAtRisk_Total
        {
            get
            {
                if ((this.mtxtFinalAtRisk_Total == null))
                {
                    this.mtxtFinalAtRisk_Total = new txtFinalAtRisk_Total(this);
                }
                return this.mtxtFinalAtRisk_Total;
            }
        }
        #endregion
        
        #region Fields
        private txtFinalAtRisk_Total mtxtFinalAtRisk_Total;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFinalAtRisk_Total : WinEdit
    {
        
        public txtFinalAtRisk_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCTarget_InpayStatus : WinWindow
    {
        
        public wPBGC_PBGCTarget_InpayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "27";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCTarget_InpayStatus txtPBGCTarget_InpayStatus
        {
            get
            {
                if ((this.mtxtPBGCTarget_InpayStatus == null))
                {
                    this.mtxtPBGCTarget_InpayStatus = new txtPBGCTarget_InpayStatus(this);
                }
                return this.mtxtPBGCTarget_InpayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCTarget_InpayStatus mtxtPBGCTarget_InpayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCTarget_InpayStatus : WinEdit
    {
        
        public txtPBGCTarget_InpayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCTarget_VestedActives : WinWindow
    {
        
        public wPBGC_PBGCTarget_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "26";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCTarget_VestedActives txtPBGCTarget_VestedActives
        {
            get
            {
                if ((this.mtxtPBGCTarget_VestedActives == null))
                {
                    this.mtxtPBGCTarget_VestedActives = new txtPBGCTarget_VestedActives(this);
                }
                return this.mtxtPBGCTarget_VestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCTarget_VestedActives mtxtPBGCTarget_VestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCTarget_VestedActives : WinEdit
    {
        
        public txtPBGCTarget_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCTarget_DeferredStatus : WinWindow
    {
        
        public wPBGC_PBGCTarget_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "25";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCTarget_DeferredStatus txtPBGCTarget_DeferredStatus
        {
            get
            {
                if ((this.mtxtPBGCTarget_DeferredStatus == null))
                {
                    this.mtxtPBGCTarget_DeferredStatus = new txtPBGCTarget_DeferredStatus(this);
                }
                return this.mtxtPBGCTarget_DeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCTarget_DeferredStatus mtxtPBGCTarget_DeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCTarget_DeferredStatus : WinEdit
    {
        
        public txtPBGCTarget_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCTarget_Total : WinWindow
    {
        
        public wPBGC_PBGCTarget_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "24";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCTarget_Total txtPBGCTarget_Total
        {
            get
            {
                if ((this.mtxtPBGCTarget_Total == null))
                {
                    this.mtxtPBGCTarget_Total = new txtPBGCTarget_Total(this);
                }
                return this.mtxtPBGCTarget_Total;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCTarget_Total mtxtPBGCTarget_Total;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCTarget_Total : WinEdit
    {
        
        public txtPBGCTarget_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCTarget_MVofAssets : WinWindow
    {
        
        public wPBGC_PBGCTarget_MVofAssets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "23";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCTarget_MVofAssets txtPBGCTarget_MVofAssets
        {
            get
            {
                if ((this.mtxtPBGCTarget_MVofAssets == null))
                {
                    this.mtxtPBGCTarget_MVofAssets = new txtPBGCTarget_MVofAssets(this);
                }
                return this.mtxtPBGCTarget_MVofAssets;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCTarget_MVofAssets mtxtPBGCTarget_MVofAssets;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCTarget_MVofAssets : WinEdit
    {
        
        public txtPBGCTarget_MVofAssets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_Unfunded : WinWindow
    {
        
        public wPBGC_PBGCVariable_Unfunded(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "21";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCVariable_Unfunded txtPBGCVariable_Unfunded
        {
            get
            {
                if ((this.mtxtPBGCVariable_Unfunded == null))
                {
                    this.mtxtPBGCVariable_Unfunded = new txtPBGCVariable_Unfunded(this);
                }
                return this.mtxtPBGCVariable_Unfunded;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCVariable_Unfunded mtxtPBGCVariable_Unfunded;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCVariable_Unfunded : WinEdit
    {
        
        public txtPBGCVariable_Unfunded(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_9Per1000 : WinWindow
    {
        
        public wPBGC_PBGCVariable_9Per1000(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "22";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCVariable_9Per1000 txtPBGCVariable_9Per1000
        {
            get
            {
                if ((this.mtxtPBGCVariable_9Per1000 == null))
                {
                    this.mtxtPBGCVariable_9Per1000 = new txtPBGCVariable_9Per1000(this);
                }
                return this.mtxtPBGCVariable_9Per1000;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCVariable_9Per1000 mtxtPBGCVariable_9Per1000;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCVariable_9Per1000 : WinEdit
    {
        
        public txtPBGCVariable_9Per1000(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_NumOfEE : WinWindow
    {
        
        public wPBGC_PBGCVariable_NumOfEE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "20";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCVariable_NumOfEE txtPBGCVariable_NumOfEE
        {
            get
            {
                if ((this.mtxtPBGCVariable_NumOfEE == null))
                {
                    this.mtxtPBGCVariable_NumOfEE = new txtPBGCVariable_NumOfEE(this);
                }
                return this.mtxtPBGCVariable_NumOfEE;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCVariable_NumOfEE mtxtPBGCVariable_NumOfEE;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCVariable_NumOfEE : WinEdit
    {
        
        public txtPBGCVariable_NumOfEE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_ParticipantCount : WinWindow
    {
        
        public wPBGC_PBGCVariable_ParticipantCount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "19";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCVariable_ParticipantCount txtPBGCVariable_ParticipantCount
        {
            get
            {
                if ((this.mtxtPBGCVariable_ParticipantCount == null))
                {
                    this.mtxtPBGCVariable_ParticipantCount = new txtPBGCVariable_ParticipantCount(this);
                }
                return this.mtxtPBGCVariable_ParticipantCount;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCVariable_ParticipantCount mtxtPBGCVariable_ParticipantCount;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCVariable_ParticipantCount : WinEdit
    {
        
        public txtPBGCVariable_ParticipantCount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_PerParticipant : WinWindow
    {
        
        public wPBGC_PBGCVariable_PerParticipant(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPerParticipantVariableRateLimit";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtPBGCVariable_PerParticipant
        {
            get
            {
                if ((this.mtxtPBGCVariable_PerParticipant == null))
                {
                    this.mtxtPBGCVariable_PerParticipant = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtPBGCVariable_PerParticipant.SearchProperties[WinEdit.PropertyNames.Name] = "Retired and beneficiaries in pay status";
                    this.mtxtPBGCVariable_PerParticipant.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtPBGCVariable_PerParticipant;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtPBGCVariable_PerParticipant;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_PBGCVariable : WinWindow
    {
        
        public wPBGC_PBGCVariable_PBGCVariable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "18";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCVariable_PBGCVariable txtPBGCVariable_PBGCVariable
        {
            get
            {
                if ((this.mtxtPBGCVariable_PBGCVariable == null))
                {
                    this.mtxtPBGCVariable_PBGCVariable = new txtPBGCVariable_PBGCVariable(this);
                }
                return this.mtxtPBGCVariable_PBGCVariable;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCVariable_PBGCVariable mtxtPBGCVariable_PBGCVariable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCVariable_PBGCVariable : WinEdit
    {
        
        public txtPBGCVariable_PBGCVariable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPBGC_PBGCVariable_CombinedPBGC : WinWindow
    {
        
        public wPBGC_PBGCVariable_CombinedPBGC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "17";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPBGCVariable_CombinedPBGC txtPBGCVariable_CombinedPBGC
        {
            get
            {
                if ((this.mtxtPBGCVariable_CombinedPBGC == null))
                {
                    this.mtxtPBGCVariable_CombinedPBGC = new txtPBGCVariable_CombinedPBGC(this);
                }
                return this.mtxtPBGCVariable_CombinedPBGC;
            }
        }
        #endregion
        
        #region Fields
        private txtPBGCVariable_CombinedPBGC mtxtPBGCVariable_CombinedPBGC;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPBGCVariable_CombinedPBGC : WinEdit
    {
        
        public txtPBGCVariable_CombinedPBGC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_InactivesInPayStatus : WinWindow
    {
        
        public wData_InactivesInPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "132";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInactivesInPayStatus txtInactivesInPayStatus
        {
            get
            {
                if ((this.mtxtInactivesInPayStatus == null))
                {
                    this.mtxtInactivesInPayStatus = new txtInactivesInPayStatus(this);
                }
                return this.mtxtInactivesInPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtInactivesInPayStatus mtxtInactivesInPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInactivesInPayStatus : WinEdit
    {
        
        public txtInactivesInPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_InactivesDeferredStatus : WinWindow
    {
        
        public wData_InactivesDeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "126";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInactivesDeferredStatus txtInactivesDeferredStatus
        {
            get
            {
                if ((this.mtxtInactivesDeferredStatus == null))
                {
                    this.mtxtInactivesDeferredStatus = new txtInactivesDeferredStatus(this);
                }
                return this.mtxtInactivesDeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtInactivesDeferredStatus mtxtInactivesDeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInactivesDeferredStatus : WinEdit
    {
        
        public txtInactivesDeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_VestedStatus : WinWindow
    {
        
        public wData_VestedStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "129";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtVestedStatus txtVestedStatus
        {
            get
            {
                if ((this.mtxtVestedStatus == null))
                {
                    this.mtxtVestedStatus = new txtVestedStatus(this);
                }
                return this.mtxtVestedStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtVestedStatus mtxtVestedStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtVestedStatus : WinEdit
    {
        
        public txtVestedStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_NonVestedStatus : WinWindow
    {
        
        public wData_NonVestedStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "131";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNonVestedStatus txtNonVestedStatus
        {
            get
            {
                if ((this.mtxtNonVestedStatus == null))
                {
                    this.mtxtNonVestedStatus = new txtNonVestedStatus(this);
                }
                return this.mtxtNonVestedStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtNonVestedStatus mtxtNonVestedStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNonVestedStatus : WinEdit
    {
        
        public txtNonVestedStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_Total : WinWindow
    {
        
        public wData_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "128";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotal txtTotal
        {
            get
            {
                if ((this.mtxtTotal == null))
                {
                    this.mtxtTotal = new txtTotal(this);
                }
                return this.mtxtTotal;
            }
        }
        #endregion
        
        #region Fields
        private txtTotal mtxtTotal;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotal : WinEdit
    {
        
        public txtTotal(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_TotalPlanParticipants : WinWindow
    {
        
        public wData_TotalPlanParticipants(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "130";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotalPlanParticipants txtTotalPlanParticipants
        {
            get
            {
                if ((this.mtxtTotalPlanParticipants == null))
                {
                    this.mtxtTotalPlanParticipants = new txtTotalPlanParticipants(this);
                }
                return this.mtxtTotalPlanParticipants;
            }
        }
        #endregion
        
        #region Fields
        private txtTotalPlanParticipants mtxtTotalPlanParticipants;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotalPlanParticipants : WinEdit
    {
        
        public txtTotalPlanParticipants(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wData_NumOfParticipants : WinWindow
    {
        
        public wData_NumOfParticipants(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "127";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNumOfParticipants txtNumOfParticipants
        {
            get
            {
                if ((this.mtxtNumOfParticipants == null))
                {
                    this.mtxtNumOfParticipants = new txtNumOfParticipants(this);
                }
                return this.mtxtNumOfParticipants;
            }
        }
        #endregion
        
        #region Fields
        private txtNumOfParticipants mtxtNumOfParticipants;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNumOfParticipants : WinEdit
    {
        
        public txtNumOfParticipants(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_PirorYearNum : WinWindow
    {
        
        public wAtRiskDetermination_PirorYearNum(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "125";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPirorYearNum txtPirorYearNum
        {
            get
            {
                if ((this.mtxtPirorYearNum == null))
                {
                    this.mtxtPirorYearNum = new txtPirorYearNum(this);
                }
                return this.mtxtPirorYearNum;
            }
        }
        #endregion
        
        #region Fields
        private txtPirorYearNum mtxtPirorYearNum;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPirorYearNum : WinEdit
    {
        
        public txtPirorYearNum(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_Prong1Determination : WinWindow
    {
        
        public wAtRiskDetermination_Prong1Determination(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "122";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtProng1Determination txtProng1Determination
        {
            get
            {
                if ((this.mtxtProng1Determination == null))
                {
                    this.mtxtProng1Determination = new txtProng1Determination(this);
                }
                return this.mtxtProng1Determination;
            }
        }
        #endregion
        
        #region Fields
        private txtProng1Determination mtxtProng1Determination;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtProng1Determination : WinEdit
    {
        
        public txtProng1Determination(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_Prong1Threshold : WinWindow
    {
        
        public wAtRiskDetermination_Prong1Threshold(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "121";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtProng1Threshold txtProng1Threshold
        {
            get
            {
                if ((this.mtxtProng1Threshold == null))
                {
                    this.mtxtProng1Threshold = new txtProng1Threshold(this);
                }
                return this.mtxtProng1Threshold;
            }
        }
        #endregion
        
        #region Fields
        private txtProng1Threshold mtxtProng1Threshold;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtProng1Threshold : WinEdit
    {
        
        public txtProng1Threshold(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_Prong2Determination : WinWindow
    {
        
        public wAtRiskDetermination_Prong2Determination(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "120";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtProng2Determination txtProng2Determination
        {
            get
            {
                if ((this.mtxtProng2Determination == null))
                {
                    this.mtxtProng2Determination = new txtProng2Determination(this);
                }
                return this.mtxtProng2Determination;
            }
        }
        #endregion
        
        #region Fields
        private txtProng2Determination mtxtProng2Determination;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtProng2Determination : WinEdit
    {
        
        public txtProng2Determination(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_Prong2Threshold : WinWindow
    {
        
        public wAtRiskDetermination_Prong2Threshold(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "119";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtProng2Threshold txtProng2Threshold
        {
            get
            {
                if ((this.mtxtProng2Threshold == null))
                {
                    this.mtxtProng2Threshold = new txtProng2Threshold(this);
                }
                return this.mtxtProng2Threshold;
            }
        }
        #endregion
        
        #region Fields
        private txtProng2Threshold mtxtProng2Threshold;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtProng2Threshold : WinEdit
    {
        
        public txtProng2Threshold(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_PlanIsAtRisk : WinWindow
    {
        
        public wAtRiskDetermination_PlanIsAtRisk(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "boolPlanIsAtRisk";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboPlanIsAtRisk
        {
            get
            {
                if ((this.mcboPlanIsAtRisk == null))
                {
                    this.mcboPlanIsAtRisk = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboPlanIsAtRisk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboPlanIsAtRisk;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboPlanIsAtRisk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_IncludesExpenseLoad : WinWindow
    {
        
        public wAtRiskDetermination_IncludesExpenseLoad(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "boolAtRiskLiabilityIncludesExpenseLoad";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboIncludesExpenseLoad
        {
            get
            {
                if ((this.mcboIncludesExpenseLoad == null))
                {
                    this.mcboIncludesExpenseLoad = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboIncludesExpenseLoad.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboIncludesExpenseLoad;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboIncludesExpenseLoad;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_ConsecutiveYears : WinWindow
    {
        
        public wAtRiskDetermination_ConsecutiveYears(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "124";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtConsecutiveYears txtConsecutiveYears
        {
            get
            {
                if ((this.mtxtConsecutiveYears == null))
                {
                    this.mtxtConsecutiveYears = new txtConsecutiveYears(this);
                }
                return this.mtxtConsecutiveYears;
            }
        }
        #endregion
        
        #region Fields
        private txtConsecutiveYears mtxtConsecutiveYears;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtConsecutiveYears : WinEdit
    {
        
        public txtConsecutiveYears(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAtRiskDetermination_FTReflects : WinWindow
    {
        
        public wAtRiskDetermination_FTReflects(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "123";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFTReflects txtFTReflects
        {
            get
            {
                if ((this.mtxtFTReflects == null))
                {
                    this.mtxtFTReflects = new txtFTReflects(this);
                }
                return this.mtxtFTReflects;
            }
        }
        #endregion
        
        #region Fields
        private txtFTReflects mtxtFTReflects;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFTReflects : WinEdit
    {
        
        public txtFTReflects(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_NAR_InPayStatus : WinWindow
    {
        
        public wLiabilityMeasuresFTD_NAR_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "117";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInPayStatus txtInPayStatus
        {
            get
            {
                if ((this.mtxtInPayStatus == null))
                {
                    this.mtxtInPayStatus = new txtInPayStatus(this);
                }
                return this.mtxtInPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtInPayStatus mtxtInPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInPayStatus : WinEdit
    {
        
        public txtInPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_NAR_DeferredStatus : WinWindow
    {
        
        public wLiabilityMeasuresFTD_NAR_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "112";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDeferredStatus txtDeferredStatus
        {
            get
            {
                if ((this.mtxtDeferredStatus == null))
                {
                    this.mtxtDeferredStatus = new txtDeferredStatus(this);
                }
                return this.mtxtDeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtDeferredStatus mtxtDeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDeferredStatus : WinEdit
    {
        
        public txtDeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_NAR_VestedActives : WinWindow
    {
        
        public wLiabilityMeasuresFTD_NAR_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "114";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtVestedActives txtVestedActives
        {
            get
            {
                if ((this.mtxtVestedActives == null))
                {
                    this.mtxtVestedActives = new txtVestedActives(this);
                }
                return this.mtxtVestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtVestedActives mtxtVestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtVestedActives : WinEdit
    {
        
        public txtVestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_NAR_NonVestedActvies : WinWindow
    {
        
        public wLiabilityMeasuresFTD_NAR_NonVestedActvies(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "116";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNonVestedActives txtNonVestedActives
        {
            get
            {
                if ((this.mtxtNonVestedActives == null))
                {
                    this.mtxtNonVestedActives = new txtNonVestedActives(this);
                }
                return this.mtxtNonVestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtNonVestedActives mtxtNonVestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNonVestedActives : WinEdit
    {
        
        public txtNonVestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_NAR_Total : WinWindow
    {
        
        public wLiabilityMeasuresFTD_NAR_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "113";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotal1 txtTotal
        {
            get
            {
                if ((this.mtxtTotal == null))
                {
                    this.mtxtTotal = new txtTotal1(this);
                }
                return this.mtxtTotal;
            }
        }
        #endregion
        
        #region Fields
        private txtTotal1 mtxtTotal;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotal1 : WinEdit
    {
        
        public txtTotal1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_NAR_NormalCost : WinWindow
    {
        
        public wLiabilityMeasuresFTD_NAR_NormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "115";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNormalCost txtNormalCost
        {
            get
            {
                if ((this.mtxtNormalCost == null))
                {
                    this.mtxtNormalCost = new txtNormalCost(this);
                }
                return this.mtxtNormalCost;
            }
        }
        #endregion
        
        #region Fields
        private txtNormalCost mtxtNormalCost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNormalCost : WinEdit
    {
        
        public txtNormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_Final_InPayStatus : WinWindow
    {
        
        public wLiabilityMeasuresFTD_Final_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "93";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInPayStatus1 txtInPayStatus
        {
            get
            {
                if ((this.mtxtInPayStatus == null))
                {
                    this.mtxtInPayStatus = new txtInPayStatus1(this);
                }
                return this.mtxtInPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtInPayStatus1 mtxtInPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInPayStatus1 : WinEdit
    {
        
        public txtInPayStatus1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_Final_DeferredStatus : WinWindow
    {
        
        public wLiabilityMeasuresFTD_Final_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "88";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDeferredStatus1 txtDeferredStatus
        {
            get
            {
                if ((this.mtxtDeferredStatus == null))
                {
                    this.mtxtDeferredStatus = new txtDeferredStatus1(this);
                }
                return this.mtxtDeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtDeferredStatus1 mtxtDeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDeferredStatus1 : WinEdit
    {
        
        public txtDeferredStatus1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_Final_VestedActives : WinWindow
    {
        
        public wLiabilityMeasuresFTD_Final_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "90";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtVestedActives1 txtVestedActives
        {
            get
            {
                if ((this.mtxtVestedActives == null))
                {
                    this.mtxtVestedActives = new txtVestedActives1(this);
                }
                return this.mtxtVestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtVestedActives1 mtxtVestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtVestedActives1 : WinEdit
    {
        
        public txtVestedActives1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_Final_NonVestedActives : WinWindow
    {
        
        public wLiabilityMeasuresFTD_Final_NonVestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "92";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNonVestedActives1 txtNonVestedActives
        {
            get
            {
                if ((this.mtxtNonVestedActives == null))
                {
                    this.mtxtNonVestedActives = new txtNonVestedActives1(this);
                }
                return this.mtxtNonVestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtNonVestedActives1 mtxtNonVestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNonVestedActives1 : WinEdit
    {
        
        public txtNonVestedActives1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_Final_Total : WinWindow
    {
        
        public wLiabilityMeasuresFTD_Final_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "89";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotal2 txtTotal
        {
            get
            {
                if ((this.mtxtTotal == null))
                {
                    this.mtxtTotal = new txtTotal2(this);
                }
                return this.mtxtTotal;
            }
        }
        #endregion
        
        #region Fields
        private txtTotal2 mtxtTotal;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotal2 : WinEdit
    {
        
        public txtTotal2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_Final_NormalCost : WinWindow
    {
        
        public wLiabilityMeasuresFTD_Final_NormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "91";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNormalCost1 txtNormalCost
        {
            get
            {
                if ((this.mtxtNormalCost == null))
                {
                    this.mtxtNormalCost = new txtNormalCost1(this);
                }
                return this.mtxtNormalCost;
            }
        }
        #endregion
        
        #region Fields
        private txtNormalCost1 mtxtNormalCost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNormalCost1 : WinEdit
    {
        
        public txtNormalCost1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_InPayStatus : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_InPayStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "87";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInPayStatus2 txtInPayStatus
        {
            get
            {
                if ((this.mtxtInPayStatus == null))
                {
                    this.mtxtInPayStatus = new txtInPayStatus2(this);
                }
                return this.mtxtInPayStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtInPayStatus2 mtxtInPayStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInPayStatus2 : WinEdit
    {
        
        public txtInPayStatus2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_DeferredStatus : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_DeferredStatus(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "82";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDeferredStatus2 txtDeferredStatus
        {
            get
            {
                if ((this.mtxtDeferredStatus == null))
                {
                    this.mtxtDeferredStatus = new txtDeferredStatus2(this);
                }
                return this.mtxtDeferredStatus;
            }
        }
        #endregion
        
        #region Fields
        private txtDeferredStatus2 mtxtDeferredStatus;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDeferredStatus2 : WinEdit
    {
        
        public txtDeferredStatus2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_VestedActives : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "84";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtVestedActives2 txtVestedActives
        {
            get
            {
                if ((this.mtxtVestedActives == null))
                {
                    this.mtxtVestedActives = new txtVestedActives2(this);
                }
                return this.mtxtVestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtVestedActives2 mtxtVestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtVestedActives2 : WinEdit
    {
        
        public txtVestedActives2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_NonVestedActives : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_NonVestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "86";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNonVestedActives2 txtNonVestedActives
        {
            get
            {
                if ((this.mtxtNonVestedActives == null))
                {
                    this.mtxtNonVestedActives = new txtNonVestedActives2(this);
                }
                return this.mtxtNonVestedActives;
            }
        }
        #endregion
        
        #region Fields
        private txtNonVestedActives2 mtxtNonVestedActives;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNonVestedActives2 : WinEdit
    {
        
        public txtNonVestedActives2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_Total : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "83";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotal3 txtTotal
        {
            get
            {
                if ((this.mtxtTotal == null))
                {
                    this.mtxtTotal = new txtTotal3(this);
                }
                return this.mtxtTotal;
            }
        }
        #endregion
        
        #region Fields
        private txtTotal3 mtxtTotal;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotal3 : WinEdit
    {
        
        public txtTotal3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_Administrative : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_Administrative(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "77";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAdministrative txtAdministrative
        {
            get
            {
                if ((this.mtxtAdministrative == null))
                {
                    this.mtxtAdministrative = new txtAdministrative(this);
                }
                return this.mtxtAdministrative;
            }
        }
        #endregion
        
        #region Fields
        private txtAdministrative mtxtAdministrative;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAdministrative : WinEdit
    {
        
        public txtAdministrative(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_Discounted : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_Discounted(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "79";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDiscounted txtDiscounted
        {
            get
            {
                if ((this.mtxtDiscounted == null))
                {
                    this.mtxtDiscounted = new txtDiscounted(this);
                }
                return this.mtxtDiscounted;
            }
        }
        #endregion
        
        #region Fields
        private txtDiscounted mtxtDiscounted;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDiscounted : WinEdit
    {
        
        public txtDiscounted(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_Expected : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_Expected(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "81";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpected txtExpected
        {
            get
            {
                if ((this.mtxtExpected == null))
                {
                    this.mtxtExpected = new txtExpected(this);
                }
                return this.mtxtExpected;
            }
        }
        #endregion
        
        #region Fields
        private txtExpected mtxtExpected;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpected : WinEdit
    {
        
        public txtExpected(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_DiscountedExpected : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_DiscountedExpected(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "78";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDiscountedExpected txtDiscountedExpected
        {
            get
            {
                if ((this.mtxtDiscountedExpected == null))
                {
                    this.mtxtDiscountedExpected = new txtDiscountedExpected(this);
                }
                return this.mtxtDiscountedExpected;
            }
        }
        #endregion
        
        #region Fields
        private txtDiscountedExpected mtxtDiscountedExpected;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDiscountedExpected : WinEdit
    {
        
        public txtDiscountedExpected(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_NormalCost : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_NormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "85";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNormalCost2 txtNormalCost
        {
            get
            {
                if ((this.mtxtNormalCost == null))
                {
                    this.mtxtNormalCost = new txtNormalCost2(this);
                }
                return this.mtxtNormalCost;
            }
        }
        #endregion
        
        #region Fields
        private txtNormalCost2 mtxtNormalCost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNormalCost2 : WinEdit
    {
        
        public txtNormalCost2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_TotalNormalCost : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_TotalNormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "80";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotalNormalCost txtTotalNormalCost
        {
            get
            {
                if ((this.mtxtTotalNormalCost == null))
                {
                    this.mtxtTotalNormalCost = new txtTotalNormalCost(this);
                }
                return this.mtxtTotalNormalCost;
            }
        }
        #endregion
        
        #region Fields
        private txtTotalNormalCost mtxtTotalNormalCost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotalNormalCost : WinEdit
    {
        
        public txtTotalNormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate : WinWindow
    {
        
        public wLiabilityMeasuresFTD_FundingTarget_EffectiveInterestRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "118";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtEffectiveInterestRate txtEffectiveInterestRate
        {
            get
            {
                if ((this.mtxtEffectiveInterestRate == null))
                {
                    this.mtxtEffectiveInterestRate = new txtEffectiveInterestRate(this);
                }
                return this.mtxtEffectiveInterestRate;
            }
        }
        #endregion
        
        #region Fields
        private txtEffectiveInterestRate mtxtEffectiveInterestRate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtEffectiveInterestRate : WinEdit
    {
        
        public txtEffectiveInterestRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresMDC_NotAtRiskLiability : WinWindow
    {
        
        public wLiabilityMeasuresMDC_NotAtRiskLiability(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "76";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNotAtRiskLiability txtNotAtRiskLiability
        {
            get
            {
                if ((this.mtxtNotAtRiskLiability == null))
                {
                    this.mtxtNotAtRiskLiability = new txtNotAtRiskLiability(this);
                }
                return this.mtxtNotAtRiskLiability;
            }
        }
        #endregion
        
        #region Fields
        private txtNotAtRiskLiability mtxtNotAtRiskLiability;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNotAtRiskLiability : WinEdit
    {
        
        public txtNotAtRiskLiability(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresMDC_ExpenseLoad : WinWindow
    {
        
        public wLiabilityMeasuresMDC_ExpenseLoad(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "72";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpenseLoad txtExpenseLoad
        {
            get
            {
                if ((this.mtxtExpenseLoad == null))
                {
                    this.mtxtExpenseLoad = new txtExpenseLoad(this);
                }
                return this.mtxtExpenseLoad;
            }
        }
        #endregion
        
        #region Fields
        private txtExpenseLoad mtxtExpenseLoad;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpenseLoad : WinEdit
    {
        
        public txtExpenseLoad(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresMDC_AtRiskLiabilityNoExpense : WinWindow
    {
        
        public wLiabilityMeasuresMDC_AtRiskLiabilityNoExpense(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "75";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskLiabilityNoExpense txtAtRiskLiabilityNoExpense
        {
            get
            {
                if ((this.mtxtAtRiskLiabilityNoExpense == null))
                {
                    this.mtxtAtRiskLiabilityNoExpense = new txtAtRiskLiabilityNoExpense(this);
                }
                return this.mtxtAtRiskLiabilityNoExpense;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskLiabilityNoExpense mtxtAtRiskLiabilityNoExpense;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskLiabilityNoExpense : WinEdit
    {
        
        public txtAtRiskLiabilityNoExpense(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresMDC_AtRiskLiabilityWithExpense : WinWindow
    {
        
        public wLiabilityMeasuresMDC_AtRiskLiabilityWithExpense(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "74";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAtRiskLiabilityWithExpense txtAtRiskLiabilityWithExpense
        {
            get
            {
                if ((this.mtxtAtRiskLiabilityWithExpense == null))
                {
                    this.mtxtAtRiskLiabilityWithExpense = new txtAtRiskLiabilityWithExpense(this);
                }
                return this.mtxtAtRiskLiabilityWithExpense;
            }
        }
        #endregion
        
        #region Fields
        private txtAtRiskLiabilityWithExpense mtxtAtRiskLiabilityWithExpense;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAtRiskLiabilityWithExpense : WinEdit
    {
        
        public txtAtRiskLiabilityWithExpense(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresMDC_FinalAtRisk : WinWindow
    {
        
        public wLiabilityMeasuresMDC_FinalAtRisk(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "73";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFinalAtRisk txtFinalAtRisk
        {
            get
            {
                if ((this.mtxtFinalAtRisk == null))
                {
                    this.mtxtFinalAtRisk = new txtFinalAtRisk(this);
                }
                return this.mtxtFinalAtRisk;
            }
        }
        #endregion
        
        #region Fields
        private txtFinalAtRisk mtxtFinalAtRisk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFinalAtRisk : WinEdit
    {
        
        public txtFinalAtRisk(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLiabilityMeasuresMDC_FundingTarget : WinWindow
    {
        
        public wLiabilityMeasuresMDC_FundingTarget(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "71";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtFundingTarget txtFundingTarget
        {
            get
            {
                if ((this.mtxtFundingTarget == null))
                {
                    this.mtxtFundingTarget = new txtFundingTarget(this);
                }
                return this.mtxtFundingTarget;
            }
        }
        #endregion
        
        #region Fields
        private txtFundingTarget mtxtFundingTarget;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtFundingTarget : WinEdit
    {
        
        public txtFundingTarget(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_BalanceAtBegining : WinWindow
    {
        
        public wCarryoverBalance_BalanceAtBegining(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "70";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBalanceAtBegining txtBalanceAtBegining
        {
            get
            {
                if ((this.mtxtBalanceAtBegining == null))
                {
                    this.mtxtBalanceAtBegining = new txtBalanceAtBegining(this);
                }
                return this.mtxtBalanceAtBegining;
            }
        }
        #endregion
        
        #region Fields
        private txtBalanceAtBegining mtxtBalanceAtBegining;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBalanceAtBegining : WinEdit
    {
        
        public txtBalanceAtBegining(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_PortionUsed : WinWindow
    {
        
        public wCarryoverBalance_PortionUsed(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "68";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPortionUsed txtPortionUsed
        {
            get
            {
                if ((this.mtxtPortionUsed == null))
                {
                    this.mtxtPortionUsed = new txtPortionUsed(this);
                }
                return this.mtxtPortionUsed;
            }
        }
        #endregion
        
        #region Fields
        private txtPortionUsed mtxtPortionUsed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPortionUsed : WinEdit
    {
        
        public txtPortionUsed(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_InterestUsing : WinWindow
    {
        
        public wCarryoverBalance_InterestUsing(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "69";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestUsing txtInterestUsing
        {
            get
            {
                if ((this.mtxtInterestUsing == null))
                {
                    this.mtxtInterestUsing = new txtInterestUsing(this);
                }
                return this.mtxtInterestUsing;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestUsing mtxtInterestUsing;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestUsing : WinEdit
    {
        
        public txtInterestUsing(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_BalanceAtBOY : WinWindow
    {
        
        public wCarryoverBalance_BalanceAtBOY(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "67";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBalanceAtBOY txtBalanceAtBOY
        {
            get
            {
                if ((this.mtxtBalanceAtBOY == null))
                {
                    this.mtxtBalanceAtBOY = new txtBalanceAtBOY(this);
                }
                return this.mtxtBalanceAtBOY;
            }
        }
        #endregion
        
        #region Fields
        private txtBalanceAtBOY mtxtBalanceAtBOY;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBalanceAtBOY : WinEdit
    {
        
        public txtBalanceAtBOY(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_VoluntaryReduction : WinWindow
    {
        
        public wCarryoverBalance_VoluntaryReduction(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "66";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtVoluntaryReduction txtVoluntaryReduction
        {
            get
            {
                if ((this.mtxtVoluntaryReduction == null))
                {
                    this.mtxtVoluntaryReduction = new txtVoluntaryReduction(this);
                }
                return this.mtxtVoluntaryReduction;
            }
        }
        #endregion
        
        #region Fields
        private txtVoluntaryReduction mtxtVoluntaryReduction;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtVoluntaryReduction : WinEdit
    {
        
        public txtVoluntaryReduction(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_DeemedWaivers : WinWindow
    {
        
        public wCarryoverBalance_DeemedWaivers(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "65";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDeemedWaivers txtDeemedWaivers
        {
            get
            {
                if ((this.mtxtDeemedWaivers == null))
                {
                    this.mtxtDeemedWaivers = new txtDeemedWaivers(this);
                }
                return this.mtxtDeemedWaivers;
            }
        }
        #endregion
        
        #region Fields
        private txtDeemedWaivers mtxtDeemedWaivers;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDeemedWaivers : WinEdit
    {
        
        public txtDeemedWaivers(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCarryoverBalance_BOYBalance : WinWindow
    {
        
        public wCarryoverBalance_BOYBalance(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "63";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBOYBalance txtBOYBalance
        {
            get
            {
                if ((this.mtxtBOYBalance == null))
                {
                    this.mtxtBOYBalance = new txtBOYBalance(this);
                }
                return this.mtxtBOYBalance;
            }
        }
        #endregion
        
        #region Fields
        private txtBOYBalance mtxtBOYBalance;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBOYBalance : WinEdit
    {
        
        public txtBOYBalance(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Liability_Actuarial : WinWindow
    {
        
        public wDevelopmentGL_Liability_Actuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "16";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtActuarial txtActuarial
        {
            get
            {
                if ((this.mtxtActuarial == null))
                {
                    this.mtxtActuarial = new txtActuarial(this);
                }
                return this.mtxtActuarial;
            }
        }
        #endregion
        
        #region Fields
        private txtActuarial mtxtActuarial;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtActuarial : WinEdit
    {
        
        public txtActuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Liability_NormalCost : WinWindow
    {
        
        public wDevelopmentGL_Liability_NormalCost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNormalCost3 txtNormalCost
        {
            get
            {
                if ((this.mtxtNormalCost == null))
                {
                    this.mtxtNormalCost = new txtNormalCost3(this);
                }
                return this.mtxtNormalCost;
            }
        }
        #endregion
        
        #region Fields
        private txtNormalCost3 mtxtNormalCost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNormalCost3 : WinEdit
    {
        
        public txtNormalCost3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Liability_Interest : WinWindow
    {
        
        public wDevelopmentGL_Liability_Interest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterest txtInterest
        {
            get
            {
                if ((this.mtxtInterest == null))
                {
                    this.mtxtInterest = new txtInterest(this);
                }
                return this.mtxtInterest;
            }
        }
        #endregion
        
        #region Fields
        private txtInterest mtxtInterest;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterest : WinEdit
    {
        
        public txtInterest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Benefits_BenefitPayments : WinWindow
    {
        
        public wDevelopmentGL_Benefits_BenefitPayments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "13";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBenefitPayments txtBenefitPayments
        {
            get
            {
                if ((this.mtxtBenefitPayments == null))
                {
                    this.mtxtBenefitPayments = new txtBenefitPayments(this);
                }
                return this.mtxtBenefitPayments;
            }
        }
        #endregion
        
        #region Fields
        private txtBenefitPayments mtxtBenefitPayments;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBenefitPayments : WinEdit
    {
        
        public txtBenefitPayments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Benefits_Administrative : WinWindow
    {
        
        public wDevelopmentGL_Benefits_Administrative(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAdministrative1 txtAdministrative
        {
            get
            {
                if ((this.mtxtAdministrative == null))
                {
                    this.mtxtAdministrative = new txtAdministrative1(this);
                }
                return this.mtxtAdministrative;
            }
        }
        #endregion
        
        #region Fields
        private txtAdministrative1 mtxtAdministrative;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAdministrative1 : WinEdit
    {
        
        public txtAdministrative1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Benefits_EmployeeContrib : WinWindow
    {
        
        public wDevelopmentGL_Benefits_EmployeeContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtEmployeeContrib txtEmployeeContrib
        {
            get
            {
                if ((this.mtxtEmployeeContrib == null))
                {
                    this.mtxtEmployeeContrib = new txtEmployeeContrib(this);
                }
                return this.mtxtEmployeeContrib;
            }
        }
        #endregion
        
        #region Fields
        private txtEmployeeContrib mtxtEmployeeContrib;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtEmployeeContrib : WinEdit
    {
        
        public txtEmployeeContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Benefits_Total : WinWindow
    {
        
        public wDevelopmentGL_Benefits_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotal4 txtTotal
        {
            get
            {
                if ((this.mtxtTotal == null))
                {
                    this.mtxtTotal = new txtTotal4(this);
                }
                return this.mtxtTotal;
            }
        }
        #endregion
        
        #region Fields
        private txtTotal4 mtxtTotal;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotal4 : WinEdit
    {
        
        public txtTotal4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Benefits_ExpectedActuarial : WinWindow
    {
        
        public wDevelopmentGL_Benefits_ExpectedActuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpectedActuarial txtExpectedActuarial
        {
            get
            {
                if ((this.mtxtExpectedActuarial == null))
                {
                    this.mtxtExpectedActuarial = new txtExpectedActuarial(this);
                }
                return this.mtxtExpectedActuarial;
            }
        }
        #endregion
        
        #region Fields
        private txtExpectedActuarial mtxtExpectedActuarial;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpectedActuarial : WinEdit
    {
        
        public txtExpectedActuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Benefits_LiabilityGL : WinWindow
    {
        
        public wDevelopmentGL_Benefits_LiabilityGL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtLiabilityGL txtLiabilityGL
        {
            get
            {
                if ((this.mtxtLiabilityGL == null))
                {
                    this.mtxtLiabilityGL = new txtLiabilityGL(this);
                }
                return this.mtxtLiabilityGL;
            }
        }
        #endregion
        
        #region Fields
        private txtLiabilityGL mtxtLiabilityGL;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtLiabilityGL : WinEdit
    {
        
        public txtLiabilityGL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_ActuarialAsset : WinWindow
    {
        
        public wDevelopmentGL_Asset_ActuarialAsset(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtActuarialAsset txtActuarialAsset
        {
            get
            {
                if ((this.mtxtActuarialAsset == null))
                {
                    this.mtxtActuarialAsset = new txtActuarialAsset(this);
                }
                return this.mtxtActuarialAsset;
            }
        }
        #endregion
        
        #region Fields
        private txtActuarialAsset mtxtActuarialAsset;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtActuarialAsset : WinEdit
    {
        
        public txtActuarialAsset(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_InterestOnActuarial : WinWindow
    {
        
        public wDevelopmentGL_Asset_InterestOnActuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestOnActuarial txtInterestOnActuarial
        {
            get
            {
                if ((this.mtxtInterestOnActuarial == null))
                {
                    this.mtxtInterestOnActuarial = new txtInterestOnActuarial(this);
                }
                return this.mtxtInterestOnActuarial;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestOnActuarial mtxtInterestOnActuarial;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestOnActuarial : WinEdit
    {
        
        public txtInterestOnActuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_ContributionsMade : WinWindow
    {
        
        public wDevelopmentGL_Asset_ContributionsMade(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtContributionsMade txtContributionsMade
        {
            get
            {
                if ((this.mtxtContributionsMade == null))
                {
                    this.mtxtContributionsMade = new txtContributionsMade(this);
                }
                return this.mtxtContributionsMade;
            }
        }
        #endregion
        
        #region Fields
        private txtContributionsMade mtxtContributionsMade;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtContributionsMade : WinEdit
    {
        
        public txtContributionsMade(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_InterestOnContrib : WinWindow
    {
        
        public wDevelopmentGL_Asset_InterestOnContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestOnContrib txtInterestOnContrib
        {
            get
            {
                if ((this.mtxtInterestOnContrib == null))
                {
                    this.mtxtInterestOnContrib = new txtInterestOnContrib(this);
                }
                return this.mtxtInterestOnContrib;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestOnContrib mtxtInterestOnContrib;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestOnContrib : WinEdit
    {
        
        public txtInterestOnContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_ExpectedActuarial : WinWindow
    {
        
        public wDevelopmentGL_Asset_ExpectedActuarial(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtExpectedActuarial1 txtExpectedActuarial
        {
            get
            {
                if ((this.mtxtExpectedActuarial == null))
                {
                    this.mtxtExpectedActuarial = new txtExpectedActuarial1(this);
                }
                return this.mtxtExpectedActuarial;
            }
        }
        #endregion
        
        #region Fields
        private txtExpectedActuarial1 mtxtExpectedActuarial;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtExpectedActuarial1 : WinEdit
    {
        
        public txtExpectedActuarial1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_ActuarialAssetGL : WinWindow
    {
        
        public wDevelopmentGL_Asset_ActuarialAssetGL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtActuarialAssetGL txtActuarialAssetGL
        {
            get
            {
                if ((this.mtxtActuarialAssetGL == null))
                {
                    this.mtxtActuarialAssetGL = new txtActuarialAssetGL(this);
                }
                return this.mtxtActuarialAssetGL;
            }
        }
        #endregion
        
        #region Fields
        private txtActuarialAssetGL mtxtActuarialAssetGL;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtActuarialAssetGL : WinEdit
    {
        
        public txtActuarialAssetGL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDevelopmentGL_Asset_ActuarialGL : WinWindow
    {
        
        public wDevelopmentGL_Asset_ActuarialGL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtActuarialGL txtActuarialGL
        {
            get
            {
                if ((this.mtxtActuarialGL == null))
                {
                    this.mtxtActuarialGL = new txtActuarialGL(this);
                }
                return this.mtxtActuarialGL;
            }
        }
        #endregion
        
        #region Fields
        private txtActuarialGL mtxtActuarialGL;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtActuarialGL : WinEdit
    {
        
        public txtActuarialGL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_NoExpenseLoad_RetiredAndBeneficiaries : WinWindow
    {
        
        public wAR_NoExpenseLoad_RetiredAndBeneficiaries(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "105";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit : WinEdit
    {
        
        public Edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_NoExpense_TermVested : WinWindow
    {
        
        public wAR_NoExpense_TermVested(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "100";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit1 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit1(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit1 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit1 : WinEdit
    {
        
        public Edit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_NoExpense_VestedActives : WinWindow
    {
        
        public wAR_NoExpense_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "102";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit2 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit2(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit2 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit2 : WinEdit
    {
        
        public Edit2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_NoExpense_NonVestedActives : WinWindow
    {
        
        public wAR_NoExpense_NonVestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "104";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit3 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit3(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit3 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit3 : WinEdit
    {
        
        public Edit3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_NoExpense_Total : WinWindow
    {
        
        public wAR_NoExpense_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "101";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit4 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit4(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit4 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit4 : WinEdit
    {
        
        public Edit4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_NoExpense_FundingNC : WinWindow
    {
        
        public wAR_NoExpense_FundingNC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "103";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit5 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit5(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit5 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit5 : WinEdit
    {
        
        public Edit5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_Applicable_RetiredAndBeneficiries : WinWindow
    {
        
        public wAR_Applicable_RetiredAndBeneficiries(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "99";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit6 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit6(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit6 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit6 : WinEdit
    {
        
        public Edit6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_Applicable_TermVested : WinWindow
    {
        
        public wAR_Applicable_TermVested(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "94";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit7 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit7(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit7 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit7 : WinEdit
    {
        
        public Edit7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_Applicable_VestedActives : WinWindow
    {
        
        public wAR_Applicable_VestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "96";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit8 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit8(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit8 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit8 : WinEdit
    {
        
        public Edit8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_Applicable_NonVestedActives : WinWindow
    {
        
        public wAR_Applicable_NonVestedActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "98";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit9 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit9(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit9 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit9 : WinEdit
    {
        
        public Edit9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_Applicable_Total : WinWindow
    {
        
        public wAR_Applicable_Total(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "95";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit10 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit10(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit10 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit10 : WinEdit
    {
        
        public Edit10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAR_Applicable_FundingNC : WinWindow
    {
        
        public wAR_Applicable_FundingNC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "97";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit11 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit11(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit11 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit11 : WinEdit
    {
        
        public Edit11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFully_PriorYear2008FTAP : WinWindow
    {
        
        public wFully_PriorYear2008FTAP(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPriorYear2008FTAP_Exempt";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFully_PriorYear2009FTAP : WinWindow
    {
        
        public wFully_PriorYear2009FTAP(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPriorYear2009FTAP_Exempt";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFully_PriorYear2010FTAP : WinWindow
    {
        
        public wFully_PriorYear2010FTAP(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPriorYear2010FTAP_Exempt";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAccelerated_Allowed : WinWindow
    {
        
        public wAccelerated_Allowed(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAcceleratedDistributionsAllowed";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = " [>= 92% retains phase-in eligibility]";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAddtitionalFunding_DoRestrictions : WinWindow
    {
        
        public wAddtitionalFunding_DoRestrictions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboDoRestrictionsApplyThisYear";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Prior year (2010) FTAP_Exempt";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCD_FirstQuarterly : WinWindow
    {
        
        public wCD_FirstQuarterly(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtFirstQuarterlyContributionDueDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo4 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo4(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo4 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo4 : WinComboBox
    {
        
        public cbo4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDtFirstQuarterlyContEdit
        {
            get
            {
                if ((this.mUIDtFirstQuarterlyContEdit == null))
                {
                    this.mUIDtFirstQuarterlyContEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDtFirstQuarterlyContEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIDtFirstQuarterlyContEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIDtFirstQuarterlyContEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDtFirstQuarterlyContEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCD_SecondQuarterly : WinWindow
    {
        
        public wCD_SecondQuarterly(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtSecondQuarterlyContributionDueDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo5 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo5(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo5 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo5 : WinComboBox
    {
        
        public cbo5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDtSecondQuarterlyConEdit
        {
            get
            {
                if ((this.mUIDtSecondQuarterlyConEdit == null))
                {
                    this.mUIDtSecondQuarterlyConEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDtSecondQuarterlyConEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIDtSecondQuarterlyConEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIDtSecondQuarterlyConEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDtSecondQuarterlyConEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCD_ThirdQuarterly : WinWindow
    {
        
        public wCD_ThirdQuarterly(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtThirdQuarterlyContributionDueDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo6 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo6(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo6 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo6 : WinComboBox
    {
        
        public cbo6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDtThirdQuarterlyContEdit
        {
            get
            {
                if ((this.mUIDtThirdQuarterlyContEdit == null))
                {
                    this.mUIDtThirdQuarterlyContEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDtThirdQuarterlyContEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIDtThirdQuarterlyContEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIDtThirdQuarterlyContEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDtThirdQuarterlyContEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCD_FourthQuarterly : WinWindow
    {
        
        public wCD_FourthQuarterly(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtFourthQuarterlyContributionDueDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo7 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo7(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo7 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo7 : WinComboBox
    {
        
        public cbo7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDtFourthQuarterlyConEdit
        {
            get
            {
                if ((this.mUIDtFourthQuarterlyConEdit == null))
                {
                    this.mUIDtFourthQuarterlyConEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDtFourthQuarterlyConEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIDtFourthQuarterlyConEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIDtFourthQuarterlyConEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDtFourthQuarterlyConEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCD_FinalContribution : WinWindow
    {
        
        public wCD_FinalContribution(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtFinalContributionPaymentDueDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo8 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo8(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo8 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo8 : WinComboBox
    {
        
        public cbo8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDtFinalContributionPEdit
        {
            get
            {
                if ((this.mUIDtFinalContributionPEdit == null))
                {
                    this.mUIDtFinalContributionPEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDtFinalContributionPEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIDtFinalContributionPEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIDtFinalContributionPEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDtFinalContributionPEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_BalanceAtBegin : WinWindow
    {
        
        public wPrefundingBalance_BalanceAtBegin(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "64";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBalanceAtBegin txtBalanceAtBegin
        {
            get
            {
                if ((this.mtxtBalanceAtBegin == null))
                {
                    this.mtxtBalanceAtBegin = new txtBalanceAtBegin(this);
                }
                return this.mtxtBalanceAtBegin;
            }
        }
        #endregion
        
        #region Fields
        private txtBalanceAtBegin mtxtBalanceAtBegin;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBalanceAtBegin : WinEdit
    {
        
        public txtBalanceAtBegin(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_PortionUsed : WinWindow
    {
        
        public wPrefundingBalance_PortionUsed(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "62";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPortionUsed1 txtPortionUsed
        {
            get
            {
                if ((this.mtxtPortionUsed == null))
                {
                    this.mtxtPortionUsed = new txtPortionUsed1(this);
                }
                return this.mtxtPortionUsed;
            }
        }
        #endregion
        
        #region Fields
        private txtPortionUsed1 mtxtPortionUsed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPortionUsed1 : WinEdit
    {
        
        public txtPortionUsed1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_InterestUsingPriorYrsActual : WinWindow
    {
        
        public wPrefundingBalance_InterestUsingPriorYrsActual(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "61";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestUsingPriorYrsActual txtInterestUsingPriorYrsActual
        {
            get
            {
                if ((this.mtxtInterestUsingPriorYrsActual == null))
                {
                    this.mtxtInterestUsingPriorYrsActual = new txtInterestUsingPriorYrsActual(this);
                }
                return this.mtxtInterestUsingPriorYrsActual;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestUsingPriorYrsActual mtxtInterestUsingPriorYrsActual;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestUsingPriorYrsActual : WinEdit
    {
        
        public txtInterestUsingPriorYrsActual(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_AmountRemaining : WinWindow
    {
        
        public wPrefundingBalance_AmountRemaining(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "60";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtAmountRemaining txtAmountRemaining
        {
            get
            {
                if ((this.mtxtAmountRemaining == null))
                {
                    this.mtxtAmountRemaining = new txtAmountRemaining(this);
                }
                return this.mtxtAmountRemaining;
            }
        }
        #endregion
        
        #region Fields
        private txtAmountRemaining mtxtAmountRemaining;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtAmountRemaining : WinEdit
    {
        
        public txtAmountRemaining(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_PriorYrsExcessContrib : WinWindow
    {
        
        public wPrefundingBalance_PriorYrsExcessContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "58";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPriorYrsExcessContrib txtPriorYrsExcessContrib
        {
            get
            {
                if ((this.mtxtPriorYrsExcessContrib == null))
                {
                    this.mtxtPriorYrsExcessContrib = new txtPriorYrsExcessContrib(this);
                }
                return this.mtxtPriorYrsExcessContrib;
            }
        }
        #endregion
        
        #region Fields
        private txtPriorYrsExcessContrib mtxtPriorYrsExcessContrib;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPriorYrsExcessContrib : WinEdit
    {
        
        public txtPriorYrsExcessContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_InterestOnAmount : WinWindow
    {
        
        public wPrefundingBalance_InterestOnAmount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "51";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestOnAmount txtInterestOnAmount
        {
            get
            {
                if ((this.mtxtInterestOnAmount == null))
                {
                    this.mtxtInterestOnAmount = new txtInterestOnAmount(this);
                }
                return this.mtxtInterestOnAmount;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestOnAmount mtxtInterestOnAmount;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestOnAmount : WinEdit
    {
        
        public txtInterestOnAmount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_InterestUsingPriorYrsEffective : WinWindow
    {
        
        public wPrefundingBalance_InterestUsingPriorYrsEffective(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "59";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestUsingPriorYrsEffective txtInterestUsingPriorYrsEffective
        {
            get
            {
                if ((this.mtxtInterestUsingPriorYrsEffective == null))
                {
                    this.mtxtInterestUsingPriorYrsEffective = new txtInterestUsingPriorYrsEffective(this);
                }
                return this.mtxtInterestUsingPriorYrsEffective;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestUsingPriorYrsEffective mtxtInterestUsingPriorYrsEffective;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestUsingPriorYrsEffective : WinEdit
    {
        
        public txtInterestUsingPriorYrsEffective(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_TotalAvailable : WinWindow
    {
        
        public wPrefundingBalance_TotalAvailable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "57";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTotalAvailable txtTotalAvailable
        {
            get
            {
                if ((this.mtxtTotalAvailable == null))
                {
                    this.mtxtTotalAvailable = new txtTotalAvailable(this);
                }
                return this.mtxtTotalAvailable;
            }
        }
        #endregion
        
        #region Fields
        private txtTotalAvailable mtxtTotalAvailable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTotalAvailable : WinEdit
    {
        
        public txtTotalAvailable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_PortionToBeAdded : WinWindow
    {
        
        public wPrefundingBalance_PortionToBeAdded(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "56";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPortionToBeAdded txtPortionToBeAdded
        {
            get
            {
                if ((this.mtxtPortionToBeAdded == null))
                {
                    this.mtxtPortionToBeAdded = new txtPortionToBeAdded(this);
                }
                return this.mtxtPortionToBeAdded;
            }
        }
        #endregion
        
        #region Fields
        private txtPortionToBeAdded mtxtPortionToBeAdded;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPortionToBeAdded : WinEdit
    {
        
        public txtPortionToBeAdded(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_BalanceAtBOY : WinWindow
    {
        
        public wPrefundingBalance_BalanceAtBOY(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "55";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBalanceAtBOY1 txtBalanceAtBOY
        {
            get
            {
                if ((this.mtxtBalanceAtBOY == null))
                {
                    this.mtxtBalanceAtBOY = new txtBalanceAtBOY1(this);
                }
                return this.mtxtBalanceAtBOY;
            }
        }
        #endregion
        
        #region Fields
        private txtBalanceAtBOY1 mtxtBalanceAtBOY;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBalanceAtBOY1 : WinEdit
    {
        
        public txtBalanceAtBOY1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_VoluntaryReduction : WinWindow
    {
        
        public wPrefundingBalance_VoluntaryReduction(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "53";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtVoluntaryReduction1 txtVoluntaryReduction
        {
            get
            {
                if ((this.mtxtVoluntaryReduction == null))
                {
                    this.mtxtVoluntaryReduction = new txtVoluntaryReduction1(this);
                }
                return this.mtxtVoluntaryReduction;
            }
        }
        #endregion
        
        #region Fields
        private txtVoluntaryReduction1 mtxtVoluntaryReduction;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtVoluntaryReduction1 : WinEdit
    {
        
        public txtVoluntaryReduction1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_DeemedWaivers : WinWindow
    {
        
        public wPrefundingBalance_DeemedWaivers(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "54";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDeemedWaivers1 txtDeemedWaivers
        {
            get
            {
                if ((this.mtxtDeemedWaivers == null))
                {
                    this.mtxtDeemedWaivers = new txtDeemedWaivers1(this);
                }
                return this.mtxtDeemedWaivers;
            }
        }
        #endregion
        
        #region Fields
        private txtDeemedWaivers1 mtxtDeemedWaivers;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDeemedWaivers1 : WinEdit
    {
        
        public txtDeemedWaivers1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrefundingBalance_BOYBalance : WinWindow
    {
        
        public wPrefundingBalance_BOYBalance(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "52";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBOYBalance1 txtBOYBalance
        {
            get
            {
                if ((this.mtxtBOYBalance == null))
                {
                    this.mtxtBOYBalance = new txtBOYBalance1(this);
                }
                return this.mtxtBOYBalance;
            }
        }
        #endregion
        
        #region Fields
        private txtBOYBalance1 mtxtBOYBalance;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBOYBalance1 : WinEdit
    {
        
        public txtBOYBalance1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
}
