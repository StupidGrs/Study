// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.EligibilitiesClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Eligibilities
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wFormula wFormula
        {
            get
            {
                if ((this.mwFormula == null))
                {
                    this.mwFormula = new wFormula(this);
                }
                return this.mwFormula;
            }
        }
        
        public wValidate wValidate
        {
            get
            {
                if ((this.mwValidate == null))
                {
                    this.mwValidate = new wValidate(this);
                }
                return this.mwValidate;
            }
        }
        
        public wFreezeAtValuationAge wFreezeAtValuationAge
        {
            get
            {
                if ((this.mwFreezeAtValuationAge == null))
                {
                    this.mwFreezeAtValuationAge = new wFreezeAtValuationAge(this);
                }
                return this.mwFreezeAtValuationAge;
            }
        }
        #endregion
        
        #region Fields
        private wFormula mwFormula;
        
        private wValidate mwValidate;
        
        private wFreezeAtValuationAge mwFreezeAtValuationAge;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFormula : WinWindow
    {
        
        public wFormula(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_acTextBox";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtFormula
        {
            get
            {
                if ((this.mtxtFormula == null))
                {
                    this.mtxtFormula = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtFormula.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtFormula;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtFormula;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValidate : WinWindow
    {
        
        public wValidate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnValidate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnValidate
        {
            get
            {
                if ((this.mbtnValidate == null))
                {
                    this.mbtnValidate = new WinButton(this);
                    #region Search Criteria
                    this.mbtnValidate.SearchProperties[WinButton.PropertyNames.Name] = "Validate";
                    this.mbtnValidate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnValidate;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnValidate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFreezeAtValuationAge : WinWindow
    {
        
        public wFreezeAtValuationAge(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkFreezeAge";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Freeze at valuation age for maximum value without grow-in";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
}
