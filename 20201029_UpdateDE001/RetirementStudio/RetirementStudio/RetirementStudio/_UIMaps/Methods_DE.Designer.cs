// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.Methods_DEClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Methods_DE
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wSameMethodForAllVOs_Trade wSameMethodForAllVOs_Trade
        {
            get
            {
                if ((this.mwSameMethodForAllVOs_Trade == null))
                {
                    this.mwSameMethodForAllVOs_Trade = new wSameMethodForAllVOs_Trade(this);
                }
                return this.mwSameMethodForAllVOs_Trade;
            }
        }
        
        public wTradeLiability_FPGrid wTradeLiability_FPGrid
        {
            get
            {
                if ((this.mwTradeLiability_FPGrid == null))
                {
                    this.mwTradeLiability_FPGrid = new wTradeLiability_FPGrid(this);
                }
                return this.mwTradeLiability_FPGrid;
            }
        }
        
        public wCommon_cbo wCommon_cbo
        {
            get
            {
                if ((this.mwCommon_cbo == null))
                {
                    this.mwCommon_cbo = new wCommon_cbo(this);
                }
                return this.mwCommon_cbo;
            }
        }
        
        public wInternationalAccounting_FPGrid wInternationalAccounting_FPGrid
        {
            get
            {
                if ((this.mwInternationalAccounting_FPGrid == null))
                {
                    this.mwInternationalAccounting_FPGrid = new wInternationalAccounting_FPGrid(this);
                }
                return this.mwInternationalAccounting_FPGrid;
            }
        }
        
        public wUseDeprecatedCOLAMethod wUseDeprecatedCOLAMethod
        {
            get
            {
                if ((this.mwUseDeprecatedCOLAMethod == null))
                {
                    this.mwUseDeprecatedCOLAMethod = new wUseDeprecatedCOLAMethod(this);
                }
                return this.mwUseDeprecatedCOLAMethod;
            }
        }
        
        public wCheckDeferredVested wCheckDeferredVested
        {
            get
            {
                if ((this.mwCheckDeferredVested == null))
                {
                    this.mwCheckDeferredVested = new wCheckDeferredVested(this);
                }
                return this.mwCheckDeferredVested;
            }
        }
        
        public wTradeLiability_SameMethods wTradeLiability_SameMethods
        {
            get
            {
                if ((this.mwTradeLiability_SameMethods == null))
                {
                    this.mwTradeLiability_SameMethods = new wTradeLiability_SameMethods(this);
                }
                return this.mwTradeLiability_SameMethods;
            }
        }
        
        public wIntermationalAccounting_SameMethods wIntermationalAccounting_SameMethods
        {
            get
            {
                if ((this.mwIntermationalAccounting_SameMethods == null))
                {
                    this.mwIntermationalAccounting_SameMethods = new wIntermationalAccounting_SameMethods(this);
                }
                return this.mwIntermationalAccounting_SameMethods;
            }
        }
        
        public wBenefitToExclude_btn wBenefitToExclude_btn
        {
            get
            {
                if ((this.mwBenefitToExclude_btn == null))
                {
                    this.mwBenefitToExclude_btn = new wBenefitToExclude_btn(this);
                }
                return this.mwBenefitToExclude_btn;
            }
        }
        
        public wBenefitToExclude_grid wBenefitToExclude_grid
        {
            get
            {
                if ((this.mwBenefitToExclude_grid == null))
                {
                    this.mwBenefitToExclude_grid = new wBenefitToExclude_grid(this);
                }
                return this.mwBenefitToExclude_grid;
            }
        }
        
        public wBenefitToExcludeItem wBenefitToExcludeItem
        {
            get
            {
                if ((this.mwBenefitToExcludeItem == null))
                {
                    this.mwBenefitToExcludeItem = new wBenefitToExcludeItem(this);
                }
                return this.mwBenefitToExcludeItem;
            }
        }
        
        public wMethodOverrides wMethodOverrides
        {
            get
            {
                if ((this.mwMethodOverrides == null))
                {
                    this.mwMethodOverrides = new wMethodOverrides(this);
                }
                return this.mwMethodOverrides;
            }
        }
        
        public wMethodOverrides_b wMethodOverrides_b
        {
            get
            {
                if ((this.mwMethodOverrides_b == null))
                {
                    this.mwMethodOverrides_b = new wMethodOverrides_b(this);
                }
                return this.mwMethodOverrides_b;
            }
        }
        
        public wBeneficiaryMethod wBeneficiaryMethod
        {
            get
            {
                if ((this.mwBeneficiaryMethod == null))
                {
                    this.mwBeneficiaryMethod = new wBeneficiaryMethod(this);
                }
                return this.mwBeneficiaryMethod;
            }
        }
        
        public wAdditional_grid wAdditional_grid
        {
            get
            {
                if ((this.mwAdditional_grid == null))
                {
                    this.mwAdditional_grid = new wAdditional_grid(this);
                }
                return this.mwAdditional_grid;
            }
        }
        
        public wItem wItem
        {
            get
            {
                if ((this.mwItem == null))
                {
                    this.mwItem = new wItem(this);
                }
                return this.mwItem;
            }
        }
        
        public wButton_V wButton_V
        {
            get
            {
                if ((this.mwButton_V == null))
                {
                    this.mwButton_V = new wButton_V(this);
                }
                return this.mwButton_V;
            }
        }
        
        public wButton_C wButton_C
        {
            get
            {
                if ((this.mwButton_C == null))
                {
                    this.mwButton_C = new wButton_C(this);
                }
                return this.mwButton_C;
            }
        }
        
        public wItem_txt wItem_txt
        {
            get
            {
                if ((this.mwItem_txt == null))
                {
                    this.mwItem_txt = new wItem_txt(this);
                }
                return this.mwItem_txt;
            }
        }
        
        public wSameBeneficiaryMthodforAllVOs wSameBeneficiaryMthodforAllVOs
        {
            get
            {
                if ((this.mwSameBeneficiaryMthodforAllVOs == null))
                {
                    this.mwSameBeneficiaryMthodforAllVOs = new wSameBeneficiaryMthodforAllVOs(this);
                }
                return this.mwSameBeneficiaryMthodforAllVOs;
            }
        }
        
        public wBenefitToExclude_DeleteRow wBenefitToExclude_DeleteRow
        {
            get
            {
                if ((this.mwBenefitToExclude_DeleteRow == null))
                {
                    this.mwBenefitToExclude_DeleteRow = new wBenefitToExclude_DeleteRow(this);
                }
                return this.mwBenefitToExclude_DeleteRow;
            }
        }
        
        public MethodOverrides_DeleteRow MethodOverrides_DeleteRow
        {
            get
            {
                if ((this.mMethodOverrides_DeleteRow == null))
                {
                    this.mMethodOverrides_DeleteRow = new MethodOverrides_DeleteRow(this);
                }
                return this.mMethodOverrides_DeleteRow;
            }
        }
        #endregion
        
        #region Fields
        private wSameMethodForAllVOs_Trade mwSameMethodForAllVOs_Trade;
        
        private wTradeLiability_FPGrid mwTradeLiability_FPGrid;
        
        private wCommon_cbo mwCommon_cbo;
        
        private wInternationalAccounting_FPGrid mwInternationalAccounting_FPGrid;
        
        private wUseDeprecatedCOLAMethod mwUseDeprecatedCOLAMethod;
        
        private wCheckDeferredVested mwCheckDeferredVested;
        
        private wTradeLiability_SameMethods mwTradeLiability_SameMethods;
        
        private wIntermationalAccounting_SameMethods mwIntermationalAccounting_SameMethods;
        
        private wBenefitToExclude_btn mwBenefitToExclude_btn;
        
        private wBenefitToExclude_grid mwBenefitToExclude_grid;
        
        private wBenefitToExcludeItem mwBenefitToExcludeItem;
        
        private wMethodOverrides mwMethodOverrides;
        
        private wMethodOverrides_b mwMethodOverrides_b;
        
        private wBeneficiaryMethod mwBeneficiaryMethod;
        
        private wAdditional_grid mwAdditional_grid;
        
        private wItem mwItem;
        
        private wButton_V mwButton_V;
        
        private wButton_C mwButton_C;
        
        private wItem_txt mwItem_txt;
        
        private wSameBeneficiaryMthodforAllVOs mwSameBeneficiaryMthodforAllVOs;
        
        private wBenefitToExclude_DeleteRow mwBenefitToExclude_DeleteRow;
        
        private MethodOverrides_DeleteRow mMethodOverrides_DeleteRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameMethodForAllVOs_Trade : WinWindow
    {
        
        public wSameMethodForAllVOs_Trade(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSameMethodForVOTradeLiability";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Same method for all VOs";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTradeLiability_FPGrid : WinWindow
    {
        
        public wTradeLiability_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprTradeLiability";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo : WinWindow
    {
        
        public wCommon_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInternationalAccounting_FPGrid : WinWindow
    {
        
        public wInternationalAccounting_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprInternationalAccounting";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wUseDeprecatedCOLAMethod : WinWindow
    {
        
        public wUseDeprecatedCOLAMethod(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkUseDepecratedCOLA";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Use deprecated COLA-Method";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCheckDeferredVested : WinWindow
    {
        
        public wCheckDeferredVested(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkDeferredVested";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Check deferred vested";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTradeLiability_SameMethods : WinWindow
    {
        
        public wTradeLiability_SameMethods(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSameMethodForVOTradeLiability";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Same method for all VOs";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIntermationalAccounting_SameMethods : WinWindow
    {
        
        public wIntermationalAccounting_SameMethods(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSameMethodForVOInternationalAcc";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Same method for all VOs";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitToExclude_btn : WinWindow
    {
        
        public wBenefitToExclude_btn(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAddExcludeBenRow";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Add Row";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitToExclude_grid : WinWindow
    {
        
        public wBenefitToExclude_grid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprBenefitsToExclude";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Exclude these benefit definitions from liabilities";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitToExcludeItem : WinWindow
    {
        
        public wBenefitToExcludeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMethodOverrides : WinWindow
    {
        
        public wMethodOverrides(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprBenefitDefinition";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMethodOverrides_b : WinWindow
    {
        
        public wMethodOverrides_b(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAddRowBenefitDefinition";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Add Row";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBeneficiaryMethod : WinWindow
    {
        
        public wBeneficiaryMethod(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprBeneficiaryMethod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdditional_grid : WinWindow
    {
        
        public wAdditional_grid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprAdditionalValuesOutput";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Conversion Parameters";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wItem : WinWindow
    {
        
        public wItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo1 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo1(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo1 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo1 : WinComboBox
    {
        
        public cbo1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wButton_V : WinWindow
    {
        
        public wButton_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wButton_C : WinWindow
    {
        
        public wButton_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wItem_txt : WinWindow
    {
        
        public wItem_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameBeneficiaryMthodforAllVOs : WinWindow
    {
        
        public wSameBeneficiaryMthodforAllVOs(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSameMethodForVOBeneficiaryMethod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Same beneficiary method for all VOs";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitToExclude_DeleteRow : WinWindow
    {
        
        public wBenefitToExclude_DeleteRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDeleteExcludeBenRow";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Delete Row";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class MethodOverrides_DeleteRow : WinWindow
    {
        
        public MethodOverrides_DeleteRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDeleteRowBenefitDefinition";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Delete Row";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
}
