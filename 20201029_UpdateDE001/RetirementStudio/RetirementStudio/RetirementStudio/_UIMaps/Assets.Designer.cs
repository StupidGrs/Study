// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.AssetsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Assets
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        
        public wEmployerContribution wEmployerContribution
        {
            get
            {
                if ((this.mwEmployerContribution == null))
                {
                    this.mwEmployerContribution = new wEmployerContribution();
                }
                return this.mwEmployerContribution;
            }
        }
        
        public wAssetSnapshotProperties wAssetSnapshotProperties
        {
            get
            {
                if ((this.mwAssetSnapshotProperties == null))
                {
                    this.mwAssetSnapshotProperties = new wAssetSnapshotProperties();
                }
                return this.mwAssetSnapshotProperties;
            }
        }
        
        public wBenefitPayments wBenefitPayments
        {
            get
            {
                if ((this.mwBenefitPayments == null))
                {
                    this.mwBenefitPayments = new wBenefitPayments();
                }
                return this.mwBenefitPayments;
            }
        }
        
        public wSummaryOfMarketValue wSummaryOfMarketValue
        {
            get
            {
                if ((this.mwSummaryOfMarketValue == null))
                {
                    this.mwSummaryOfMarketValue = new wSummaryOfMarketValue();
                }
                return this.mwSummaryOfMarketValue;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        
        private wEmployerContribution mwEmployerContribution;
        
        private wAssetSnapshotProperties mwAssetSnapshotProperties;
        
        private wBenefitPayments mwBenefitPayments;
        
        private wSummaryOfMarketValue mwSummaryOfMarketValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public tvNaviTree tvNaviTree
        {
            get
            {
                if ((this.mtvNaviTree == null))
                {
                    this.mtvNaviTree = new tvNaviTree(this);
                }
                return this.mtvNaviTree;
            }
        }
        
        public wGI_TrustPeriodStartDate wGI_TrustPeriodStartDate
        {
            get
            {
                if ((this.mwGI_TrustPeriodStartDate == null))
                {
                    this.mwGI_TrustPeriodStartDate = new wGI_TrustPeriodStartDate(this);
                }
                return this.mwGI_TrustPeriodStartDate;
            }
        }
        
        public wGI_TrustPeriodEndDate wGI_TrustPeriodEndDate
        {
            get
            {
                if ((this.mwGI_TrustPeriodEndDate == null))
                {
                    this.mwGI_TrustPeriodEndDate = new wGI_TrustPeriodEndDate(this);
                }
                return this.mwGI_TrustPeriodEndDate;
            }
        }
        
        public wGI_Piror2YearsOfNHCE wGI_Piror2YearsOfNHCE
        {
            get
            {
                if ((this.mwGI_Piror2YearsOfNHCE == null))
                {
                    this.mwGI_Piror2YearsOfNHCE = new wGI_Piror2YearsOfNHCE(this);
                }
                return this.mwGI_Piror2YearsOfNHCE;
            }
        }
        
        public wGI_Restated wGI_Restated
        {
            get
            {
                if ((this.mwGI_Restated == null))
                {
                    this.mwGI_Restated = new wGI_Restated(this);
                }
                return this.mwGI_Restated;
            }
        }
        
        public wGI_NotRestated wGI_NotRestated
        {
            get
            {
                if ((this.mwGI_NotRestated == null))
                {
                    this.mwGI_NotRestated = new wGI_NotRestated(this);
                }
                return this.mwGI_NotRestated;
            }
        }
        
        public wGI_Audited wGI_Audited
        {
            get
            {
                if ((this.mwGI_Audited == null))
                {
                    this.mwGI_Audited = new wGI_Audited(this);
                }
                return this.mwGI_Audited;
            }
        }
        
        public wGI_Unaudited wGI_Unaudited
        {
            get
            {
                if ((this.mwGI_Unaudited == null))
                {
                    this.mwGI_Unaudited = new wGI_Unaudited(this);
                }
                return this.mwGI_Unaudited;
            }
        }
        
        public wSMV_TimePeriodEndDate_FPGrid wSMV_TimePeriodEndDate_FPGrid
        {
            get
            {
                if ((this.mwSMV_TimePeriodEndDate_FPGrid == null))
                {
                    this.mwSMV_TimePeriodEndDate_FPGrid = new wSMV_TimePeriodEndDate_FPGrid(this);
                }
                return this.mwSMV_TimePeriodEndDate_FPGrid;
            }
        }
        
        public wRMV_MVPeriodBegin wRMV_MVPeriodBegin
        {
            get
            {
                if ((this.mwRMV_MVPeriodBegin == null))
                {
                    this.mwRMV_MVPeriodBegin = new wRMV_MVPeriodBegin(this);
                }
                return this.mwRMV_MVPeriodBegin;
            }
        }
        
        public wRMV_Contributions_Employer_Itemize wRMV_Contributions_Employer_Itemize
        {
            get
            {
                if ((this.mwRMV_Contributions_Employer_Itemize == null))
                {
                    this.mwRMV_Contributions_Employer_Itemize = new wRMV_Contributions_Employer_Itemize(this);
                }
                return this.mwRMV_Contributions_Employer_Itemize;
            }
        }
        
        public wRMV_InvestEarnings_Interest wRMV_InvestEarnings_Interest
        {
            get
            {
                if ((this.mwRMV_InvestEarnings_Interest == null))
                {
                    this.mwRMV_InvestEarnings_Interest = new wRMV_InvestEarnings_Interest(this);
                }
                return this.mwRMV_InvestEarnings_Interest;
            }
        }
        
        public wRMV_InvestEarnings_Dividends wRMV_InvestEarnings_Dividends
        {
            get
            {
                if ((this.mwRMV_InvestEarnings_Dividends == null))
                {
                    this.mwRMV_InvestEarnings_Dividends = new wRMV_InvestEarnings_Dividends(this);
                }
                return this.mwRMV_InvestEarnings_Dividends;
            }
        }
        
        public wSMV_AssetCategory wSMV_AssetCategory
        {
            get
            {
                if ((this.mwSMV_AssetCategory == null))
                {
                    this.mwSMV_AssetCategory = new wSMV_AssetCategory(this);
                }
                return this.mwSMV_AssetCategory;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public wRMV_InvestEarnings_Unrealized wRMV_InvestEarnings_Unrealized
        {
            get
            {
                if ((this.mwRMV_InvestEarnings_Unrealized == null))
                {
                    this.mwRMV_InvestEarnings_Unrealized = new wRMV_InvestEarnings_Unrealized(this);
                }
                return this.mwRMV_InvestEarnings_Unrealized;
            }
        }
        
        public wRMV_Disburse_BenefitPayments wRMV_Disburse_BenefitPayments
        {
            get
            {
                if ((this.mwRMV_Disburse_BenefitPayments == null))
                {
                    this.mwRMV_Disburse_BenefitPayments = new wRMV_Disburse_BenefitPayments(this);
                }
                return this.mwRMV_Disburse_BenefitPayments;
            }
        }
        
        public wRMV_CreateAssetSnapshot wRMV_CreateAssetSnapshot
        {
            get
            {
                if ((this.mwRMV_CreateAssetSnapshot == null))
                {
                    this.mwRMV_CreateAssetSnapshot = new wRMV_CreateAssetSnapshot(this);
                }
                return this.mwRMV_CreateAssetSnapshot;
            }
        }
        
        public wGI_SelectAssetSnapshot_FPGrid wGI_SelectAssetSnapshot_FPGrid
        {
            get
            {
                if ((this.mwGI_SelectAssetSnapshot_FPGrid == null))
                {
                    this.mwGI_SelectAssetSnapshot_FPGrid = new wGI_SelectAssetSnapshot_FPGrid(this);
                }
                return this.mwGI_SelectAssetSnapshot_FPGrid;
            }
        }
        
        public wRMV_Disburse_BenefitPayments_Itemize wRMV_Disburse_BenefitPayments_Itemize
        {
            get
            {
                if ((this.mwRMV_Disburse_BenefitPayments_Itemize == null))
                {
                    this.mwRMV_Disburse_BenefitPayments_Itemize = new wRMV_Disburse_BenefitPayments_Itemize(this);
                }
                return this.mwRMV_Disburse_BenefitPayments_Itemize;
            }
        }
        
        public wRMV_Contributions_Participant_Itemize wRMV_Contributions_Participant_Itemize
        {
            get
            {
                if ((this.mwRMV_Contributions_Participant_Itemize == null))
                {
                    this.mwRMV_Contributions_Participant_Itemize = new wRMV_Contributions_Participant_Itemize(this);
                }
                return this.mwRMV_Contributions_Participant_Itemize;
            }
        }
        
        public wRMV_InvestEarnings_Realized wRMV_InvestEarnings_Realized
        {
            get
            {
                if ((this.mwRMV_InvestEarnings_Realized == null))
                {
                    this.mwRMV_InvestEarnings_Realized = new wRMV_InvestEarnings_Realized(this);
                }
                return this.mwRMV_InvestEarnings_Realized;
            }
        }
        
        public wRMV_Disburse_Expenses wRMV_Disburse_Expenses
        {
            get
            {
                if ((this.mwRMV_Disburse_Expenses == null))
                {
                    this.mwRMV_Disburse_Expenses = new wRMV_Disburse_Expenses(this);
                }
                return this.mwRMV_Disburse_Expenses;
            }
        }
        
        public wRMV_InvestEarnings_OtherGainLoss wRMV_InvestEarnings_OtherGainLoss
        {
            get
            {
                if ((this.mwRMV_InvestEarnings_OtherGainLoss == null))
                {
                    this.mwRMV_InvestEarnings_OtherGainLoss = new wRMV_InvestEarnings_OtherGainLoss(this);
                }
                return this.mwRMV_InvestEarnings_OtherGainLoss;
            }
        }
        
        public wRMV_Contributions_Employer wRMV_Contributions_Employer
        {
            get
            {
                if ((this.mwRMV_Contributions_Employer == null))
                {
                    this.mwRMV_Contributions_Employer = new wRMV_Contributions_Employer(this);
                }
                return this.mwRMV_Contributions_Employer;
            }
        }
        
        public wRMV_Contributions_Others_Itemize wRMV_Contributions_Others_Itemize
        {
            get
            {
                if ((this.mwRMV_Contributions_Others_Itemize == null))
                {
                    this.mwRMV_Contributions_Others_Itemize = new wRMV_Contributions_Others_Itemize(this);
                }
                return this.mwRMV_Contributions_Others_Itemize;
            }
        }
        
        public wRMV_Tansfers_TransferToPlan_Itemize wRMV_Tansfers_TransferToPlan_Itemize
        {
            get
            {
                if ((this.mwRMV_Tansfers_TransferToPlan_Itemize == null))
                {
                    this.mwRMV_Tansfers_TransferToPlan_Itemize = new wRMV_Tansfers_TransferToPlan_Itemize(this);
                }
                return this.mwRMV_Tansfers_TransferToPlan_Itemize;
            }
        }
        
        public wRMV_OtherAdditions_OtherAdditons_Itemize wRMV_OtherAdditions_OtherAdditons_Itemize
        {
            get
            {
                if ((this.mwRMV_OtherAdditions_OtherAdditons_Itemize == null))
                {
                    this.mwRMV_OtherAdditions_OtherAdditons_Itemize = new wRMV_OtherAdditions_OtherAdditons_Itemize(this);
                }
                return this.mwRMV_OtherAdditions_OtherAdditons_Itemize;
            }
        }
        
        public wRMV_Withdrawals_LeavePayments_Itemize wRMV_Withdrawals_LeavePayments_Itemize
        {
            get
            {
                if ((this.mwRMV_Withdrawals_LeavePayments_Itemize == null))
                {
                    this.mwRMV_Withdrawals_LeavePayments_Itemize = new wRMV_Withdrawals_LeavePayments_Itemize(this);
                }
                return this.mwRMV_Withdrawals_LeavePayments_Itemize;
            }
        }
        
        public wRMV_Withdrawals_TransfersOutOfPlan_Itemize wRMV_Withdrawals_TransfersOutOfPlan_Itemize
        {
            get
            {
                if ((this.mwRMV_Withdrawals_TransfersOutOfPlan_Itemize == null))
                {
                    this.mwRMV_Withdrawals_TransfersOutOfPlan_Itemize = new wRMV_Withdrawals_TransfersOutOfPlan_Itemize(this);
                }
                return this.mwRMV_Withdrawals_TransfersOutOfPlan_Itemize;
            }
        }
        
        public wRMV_Withdrawals_AdministrationExpense_Itemize wRMV_Withdrawals_AdministrationExpense_Itemize
        {
            get
            {
                if ((this.mwRMV_Withdrawals_AdministrationExpense_Itemize == null))
                {
                    this.mwRMV_Withdrawals_AdministrationExpense_Itemize = new wRMV_Withdrawals_AdministrationExpense_Itemize(this);
                }
                return this.mwRMV_Withdrawals_AdministrationExpense_Itemize;
            }
        }
        
        public wMV_Adjustment_1 wMV_Adjustment_1
        {
            get
            {
                if ((this.mwMV_Adjustment_1 == null))
                {
                    this.mwMV_Adjustment_1 = new wMV_Adjustment_1(this);
                }
                return this.mwMV_Adjustment_1;
            }
        }
        
        public wRMV_InvestmentReturn_InvestmentReturn_Itemize wRMV_InvestmentReturn_InvestmentReturn_Itemize
        {
            get
            {
                if ((this.mwRMV_InvestmentReturn_InvestmentReturn_Itemize == null))
                {
                    this.mwRMV_InvestmentReturn_InvestmentReturn_Itemize = new wRMV_InvestmentReturn_InvestmentReturn_Itemize(this);
                }
                return this.mwRMV_InvestmentReturn_InvestmentReturn_Itemize;
            }
        }
        
        public wRMV_Withdrawal_OtherPayment_Itemize wRMV_Withdrawal_OtherPayment_Itemize
        {
            get
            {
                if ((this.mwRMV_Withdrawal_OtherPayment_Itemize == null))
                {
                    this.mwRMV_Withdrawal_OtherPayment_Itemize = new wRMV_Withdrawal_OtherPayment_Itemize(this);
                }
                return this.mwRMV_Withdrawal_OtherPayment_Itemize;
            }
        }
        
        public wRMV_Disbursements_OtherDisbursement wRMV_Disbursements_OtherDisbursement
        {
            get
            {
                if ((this.mwRMV_Disbursements_OtherDisbursement == null))
                {
                    this.mwRMV_Disbursements_OtherDisbursement = new wRMV_Disbursements_OtherDisbursement(this);
                }
                return this.mwRMV_Disbursements_OtherDisbursement;
            }
        }
        
        public wRMV_InvestEarings_OthersIncome wRMV_InvestEarings_OthersIncome
        {
            get
            {
                if ((this.mwRMV_InvestEarings_OthersIncome == null))
                {
                    this.mwRMV_InvestEarings_OthersIncome = new wRMV_InvestEarings_OthersIncome(this);
                }
                return this.mwRMV_InvestEarings_OthersIncome;
            }
        }
        
        public UINumEditorWindow UINumEditorWindow
        {
            get
            {
                if ((this.mUINumEditorWindow == null))
                {
                    this.mUINumEditorWindow = new UINumEditorWindow(this);
                }
                return this.mUINumEditorWindow;
            }
        }
        
        public UINumEditorWindow1 UINumEditorWindow1
        {
            get
            {
                if ((this.mUINumEditorWindow1 == null))
                {
                    this.mUINumEditorWindow1 = new UINumEditorWindow1(this);
                }
                return this.mUINumEditorWindow1;
            }
        }
        #endregion
        
        #region Fields
        private tvNaviTree mtvNaviTree;
        
        private wGI_TrustPeriodStartDate mwGI_TrustPeriodStartDate;
        
        private wGI_TrustPeriodEndDate mwGI_TrustPeriodEndDate;
        
        private wGI_Piror2YearsOfNHCE mwGI_Piror2YearsOfNHCE;
        
        private wGI_Restated mwGI_Restated;
        
        private wGI_NotRestated mwGI_NotRestated;
        
        private wGI_Audited mwGI_Audited;
        
        private wGI_Unaudited mwGI_Unaudited;
        
        private wSMV_TimePeriodEndDate_FPGrid mwSMV_TimePeriodEndDate_FPGrid;
        
        private wRMV_MVPeriodBegin mwRMV_MVPeriodBegin;
        
        private wRMV_Contributions_Employer_Itemize mwRMV_Contributions_Employer_Itemize;
        
        private wRMV_InvestEarnings_Interest mwRMV_InvestEarnings_Interest;
        
        private wRMV_InvestEarnings_Dividends mwRMV_InvestEarnings_Dividends;
        
        private wSMV_AssetCategory mwSMV_AssetCategory;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private wRMV_InvestEarnings_Unrealized mwRMV_InvestEarnings_Unrealized;
        
        private wRMV_Disburse_BenefitPayments mwRMV_Disburse_BenefitPayments;
        
        private wRMV_CreateAssetSnapshot mwRMV_CreateAssetSnapshot;
        
        private wGI_SelectAssetSnapshot_FPGrid mwGI_SelectAssetSnapshot_FPGrid;
        
        private wRMV_Disburse_BenefitPayments_Itemize mwRMV_Disburse_BenefitPayments_Itemize;
        
        private wRMV_Contributions_Participant_Itemize mwRMV_Contributions_Participant_Itemize;
        
        private wRMV_InvestEarnings_Realized mwRMV_InvestEarnings_Realized;
        
        private wRMV_Disburse_Expenses mwRMV_Disburse_Expenses;
        
        private wRMV_InvestEarnings_OtherGainLoss mwRMV_InvestEarnings_OtherGainLoss;
        
        private wRMV_Contributions_Employer mwRMV_Contributions_Employer;
        
        private wRMV_Contributions_Others_Itemize mwRMV_Contributions_Others_Itemize;
        
        private wRMV_Tansfers_TransferToPlan_Itemize mwRMV_Tansfers_TransferToPlan_Itemize;
        
        private wRMV_OtherAdditions_OtherAdditons_Itemize mwRMV_OtherAdditions_OtherAdditons_Itemize;
        
        private wRMV_Withdrawals_LeavePayments_Itemize mwRMV_Withdrawals_LeavePayments_Itemize;
        
        private wRMV_Withdrawals_TransfersOutOfPlan_Itemize mwRMV_Withdrawals_TransfersOutOfPlan_Itemize;
        
        private wRMV_Withdrawals_AdministrationExpense_Itemize mwRMV_Withdrawals_AdministrationExpense_Itemize;
        
        private wMV_Adjustment_1 mwMV_Adjustment_1;
        
        private wRMV_InvestmentReturn_InvestmentReturn_Itemize mwRMV_InvestmentReturn_InvestmentReturn_Itemize;
        
        private wRMV_Withdrawal_OtherPayment_Itemize mwRMV_Withdrawal_OtherPayment_Itemize;
        
        private wRMV_Disbursements_OtherDisbursement mwRMV_Disbursements_OtherDisbursement;
        
        private wRMV_InvestEarings_OthersIncome mwRMV_InvestEarings_OthersIncome;
        
        private UINumEditorWindow mUINumEditorWindow;
        
        private UINumEditorWindow1 mUINumEditorWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class tvNaviTree : WinWindow
    {
        
        public tvNaviTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "trvLibraryExplorer";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UIDataEntryTreeItem UIDataEntryTreeItem
        {
            get
            {
                if ((this.mUIDataEntryTreeItem == null))
                {
                    this.mUIDataEntryTreeItem = new UIDataEntryTreeItem(this);
                }
                return this.mUIDataEntryTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDataEntryTreeItem mUIDataEntryTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDataEntryTreeItem : WinTreeItem
    {
        
        public UIDataEntryTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Data Entry";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGeneralInformationTreeItem
        {
            get
            {
                if ((this.mUIGeneralInformationTreeItem == null))
                {
                    this.mUIGeneralInformationTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGeneralInformationTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "General Information";
                    this.mUIGeneralInformationTreeItem.SearchProperties["Value"] = "1";
                    this.mUIGeneralInformationTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGeneralInformationTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGeneralInformationTreeItem.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIGeneralInformationTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGeneralInformationTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_TrustPeriodStartDate : WinWindow
    {
        
        public wGI_TrustPeriodStartDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteStartDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cboTrustPeriodStartDate cboTrustPeriodStartDate
        {
            get
            {
                if ((this.mcboTrustPeriodStartDate == null))
                {
                    this.mcboTrustPeriodStartDate = new cboTrustPeriodStartDate(this);
                }
                return this.mcboTrustPeriodStartDate;
            }
        }
        #endregion
        
        #region Fields
        private cboTrustPeriodStartDate mcboTrustPeriodStartDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cboTrustPeriodStartDate : WinComboBox
    {
        
        public cboTrustPeriodStartDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtTrustPeriodStartDate
        {
            get
            {
                if ((this.mtxtTrustPeriodStartDate == null))
                {
                    this.mtxtTrustPeriodStartDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtTrustPeriodStartDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtTrustPeriodStartDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtTrustPeriodStartDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtTrustPeriodStartDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_TrustPeriodEndDate : WinWindow
    {
        
        public wGI_TrustPeriodEndDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteEndDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cboTrustPeriodEndDate cboTrustPeriodEndDate
        {
            get
            {
                if ((this.mcboTrustPeriodEndDate == null))
                {
                    this.mcboTrustPeriodEndDate = new cboTrustPeriodEndDate(this);
                }
                return this.mcboTrustPeriodEndDate;
            }
        }
        #endregion
        
        #region Fields
        private cboTrustPeriodEndDate mcboTrustPeriodEndDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cboTrustPeriodEndDate : WinComboBox
    {
        
        public cboTrustPeriodEndDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtTrustPeriodEndDate
        {
            get
            {
                if ((this.mtxtTrustPeriodEndDate == null))
                {
                    this.mtxtTrustPeriodEndDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtTrustPeriodEndDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtTrustPeriodEndDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtTrustPeriodEndDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtTrustPeriodEndDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Piror2YearsOfNHCE : WinWindow
    {
        
        public wGI_Piror2YearsOfNHCE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudPriorTwoYearsNHCE";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPiror2YearsOfNHCE txtPiror2YearsOfNHCE
        {
            get
            {
                if ((this.mtxtPiror2YearsOfNHCE == null))
                {
                    this.mtxtPiror2YearsOfNHCE = new txtPiror2YearsOfNHCE(this);
                }
                return this.mtxtPiror2YearsOfNHCE;
            }
        }
        #endregion
        
        #region Fields
        private txtPiror2YearsOfNHCE mtxtPiror2YearsOfNHCE;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPiror2YearsOfNHCE : WinEdit
    {
        
        public txtPiror2YearsOfNHCE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudPriorTwoYearsNHCEEdit1
        {
            get
            {
                if ((this.mUINudPriorTwoYearsNHCEEdit1 == null))
                {
                    this.mUINudPriorTwoYearsNHCEEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudPriorTwoYearsNHCEEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudPriorTwoYearsNHCEEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudPriorTwoYearsNHCEEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudPriorTwoYearsNHCEEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Restated : WinWindow
    {
        
        public wGI_Restated(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radRestated";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdRestated
        {
            get
            {
                if ((this.mrdRestated == null))
                {
                    this.mrdRestated = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdRestated.SearchProperties[WinRadioButton.PropertyNames.Name] = "Restated";
                    this.mrdRestated.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdRestated;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdRestated;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_NotRestated : WinWindow
    {
        
        public wGI_NotRestated(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radNotRestated";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdNotRestated
        {
            get
            {
                if ((this.mrdNotRestated == null))
                {
                    this.mrdNotRestated = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdNotRestated.SearchProperties[WinRadioButton.PropertyNames.Name] = "Not Restated";
                    this.mrdNotRestated.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdNotRestated;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdNotRestated;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Audited : WinWindow
    {
        
        public wGI_Audited(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radAudited";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdAudited
        {
            get
            {
                if ((this.mrdAudited == null))
                {
                    this.mrdAudited = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdAudited.SearchProperties[WinRadioButton.PropertyNames.Name] = "Audited";
                    this.mrdAudited.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdAudited;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdAudited;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Unaudited : WinWindow
    {
        
        public wGI_Unaudited(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radUnaudited";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdUnaudited
        {
            get
            {
                if ((this.mrdUnaudited == null))
                {
                    this.mrdUnaudited = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdUnaudited.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unaudited";
                    this.mrdUnaudited.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdUnaudited;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdUnaudited;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSMV_TimePeriodEndDate_FPGrid : WinWindow
    {
        
        public wSMV_TimePeriodEndDate_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadAssetCategory";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_MVPeriodBegin : WinWindow
    {
        
        public wRMV_MVPeriodBegin(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudMVPeriodBegin";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtMVPeriodBegin txtMVPeriodBegin
        {
            get
            {
                if ((this.mtxtMVPeriodBegin == null))
                {
                    this.mtxtMVPeriodBegin = new txtMVPeriodBegin(this);
                }
                return this.mtxtMVPeriodBegin;
            }
        }
        #endregion
        
        #region Fields
        private txtMVPeriodBegin mtxtMVPeriodBegin;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtMVPeriodBegin : WinEdit
    {
        
        public txtMVPeriodBegin(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudMVPeriodBeginEdit1
        {
            get
            {
                if ((this.mUINudMVPeriodBeginEdit1 == null))
                {
                    this.mUINudMVPeriodBeginEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudMVPeriodBeginEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudMVPeriodBeginEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudMVPeriodBeginEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudMVPeriodBeginEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Contributions_Employer_Itemize : WinWindow
    {
        
        public wRMV_Contributions_Employer_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkEmployerItemize";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtContributions_Employer_Itemize txtContributions_Employer_Itemize
        {
            get
            {
                if ((this.mtxtContributions_Employer_Itemize == null))
                {
                    this.mtxtContributions_Employer_Itemize = new txtContributions_Employer_Itemize(this);
                }
                return this.mtxtContributions_Employer_Itemize;
            }
        }
        #endregion
        
        #region Fields
        private txtContributions_Employer_Itemize mtxtContributions_Employer_Itemize;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtContributions_Employer_Itemize : WinText
    {
        
        public txtContributions_Employer_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink linkContributions_Employer_Itemize
        {
            get
            {
                if ((this.mlinkContributions_Employer_Itemize == null))
                {
                    this.mlinkContributions_Employer_Itemize = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlinkContributions_Employer_Itemize.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlinkContributions_Employer_Itemize.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlinkContributions_Employer_Itemize;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlinkContributions_Employer_Itemize;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestEarnings_Interest : WinWindow
    {
        
        public wRMV_InvestEarnings_Interest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudInterest";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterest txtInterest
        {
            get
            {
                if ((this.mtxtInterest == null))
                {
                    this.mtxtInterest = new txtInterest(this);
                }
                return this.mtxtInterest;
            }
        }
        #endregion
        
        #region Fields
        private txtInterest mtxtInterest;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterest : WinEdit
    {
        
        public txtInterest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudInterestEdit1
        {
            get
            {
                if ((this.mUINudInterestEdit1 == null))
                {
                    this.mUINudInterestEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudInterestEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudInterestEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudInterestEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudInterestEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestEarnings_Dividends : WinWindow
    {
        
        public wRMV_InvestEarnings_Dividends(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudDividends";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDividends txtDividends
        {
            get
            {
                if ((this.mtxtDividends == null))
                {
                    this.mtxtDividends = new txtDividends(this);
                }
                return this.mtxtDividends;
            }
        }
        #endregion
        
        #region Fields
        private txtDividends mtxtDividends;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDividends : WinEdit
    {
        
        public txtDividends(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudDividendsEdit1
        {
            get
            {
                if ((this.mUINudDividendsEdit1 == null))
                {
                    this.mUINudDividendsEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudDividendsEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudDividendsEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudDividendsEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudDividendsEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSMV_AssetCategory : WinWindow
    {
        
        public wSMV_AssetCategory(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wClose wClose
        {
            get
            {
                if ((this.mwClose == null))
                {
                    this.mwClose = new wClose(this);
                }
                return this.mwClose;
            }
        }
        #endregion
        
        #region Fields
        private wClose mwClose;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wClose : WinComboBox
    {
        
        public wClose(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestEarnings_Unrealized : WinWindow
    {
        
        public wRMV_InvestEarnings_Unrealized(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudUnrealized";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtUnrealized txtUnrealized
        {
            get
            {
                if ((this.mtxtUnrealized == null))
                {
                    this.mtxtUnrealized = new txtUnrealized(this);
                }
                return this.mtxtUnrealized;
            }
        }
        #endregion
        
        #region Fields
        private txtUnrealized mtxtUnrealized;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtUnrealized : WinEdit
    {
        
        public txtUnrealized(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudUnrealizedEdit1
        {
            get
            {
                if ((this.mUINudUnrealizedEdit1 == null))
                {
                    this.mUINudUnrealizedEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudUnrealizedEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudUnrealizedEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudUnrealizedEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudUnrealizedEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Disburse_BenefitPayments : WinWindow
    {
        
        public wRMV_Disburse_BenefitPayments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudBenefitPayments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBenefitPayments txtBenefitPayments
        {
            get
            {
                if ((this.mtxtBenefitPayments == null))
                {
                    this.mtxtBenefitPayments = new txtBenefitPayments(this);
                }
                return this.mtxtBenefitPayments;
            }
        }
        #endregion
        
        #region Fields
        private txtBenefitPayments mtxtBenefitPayments;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBenefitPayments : WinEdit
    {
        
        public txtBenefitPayments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudBenefitPaymentsEdit1
        {
            get
            {
                if ((this.mUINudBenefitPaymentsEdit1 == null))
                {
                    this.mUINudBenefitPaymentsEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudBenefitPaymentsEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudBenefitPaymentsEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudBenefitPaymentsEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudBenefitPaymentsEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_CreateAssetSnapshot : WinWindow
    {
        
        public wRMV_CreateAssetSnapshot(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkCreateAssetSnapshot";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtCreateAssetSnapshot txtCreateAssetSnapshot
        {
            get
            {
                if ((this.mtxtCreateAssetSnapshot == null))
                {
                    this.mtxtCreateAssetSnapshot = new txtCreateAssetSnapshot(this);
                }
                return this.mtxtCreateAssetSnapshot;
            }
        }
        #endregion
        
        #region Fields
        private txtCreateAssetSnapshot mtxtCreateAssetSnapshot;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtCreateAssetSnapshot : WinText
    {
        
        public txtCreateAssetSnapshot(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Create Asset Snapshot";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink linkCreateAssetSnapshot
        {
            get
            {
                if ((this.mlinkCreateAssetSnapshot == null))
                {
                    this.mlinkCreateAssetSnapshot = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlinkCreateAssetSnapshot.SearchProperties[WinHyperlink.PropertyNames.Name] = "Create Asset Snapshot";
                    this.mlinkCreateAssetSnapshot.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlinkCreateAssetSnapshot;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlinkCreateAssetSnapshot;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_SelectAssetSnapshot_FPGrid : WinWindow
    {
        
        public wGI_SelectAssetSnapshot_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadSnapshot";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Select asset snapshot to obtain beginning balance for this period";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Disburse_BenefitPayments_Itemize : WinWindow
    {
        
        public wRMV_Disburse_BenefitPayments_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkBenefitPayments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDisburse_BenefitPayments_Itemize txtDisburse_BenefitPayments_Itemize
        {
            get
            {
                if ((this.mtxtDisburse_BenefitPayments_Itemize == null))
                {
                    this.mtxtDisburse_BenefitPayments_Itemize = new txtDisburse_BenefitPayments_Itemize(this);
                }
                return this.mtxtDisburse_BenefitPayments_Itemize;
            }
        }
        #endregion
        
        #region Fields
        private txtDisburse_BenefitPayments_Itemize mtxtDisburse_BenefitPayments_Itemize;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtDisburse_BenefitPayments_Itemize : WinText
    {
        
        public txtDisburse_BenefitPayments_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink linkDisburse_BenefitPayments_Itemize
        {
            get
            {
                if ((this.mlinkDisburse_BenefitPayments_Itemize == null))
                {
                    this.mlinkDisburse_BenefitPayments_Itemize = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlinkDisburse_BenefitPayments_Itemize.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlinkDisburse_BenefitPayments_Itemize.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlinkDisburse_BenefitPayments_Itemize;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlinkDisburse_BenefitPayments_Itemize;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Contributions_Participant_Itemize : WinWindow
    {
        
        public wRMV_Contributions_Participant_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkParticipantItemize";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtContributions_Participant_Itemize txtContributions_Participant_Itemize
        {
            get
            {
                if ((this.mtxtContributions_Participant_Itemize == null))
                {
                    this.mtxtContributions_Participant_Itemize = new txtContributions_Participant_Itemize(this);
                }
                return this.mtxtContributions_Participant_Itemize;
            }
        }
        #endregion
        
        #region Fields
        private txtContributions_Participant_Itemize mtxtContributions_Participant_Itemize;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtContributions_Participant_Itemize : WinText
    {
        
        public txtContributions_Participant_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestEarnings_Realized : WinWindow
    {
        
        public wRMV_InvestEarnings_Realized(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudRealized";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudRealizedEdit1
        {
            get
            {
                if ((this.mUINudRealizedEdit1 == null))
                {
                    this.mUINudRealizedEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudRealizedEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudRealizedEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudRealizedEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudRealizedEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Disburse_Expenses : WinWindow
    {
        
        public wRMV_Disburse_Expenses(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudExpenses";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudExpensesEdit1
        {
            get
            {
                if ((this.mUINudExpensesEdit1 == null))
                {
                    this.mUINudExpensesEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudExpensesEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUINudExpensesEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudExpensesEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudExpensesEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestEarnings_OtherGainLoss : WinWindow
    {
        
        public wRMV_InvestEarnings_OtherGainLoss(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudOtherGainLoss";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudOtherGainLossEdit1
        {
            get
            {
                if ((this.mUINudOtherGainLossEdit1 == null))
                {
                    this.mUINudOtherGainLossEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudOtherGainLossEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudOtherGainLossEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudOtherGainLossEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudOtherGainLossEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Contributions_Employer : WinWindow
    {
        
        public wRMV_Contributions_Employer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudEmployer";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt3 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt3(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt3 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt3 : WinEdit
    {
        
        public txt3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudEmployerEdit1
        {
            get
            {
                if ((this.mUINudEmployerEdit1 == null))
                {
                    this.mUINudEmployerEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudEmployerEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudEmployerEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudEmployerEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudEmployerEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Contributions_Others_Itemize : WinWindow
    {
        
        public wRMV_Contributions_Others_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkOther";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt4 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt4(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt4 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt4 : WinText
    {
        
        public txt4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Tansfers_TransferToPlan_Itemize : WinWindow
    {
        
        public wRMV_Tansfers_TransferToPlan_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkTransfersToPlan";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt5 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt5(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt5 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt5 : WinText
    {
        
        public txt5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_OtherAdditions_OtherAdditons_Itemize : WinWindow
    {
        
        public wRMV_OtherAdditions_OtherAdditons_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkOtherAdditions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt6 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt6(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt6 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt6 : WinText
    {
        
        public txt6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Withdrawals_LeavePayments_Itemize : WinWindow
    {
        
        public wRMV_Withdrawals_LeavePayments_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkLeavePayment";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt7 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt7(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt7 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt7 : WinText
    {
        
        public txt7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Withdrawals_TransfersOutOfPlan_Itemize : WinWindow
    {
        
        public wRMV_Withdrawals_TransfersOutOfPlan_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkTransfersFromPlan";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt8 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt8(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt8 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt8 : WinText
    {
        
        public txt8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Withdrawals_AdministrationExpense_Itemize : WinWindow
    {
        
        public wRMV_Withdrawals_AdministrationExpense_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkExpenses";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt9 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt9(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt9 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt9 : WinText
    {
        
        public txt9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMV_Adjustment_1 : WinWindow
    {
        
        public wMV_Adjustment_1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudAdjustment";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit : WinEdit
    {
        
        public Edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestmentReturn_InvestmentReturn_Itemize : WinWindow
    {
        
        public wRMV_InvestmentReturn_InvestmentReturn_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkReturnOnInverstments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt10 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt10(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt10 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt10 : WinText
    {
        
        public txt10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Withdrawal_OtherPayment_Itemize : WinWindow
    {
        
        public wRMV_Withdrawal_OtherPayment_Itemize(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lnkOtherDisbursements";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt11 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt11(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt11 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt11 : WinText
    {
        
        public txt11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Itemize";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Itemize";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_Disbursements_OtherDisbursement : WinWindow
    {
        
        public wRMV_Disbursements_OtherDisbursement(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudOtherDisbursements";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit1 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit1(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit1 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit1 : WinEdit
    {
        
        public Edit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRMV_InvestEarings_OthersIncome : WinWindow
    {
        
        public wRMV_InvestEarings_OthersIncome(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudOtherIncome";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit2 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit2(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit2 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit2 : WinEdit
    {
        
        public Edit2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINumEditorWindow : WinWindow
    {
        
        public UINumEditorWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UINumEditorEdit UINumEditorEdit
        {
            get
            {
                if ((this.mUINumEditorEdit == null))
                {
                    this.mUINumEditorEdit = new UINumEditorEdit(this);
                }
                return this.mUINumEditorEdit;
            }
        }
        #endregion
        
        #region Fields
        private UINumEditorEdit mUINumEditorEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINumEditorEdit : WinEdit
    {
        
        public UINumEditorEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINumEditorWindow1 : WinWindow
    {
        
        public UINumEditorWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UINumEditorEdit2 UINumEditorEdit
        {
            get
            {
                if ((this.mUINumEditorEdit == null))
                {
                    this.mUINumEditorEdit = new UINumEditorEdit2(this);
                }
                return this.mUINumEditorEdit;
            }
        }
        #endregion
        
        #region Fields
        private UINumEditorEdit2 mUINumEditorEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINumEditorEdit2 : WinEdit
    {
        
        public UINumEditorEdit2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEmployerContribution : WinWindow
    {
        
        public wEmployerContribution()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Employer Contributions");
            #endregion
        }
        
        #region Properties
        public wOK wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK(this);
                }
                return this.mwOK;
            }
        }
        
        public FPGrid FPGrid
        {
            get
            {
                if ((this.mFPGrid == null))
                {
                    this.mFPGrid = new FPGrid(this);
                }
                return this.mFPGrid;
            }
        }
        #endregion
        
        #region Fields
        private wOK mwOK;
        
        private FPGrid mFPGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK : WinWindow
    {
        
        public wOK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("Employer Contributions");
            #endregion
        }
        
        #region Properties
        public WinButton btnOK
        {
            get
            {
                if ((this.mbtnOK == null))
                {
                    this.mbtnOK = new WinButton(this);
                    #region Search Criteria
                    this.mbtnOK.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtnOK.WindowTitles.Add("Employer Contributions");
                    #endregion
                }
                return this.mbtnOK;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class FPGrid : WinWindow
    {
        
        public FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprItemization";
            this.WindowTitles.Add("Employer Contributions");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Employer Contributions");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssetSnapshotProperties : WinWindow
    {
        
        public wAssetSnapshotProperties()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Asset Snapshot Properties";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Asset Snapshot Properties");
            #endregion
        }
        
        #region Properties
        public wOK1 wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK1(this);
                }
                return this.mwOK;
            }
        }
        
        public wSnapshotName wSnapshotName
        {
            get
            {
                if ((this.mwSnapshotName == null))
                {
                    this.mwSnapshotName = new wSnapshotName(this);
                }
                return this.mwSnapshotName;
            }
        }
        #endregion
        
        #region Fields
        private wOK1 mwOK;
        
        private wSnapshotName mwSnapshotName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK1 : WinWindow
    {
        
        public wOK1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Asset Snapshot Properties");
            #endregion
        }
        
        #region Properties
        public WinButton btnOK
        {
            get
            {
                if ((this.mbtnOK == null))
                {
                    this.mbtnOK = new WinButton(this);
                    #region Search Criteria
                    this.mbtnOK.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtnOK.WindowTitles.Add("Asset Snapshot Properties");
                    #endregion
                }
                return this.mbtnOK;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSnapshotName : WinWindow
    {
        
        public wSnapshotName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSnapshotName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Asset Snapshot Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Asset Snapshot Properties");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitPayments : WinWindow
    {
        
        public wBenefitPayments()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Benefit Payments";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Benefit Payments");
            #endregion
        }
        
        #region Properties
        public wOK2 wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK2(this);
                }
                return this.mwOK;
            }
        }
        
        public FPGrid1 FPGrid
        {
            get
            {
                if ((this.mFPGrid == null))
                {
                    this.mFPGrid = new FPGrid1(this);
                }
                return this.mFPGrid;
            }
        }
        #endregion
        
        #region Fields
        private wOK2 mwOK;
        
        private FPGrid1 mFPGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK2 : WinWindow
    {
        
        public wOK2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("Benefit Payments");
            #endregion
        }
        
        #region Properties
        public WinButton btnOK
        {
            get
            {
                if ((this.mbtnOK == null))
                {
                    this.mbtnOK = new WinButton(this);
                    #region Search Criteria
                    this.mbtnOK.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtnOK.WindowTitles.Add("Benefit Payments");
                    #endregion
                }
                return this.mbtnOK;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class FPGrid1 : WinWindow
    {
        
        public FPGrid1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprItemization";
            this.WindowTitles.Add("Benefit Payments");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Benefit Payments");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSummaryOfMarketValue : WinWindow
    {
        
        public wSummaryOfMarketValue()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wAssetCategory wAssetCategory
        {
            get
            {
                if ((this.mwAssetCategory == null))
                {
                    this.mwAssetCategory = new wAssetCategory(this);
                }
                return this.mwAssetCategory;
            }
        }
        #endregion
        
        #region Fields
        private wAssetCategory mwAssetCategory;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssetCategory : WinWindow
    {
        
        public wAssetCategory(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ComboLBox";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wList wList
        {
            get
            {
                if ((this.mwList == null))
                {
                    this.mwList = new wList(this);
                }
                return this.mwList;
            }
        }
        #endregion
        
        #region Fields
        private wList mwList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wList : WinList
    {
        
        public wList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public WinListItem wItem
        {
            get
            {
                if ((this.mwItem == null))
                {
                    this.mwItem = new WinListItem(this);
                }
                return this.mwItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mwItem;
        #endregion
    }
}
