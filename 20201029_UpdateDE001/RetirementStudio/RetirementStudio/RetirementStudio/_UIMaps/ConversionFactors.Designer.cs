// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.ConversionFactorsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class ConversionFactors
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wStandard wStandard
        {
            get
            {
                if ((this.mwStandard == null))
                {
                    this.mwStandard = new wStandard(this);
                }
                return this.mwStandard;
            }
        }
        
        public wPresentValueFactor wPresentValueFactor
        {
            get
            {
                if ((this.mwPresentValueFactor == null))
                {
                    this.mwPresentValueFactor = new wPresentValueFactor(this);
                }
                return this.mwPresentValueFactor;
            }
        }
        
        public wTabularOrConstantFactor wTabularOrConstantFactor
        {
            get
            {
                if ((this.mwTabularOrConstantFactor == null))
                {
                    this.mwTabularOrConstantFactor = new wTabularOrConstantFactor(this);
                }
                return this.mwTabularOrConstantFactor;
            }
        }
        
        public wCustomCode wCustomCode
        {
            get
            {
                if ((this.mwCustomCode == null))
                {
                    this.mwCustomCode = new wCustomCode(this);
                }
                return this.mwCustomCode;
            }
        }
        
        public wFormOfPaymentType_From wFormOfPaymentType_From
        {
            get
            {
                if ((this.mwFormOfPaymentType_From == null))
                {
                    this.mwFormOfPaymentType_From = new wFormOfPaymentType_From(this);
                }
                return this.mwFormOfPaymentType_From;
            }
        }
        
        public wFormOfPaymentType_To wFormOfPaymentType_To
        {
            get
            {
                if ((this.mwFormOfPaymentType_To == null))
                {
                    this.mwFormOfPaymentType_To = new wFormOfPaymentType_To(this);
                }
                return this.mwFormOfPaymentType_To;
            }
        }
        
        public wGuaranteePeriod_From_VIcon wGuaranteePeriod_From_VIcon
        {
            get
            {
                if ((this.mwGuaranteePeriod_From_VIcon == null))
                {
                    this.mwGuaranteePeriod_From_VIcon = new wGuaranteePeriod_From_VIcon(this);
                }
                return this.mwGuaranteePeriod_From_VIcon;
            }
        }
        
        public wGuaranteePeriod_From_CIcon wGuaranteePeriod_From_CIcon
        {
            get
            {
                if ((this.mwGuaranteePeriod_From_CIcon == null))
                {
                    this.mwGuaranteePeriod_From_CIcon = new wGuaranteePeriod_From_CIcon(this);
                }
                return this.mwGuaranteePeriod_From_CIcon;
            }
        }
        
        public wGuaranteePeriod_To_VIcon wGuaranteePeriod_To_VIcon
        {
            get
            {
                if ((this.mwGuaranteePeriod_To_VIcon == null))
                {
                    this.mwGuaranteePeriod_To_VIcon = new wGuaranteePeriod_To_VIcon(this);
                }
                return this.mwGuaranteePeriod_To_VIcon;
            }
        }
        
        public wGuaranteePeriod_To_CIcon wGuaranteePeriod_To_CIcon
        {
            get
            {
                if ((this.mwGuaranteePeriod_To_CIcon == null))
                {
                    this.mwGuaranteePeriod_To_CIcon = new wGuaranteePeriod_To_CIcon(this);
                }
                return this.mwGuaranteePeriod_To_CIcon;
            }
        }
        
        public wBenefitCommenceAge_From_CIcon wBenefitCommenceAge_From_CIcon
        {
            get
            {
                if ((this.mwBenefitCommenceAge_From_CIcon == null))
                {
                    this.mwBenefitCommenceAge_From_CIcon = new wBenefitCommenceAge_From_CIcon(this);
                }
                return this.mwBenefitCommenceAge_From_CIcon;
            }
        }
        
        public wBenefitCommenceAge_To_CIcon wBenefitCommenceAge_To_CIcon
        {
            get
            {
                if ((this.mwBenefitCommenceAge_To_CIcon == null))
                {
                    this.mwBenefitCommenceAge_To_CIcon = new wBenefitCommenceAge_To_CIcon(this);
                }
                return this.mwBenefitCommenceAge_To_CIcon;
            }
        }
        
        public wSurvivorPercentage_From_VIcon wSurvivorPercentage_From_VIcon
        {
            get
            {
                if ((this.mwSurvivorPercentage_From_VIcon == null))
                {
                    this.mwSurvivorPercentage_From_VIcon = new wSurvivorPercentage_From_VIcon(this);
                }
                return this.mwSurvivorPercentage_From_VIcon;
            }
        }
        
        public wSurvivorPercentage_From_PercentIcon wSurvivorPercentage_From_PercentIcon
        {
            get
            {
                if ((this.mwSurvivorPercentage_From_PercentIcon == null))
                {
                    this.mwSurvivorPercentage_From_PercentIcon = new wSurvivorPercentage_From_PercentIcon(this);
                }
                return this.mwSurvivorPercentage_From_PercentIcon;
            }
        }
        
        public wMortalityInDeferralPeriod_From wMortalityInDeferralPeriod_From
        {
            get
            {
                if ((this.mwMortalityInDeferralPeriod_From == null))
                {
                    this.mwMortalityInDeferralPeriod_From = new wMortalityInDeferralPeriod_From(this);
                }
                return this.mwMortalityInDeferralPeriod_From;
            }
        }
        
        public wMortalityInDeferralPeriod_To wMortalityInDeferralPeriod_To
        {
            get
            {
                if ((this.mwMortalityInDeferralPeriod_To == null))
                {
                    this.mwMortalityInDeferralPeriod_To = new wMortalityInDeferralPeriod_To(this);
                }
                return this.mwMortalityInDeferralPeriod_To;
            }
        }
        
        public wNumberOfPaymentsPerYear_From_VIcon wNumberOfPaymentsPerYear_From_VIcon
        {
            get
            {
                if ((this.mwNumberOfPaymentsPerYear_From_VIcon == null))
                {
                    this.mwNumberOfPaymentsPerYear_From_VIcon = new wNumberOfPaymentsPerYear_From_VIcon(this);
                }
                return this.mwNumberOfPaymentsPerYear_From_VIcon;
            }
        }
        
        public wNumberOfPaymentsPerYear_From_CIcon wNumberOfPaymentsPerYear_From_CIcon
        {
            get
            {
                if ((this.mwNumberOfPaymentsPerYear_From_CIcon == null))
                {
                    this.mwNumberOfPaymentsPerYear_From_CIcon = new wNumberOfPaymentsPerYear_From_CIcon(this);
                }
                return this.mwNumberOfPaymentsPerYear_From_CIcon;
            }
        }
        
        public wBenefitStopAge_From_VIcon wBenefitStopAge_From_VIcon
        {
            get
            {
                if ((this.mwBenefitStopAge_From_VIcon == null))
                {
                    this.mwBenefitStopAge_From_VIcon = new wBenefitStopAge_From_VIcon(this);
                }
                return this.mwBenefitStopAge_From_VIcon;
            }
        }
        
        public wBenefitStopAge_From_CIcon wBenefitStopAge_From_CIcon
        {
            get
            {
                if ((this.mwBenefitStopAge_From_CIcon == null))
                {
                    this.mwBenefitStopAge_From_CIcon = new wBenefitStopAge_From_CIcon(this);
                }
                return this.mwBenefitStopAge_From_CIcon;
            }
        }
        
        public wBenefitCommenceAge_From_VIcon wBenefitCommenceAge_From_VIcon
        {
            get
            {
                if ((this.mwBenefitCommenceAge_From_VIcon == null))
                {
                    this.mwBenefitCommenceAge_From_VIcon = new wBenefitCommenceAge_From_VIcon(this);
                }
                return this.mwBenefitCommenceAge_From_VIcon;
            }
        }
        
        public wBenefitCommenceAge_To_VIcon wBenefitCommenceAge_To_VIcon
        {
            get
            {
                if ((this.mwBenefitCommenceAge_To_VIcon == null))
                {
                    this.mwBenefitCommenceAge_To_VIcon = new wBenefitCommenceAge_To_VIcon(this);
                }
                return this.mwBenefitCommenceAge_To_VIcon;
            }
        }
        
        public wBenefitStopAge_To_VIcon wBenefitStopAge_To_VIcon
        {
            get
            {
                if ((this.mwBenefitStopAge_To_VIcon == null))
                {
                    this.mwBenefitStopAge_To_VIcon = new wBenefitStopAge_To_VIcon(this);
                }
                return this.mwBenefitStopAge_To_VIcon;
            }
        }
        
        public wBenefitStopAge_To_CIcon wBenefitStopAge_To_CIcon
        {
            get
            {
                if ((this.mwBenefitStopAge_To_CIcon == null))
                {
                    this.mwBenefitStopAge_To_CIcon = new wBenefitStopAge_To_CIcon(this);
                }
                return this.mwBenefitStopAge_To_CIcon;
            }
        }
        
        public wNumberOfPaymentsPerYear_To_VIcon wNumberOfPaymentsPerYear_To_VIcon
        {
            get
            {
                if ((this.mwNumberOfPaymentsPerYear_To_VIcon == null))
                {
                    this.mwNumberOfPaymentsPerYear_To_VIcon = new wNumberOfPaymentsPerYear_To_VIcon(this);
                }
                return this.mwNumberOfPaymentsPerYear_To_VIcon;
            }
        }
        
        public wNumberOfPaymentsPerYear_To_CIcon wNumberOfPaymentsPerYear_To_CIcon
        {
            get
            {
                if ((this.mwNumberOfPaymentsPerYear_To_CIcon == null))
                {
                    this.mwNumberOfPaymentsPerYear_To_CIcon = new wNumberOfPaymentsPerYear_To_CIcon(this);
                }
                return this.mwNumberOfPaymentsPerYear_To_CIcon;
            }
        }
        
        public wActuarialEquivalence_From wActuarialEquivalence_From
        {
            get
            {
                if ((this.mwActuarialEquivalence_From == null))
                {
                    this.mwActuarialEquivalence_From = new wActuarialEquivalence_From(this);
                }
                return this.mwActuarialEquivalence_From;
            }
        }
        
        public wActuarialEquivalence_To wActuarialEquivalence_To
        {
            get
            {
                if ((this.mwActuarialEquivalence_To == null))
                {
                    this.mwActuarialEquivalence_To = new wActuarialEquivalence_To(this);
                }
                return this.mwActuarialEquivalence_To;
            }
        }
        
        public wApplySpouseAgeDifference_From wApplySpouseAgeDifference_From
        {
            get
            {
                if ((this.mwApplySpouseAgeDifference_From == null))
                {
                    this.mwApplySpouseAgeDifference_From = new wApplySpouseAgeDifference_From(this);
                }
                return this.mwApplySpouseAgeDifference_From;
            }
        }
        
        public wApplySpouseAgeDifference_To wApplySpouseAgeDifference_To
        {
            get
            {
                if ((this.mwApplySpouseAgeDifference_To == null))
                {
                    this.mwApplySpouseAgeDifference_To = new wApplySpouseAgeDifference_To(this);
                }
                return this.mwApplySpouseAgeDifference_To;
            }
        }
        
        public wCommonComboBox wCommonComboBox
        {
            get
            {
                if ((this.mwCommonComboBox == null))
                {
                    this.mwCommonComboBox = new wCommonComboBox(this);
                }
                return this.mwCommonComboBox;
            }
        }
        
        public wCommonTXT wCommonTXT
        {
            get
            {
                if ((this.mwCommonTXT == null))
                {
                    this.mwCommonTXT = new wCommonTXT(this);
                }
                return this.mwCommonTXT;
            }
        }
        
        public wSurvivorPercentage_To_VIcon wSurvivorPercentage_To_VIcon
        {
            get
            {
                if ((this.mwSurvivorPercentage_To_VIcon == null))
                {
                    this.mwSurvivorPercentage_To_VIcon = new wSurvivorPercentage_To_VIcon(this);
                }
                return this.mwSurvivorPercentage_To_VIcon;
            }
        }
        
        public wSurvivorPercentage_To_PercentIcon wSurvivorPercentage_To_PercentIcon
        {
            get
            {
                if ((this.mwSurvivorPercentage_To_PercentIcon == null))
                {
                    this.mwSurvivorPercentage_To_PercentIcon = new wSurvivorPercentage_To_PercentIcon(this);
                }
                return this.mwSurvivorPercentage_To_PercentIcon;
            }
        }
        
        public wSurvivorPercentage_From_txt wSurvivorPercentage_From_txt
        {
            get
            {
                if ((this.mwSurvivorPercentage_From_txt == null))
                {
                    this.mwSurvivorPercentage_From_txt = new wSurvivorPercentage_From_txt(this);
                }
                return this.mwSurvivorPercentage_From_txt;
            }
        }
        
        public wSurvivorPercentage_To_txt wSurvivorPercentage_To_txt
        {
            get
            {
                if ((this.mwSurvivorPercentage_To_txt == null))
                {
                    this.mwSurvivorPercentage_To_txt = new wSurvivorPercentage_To_txt(this);
                }
                return this.mwSurvivorPercentage_To_txt;
            }
        }
        
        public wPopupAmount_From_VIcon wPopupAmount_From_VIcon
        {
            get
            {
                if ((this.mwPopupAmount_From_VIcon == null))
                {
                    this.mwPopupAmount_From_VIcon = new wPopupAmount_From_VIcon(this);
                }
                return this.mwPopupAmount_From_VIcon;
            }
        }
        
        public wPopupAmount_From_CIcon wPopupAmount_From_CIcon
        {
            get
            {
                if ((this.mwPopupAmount_From_CIcon == null))
                {
                    this.mwPopupAmount_From_CIcon = new wPopupAmount_From_CIcon(this);
                }
                return this.mwPopupAmount_From_CIcon;
            }
        }
        
        public wPopupAmount_To_VIcon wPopupAmount_To_VIcon
        {
            get
            {
                if ((this.mwPopupAmount_To_VIcon == null))
                {
                    this.mwPopupAmount_To_VIcon = new wPopupAmount_To_VIcon(this);
                }
                return this.mwPopupAmount_To_VIcon;
            }
        }
        
        public wPopupAmount_To_CIcon wPopupAmount_To_CIcon
        {
            get
            {
                if ((this.mwPopupAmount_To_CIcon == null))
                {
                    this.mwPopupAmount_To_CIcon = new wPopupAmount_To_CIcon(this);
                }
                return this.mwPopupAmount_To_CIcon;
            }
        }
        
        public wTabularOrConstantFactor_M_txt wTabularOrConstantFactor_M_txt
        {
            get
            {
                if ((this.mwTabularOrConstantFactor_M_txt == null))
                {
                    this.mwTabularOrConstantFactor_M_txt = new wTabularOrConstantFactor_M_txt(this);
                }
                return this.mwTabularOrConstantFactor_M_txt;
            }
        }
        
        public wTabularOrConstantFactor_F_txt wTabularOrConstantFactor_F_txt
        {
            get
            {
                if ((this.mwTabularOrConstantFactor_F_txt == null))
                {
                    this.mwTabularOrConstantFactor_F_txt = new wTabularOrConstantFactor_F_txt(this);
                }
                return this.mwTabularOrConstantFactor_F_txt;
            }
        }
        
        public wTabularOrConstantFactor_TIcon wTabularOrConstantFactor_TIcon
        {
            get
            {
                if ((this.mwTabularOrConstantFactor_TIcon == null))
                {
                    this.mwTabularOrConstantFactor_TIcon = new wTabularOrConstantFactor_TIcon(this);
                }
                return this.mwTabularOrConstantFactor_TIcon;
            }
        }
        
        public wTabularOrConstantFactor_cbo wTabularOrConstantFactor_cbo
        {
            get
            {
                if ((this.mwTabularOrConstantFactor_cbo == null))
                {
                    this.mwTabularOrConstantFactor_cbo = new wTabularOrConstantFactor_cbo(this);
                }
                return this.mwTabularOrConstantFactor_cbo;
            }
        }
        
        public wPresentValueFactor_BenefitCommencementAge_V wPresentValueFactor_BenefitCommencementAge_V
        {
            get
            {
                if ((this.mwPresentValueFactor_BenefitCommencementAge_V == null))
                {
                    this.mwPresentValueFactor_BenefitCommencementAge_V = new wPresentValueFactor_BenefitCommencementAge_V(this);
                }
                return this.mwPresentValueFactor_BenefitCommencementAge_V;
            }
        }
        
        public wApplyPercentMarriedAndSpouseAgeDifference wApplyPercentMarriedAndSpouseAgeDifference
        {
            get
            {
                if ((this.mwApplyPercentMarriedAndSpouseAgeDifference == null))
                {
                    this.mwApplyPercentMarriedAndSpouseAgeDifference = new wApplyPercentMarriedAndSpouseAgeDifference(this);
                }
                return this.mwApplyPercentMarriedAndSpouseAgeDifference;
            }
        }
        
        public wSurvivorPercentage_C wSurvivorPercentage_C
        {
            get
            {
                if ((this.mwSurvivorPercentage_C == null))
                {
                    this.mwSurvivorPercentage_C = new wSurvivorPercentage_C(this);
                }
                return this.mwSurvivorPercentage_C;
            }
        }
        
        public wSurvivorPercentage_txt wSurvivorPercentage_txt
        {
            get
            {
                if ((this.mwSurvivorPercentage_txt == null))
                {
                    this.mwSurvivorPercentage_txt = new wSurvivorPercentage_txt(this);
                }
                return this.mwSurvivorPercentage_txt;
            }
        }
        
        public wStartAge_C wStartAge_C
        {
            get
            {
                if ((this.mwStartAge_C == null))
                {
                    this.mwStartAge_C = new wStartAge_C(this);
                }
                return this.mwStartAge_C;
            }
        }
        
        public wStartAge_txt wStartAge_txt
        {
            get
            {
                if ((this.mwStartAge_txt == null))
                {
                    this.mwStartAge_txt = new wStartAge_txt(this);
                }
                return this.mwStartAge_txt;
            }
        }
        
        public wApplyDifferentStarta wApplyDifferentStarta
        {
            get
            {
                if ((this.mwApplyDifferentStarta == null))
                {
                    this.mwApplyDifferentStarta = new wApplyDifferentStarta(this);
                }
                return this.mwApplyDifferentStarta;
            }
        }
        
        public wGuaranteePeriod_txt wGuaranteePeriod_txt
        {
            get
            {
                if ((this.mwGuaranteePeriod_txt == null))
                {
                    this.mwGuaranteePeriod_txt = new wGuaranteePeriod_txt(this);
                }
                return this.mwGuaranteePeriod_txt;
            }
        }
        
        public wBenefitCommencementAge_C wBenefitCommencementAge_C
        {
            get
            {
                if ((this.mwBenefitCommencementAge_C == null))
                {
                    this.mwBenefitCommencementAge_C = new wBenefitCommencementAge_C(this);
                }
                return this.mwBenefitCommencementAge_C;
            }
        }
        
        public wBenefitCommencementAge_txt wBenefitCommencementAge_txt
        {
            get
            {
                if ((this.mwBenefitCommencementAge_txt == null))
                {
                    this.mwBenefitCommencementAge_txt = new wBenefitCommencementAge_txt(this);
                }
                return this.mwBenefitCommencementAge_txt;
            }
        }
        #endregion
        
        #region Fields
        private wStandard mwStandard;
        
        private wPresentValueFactor mwPresentValueFactor;
        
        private wTabularOrConstantFactor mwTabularOrConstantFactor;
        
        private wCustomCode mwCustomCode;
        
        private wFormOfPaymentType_From mwFormOfPaymentType_From;
        
        private wFormOfPaymentType_To mwFormOfPaymentType_To;
        
        private wGuaranteePeriod_From_VIcon mwGuaranteePeriod_From_VIcon;
        
        private wGuaranteePeriod_From_CIcon mwGuaranteePeriod_From_CIcon;
        
        private wGuaranteePeriod_To_VIcon mwGuaranteePeriod_To_VIcon;
        
        private wGuaranteePeriod_To_CIcon mwGuaranteePeriod_To_CIcon;
        
        private wBenefitCommenceAge_From_CIcon mwBenefitCommenceAge_From_CIcon;
        
        private wBenefitCommenceAge_To_CIcon mwBenefitCommenceAge_To_CIcon;
        
        private wSurvivorPercentage_From_VIcon mwSurvivorPercentage_From_VIcon;
        
        private wSurvivorPercentage_From_PercentIcon mwSurvivorPercentage_From_PercentIcon;
        
        private wMortalityInDeferralPeriod_From mwMortalityInDeferralPeriod_From;
        
        private wMortalityInDeferralPeriod_To mwMortalityInDeferralPeriod_To;
        
        private wNumberOfPaymentsPerYear_From_VIcon mwNumberOfPaymentsPerYear_From_VIcon;
        
        private wNumberOfPaymentsPerYear_From_CIcon mwNumberOfPaymentsPerYear_From_CIcon;
        
        private wBenefitStopAge_From_VIcon mwBenefitStopAge_From_VIcon;
        
        private wBenefitStopAge_From_CIcon mwBenefitStopAge_From_CIcon;
        
        private wBenefitCommenceAge_From_VIcon mwBenefitCommenceAge_From_VIcon;
        
        private wBenefitCommenceAge_To_VIcon mwBenefitCommenceAge_To_VIcon;
        
        private wBenefitStopAge_To_VIcon mwBenefitStopAge_To_VIcon;
        
        private wBenefitStopAge_To_CIcon mwBenefitStopAge_To_CIcon;
        
        private wNumberOfPaymentsPerYear_To_VIcon mwNumberOfPaymentsPerYear_To_VIcon;
        
        private wNumberOfPaymentsPerYear_To_CIcon mwNumberOfPaymentsPerYear_To_CIcon;
        
        private wActuarialEquivalence_From mwActuarialEquivalence_From;
        
        private wActuarialEquivalence_To mwActuarialEquivalence_To;
        
        private wApplySpouseAgeDifference_From mwApplySpouseAgeDifference_From;
        
        private wApplySpouseAgeDifference_To mwApplySpouseAgeDifference_To;
        
        private wCommonComboBox mwCommonComboBox;
        
        private wCommonTXT mwCommonTXT;
        
        private wSurvivorPercentage_To_VIcon mwSurvivorPercentage_To_VIcon;
        
        private wSurvivorPercentage_To_PercentIcon mwSurvivorPercentage_To_PercentIcon;
        
        private wSurvivorPercentage_From_txt mwSurvivorPercentage_From_txt;
        
        private wSurvivorPercentage_To_txt mwSurvivorPercentage_To_txt;
        
        private wPopupAmount_From_VIcon mwPopupAmount_From_VIcon;
        
        private wPopupAmount_From_CIcon mwPopupAmount_From_CIcon;
        
        private wPopupAmount_To_VIcon mwPopupAmount_To_VIcon;
        
        private wPopupAmount_To_CIcon mwPopupAmount_To_CIcon;
        
        private wTabularOrConstantFactor_M_txt mwTabularOrConstantFactor_M_txt;
        
        private wTabularOrConstantFactor_F_txt mwTabularOrConstantFactor_F_txt;
        
        private wTabularOrConstantFactor_TIcon mwTabularOrConstantFactor_TIcon;
        
        private wTabularOrConstantFactor_cbo mwTabularOrConstantFactor_cbo;
        
        private wPresentValueFactor_BenefitCommencementAge_V mwPresentValueFactor_BenefitCommencementAge_V;
        
        private wApplyPercentMarriedAndSpouseAgeDifference mwApplyPercentMarriedAndSpouseAgeDifference;
        
        private wSurvivorPercentage_C mwSurvivorPercentage_C;
        
        private wSurvivorPercentage_txt mwSurvivorPercentage_txt;
        
        private wStartAge_C mwStartAge_C;
        
        private wStartAge_txt mwStartAge_txt;
        
        private wApplyDifferentStarta mwApplyDifferentStarta;
        
        private wGuaranteePeriod_txt mwGuaranteePeriod_txt;
        
        private wBenefitCommencementAge_C mwBenefitCommencementAge_C;
        
        private wBenefitCommencementAge_txt mwBenefitCommencementAge_txt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStandard : WinWindow
    {
        
        public wStandard(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radStandardDefinition";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdStandard
        {
            get
            {
                if ((this.mrdStandard == null))
                {
                    this.mrdStandard = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdStandard.SearchProperties[WinRadioButton.PropertyNames.Name] = "Standard";
                    this.mrdStandard.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdStandard;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdStandard;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPresentValueFactor : WinWindow
    {
        
        public wPresentValueFactor(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radPresentValueFactor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPresentValueFactor
        {
            get
            {
                if ((this.mrdPresentValueFactor == null))
                {
                    this.mrdPresentValueFactor = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPresentValueFactor.SearchProperties[WinRadioButton.PropertyNames.Name] = "Present value factor";
                    this.mrdPresentValueFactor.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPresentValueFactor;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPresentValueFactor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTabularOrConstantFactor : WinWindow
    {
        
        public wTabularOrConstantFactor(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdTabularOrConstantFactor
        {
            get
            {
                if ((this.mrdTabularOrConstantFactor == null))
                {
                    this.mrdTabularOrConstantFactor = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdTabularOrConstantFactor.SearchProperties[WinRadioButton.PropertyNames.Name] = "Tabular or constant factor";
                    this.mrdTabularOrConstantFactor.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdTabularOrConstantFactor;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdTabularOrConstantFactor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCustomCode : WinWindow
    {
        
        public wCustomCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCustomCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCustomCode
        {
            get
            {
                if ((this.mrdCustomCode == null))
                {
                    this.mrdCustomCode = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCustomCode.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom code";
                    this.mrdCustomCode.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCustomCode;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCustomCode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFormOfPaymentType_From : WinWindow
    {
        
        public wFormOfPaymentType_From(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboFromFormOfPayment";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo_FormOfPaymentType_From
        {
            get
            {
                if ((this.mcbo_FormOfPaymentType_From == null))
                {
                    this.mcbo_FormOfPaymentType_From = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo_FormOfPaymentType_From.SearchProperties[WinComboBox.PropertyNames.Name] = "Guarantee period";
                    this.mcbo_FormOfPaymentType_From.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo_FormOfPaymentType_From;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo_FormOfPaymentType_From;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFormOfPaymentType_To : WinWindow
    {
        
        public wFormOfPaymentType_To(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboToFormOfPayment";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo_FormOfPaymentType_To
        {
            get
            {
                if ((this.mcbo_FormOfPaymentType_To == null))
                {
                    this.mcbo_FormOfPaymentType_To = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo_FormOfPaymentType_To.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo_FormOfPaymentType_To;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo_FormOfPaymentType_To;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGuaranteePeriod_From_VIcon : WinWindow
    {
        
        public wGuaranteePeriod_From_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnGuaranteePeriod_From_V
        {
            get
            {
                if ((this.mbtnGuaranteePeriod_From_V == null))
                {
                    this.mbtnGuaranteePeriod_From_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnGuaranteePeriod_From_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnGuaranteePeriod_From_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnGuaranteePeriod_From_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnGuaranteePeriod_From_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGuaranteePeriod_From_CIcon : WinWindow
    {
        
        public wGuaranteePeriod_From_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnGuaranteePeriod_From_C
        {
            get
            {
                if ((this.mbtnGuaranteePeriod_From_C == null))
                {
                    this.mbtnGuaranteePeriod_From_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnGuaranteePeriod_From_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnGuaranteePeriod_From_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnGuaranteePeriod_From_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnGuaranteePeriod_From_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGuaranteePeriod_To_VIcon : WinWindow
    {
        
        public wGuaranteePeriod_To_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnGuaranteePeriod_To_V
        {
            get
            {
                if ((this.mbtnGuaranteePeriod_To_V == null))
                {
                    this.mbtnGuaranteePeriod_To_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnGuaranteePeriod_To_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnGuaranteePeriod_To_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnGuaranteePeriod_To_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnGuaranteePeriod_To_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGuaranteePeriod_To_CIcon : WinWindow
    {
        
        public wGuaranteePeriod_To_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnGuaranteePeriod_To_C
        {
            get
            {
                if ((this.mbtnGuaranteePeriod_To_C == null))
                {
                    this.mbtnGuaranteePeriod_To_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnGuaranteePeriod_To_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnGuaranteePeriod_To_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnGuaranteePeriod_To_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnGuaranteePeriod_To_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitCommenceAge_From_CIcon : WinWindow
    {
        
        public wBenefitCommenceAge_From_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommenceAge_From_C
        {
            get
            {
                if ((this.mbtnBenefitCommenceAge_From_C == null))
                {
                    this.mbtnBenefitCommenceAge_From_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommenceAge_From_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnBenefitCommenceAge_From_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommenceAge_From_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommenceAge_From_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitCommenceAge_To_CIcon : WinWindow
    {
        
        public wBenefitCommenceAge_To_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommenceAge_To_C
        {
            get
            {
                if ((this.mbtnBenefitCommenceAge_To_C == null))
                {
                    this.mbtnBenefitCommenceAge_To_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommenceAge_To_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnBenefitCommenceAge_To_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommenceAge_To_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommenceAge_To_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_From_VIcon : WinWindow
    {
        
        public wSurvivorPercentage_From_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnSurvivorPercentage_From_V
        {
            get
            {
                if ((this.mbtnSurvivorPercentage_From_V == null))
                {
                    this.mbtnSurvivorPercentage_From_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnSurvivorPercentage_From_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnSurvivorPercentage_From_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnSurvivorPercentage_From_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnSurvivorPercentage_From_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_From_PercentIcon : WinWindow
    {
        
        public wSurvivorPercentage_From_PercentIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnSurvivorPercentage_From_Percent
        {
            get
            {
                if ((this.mbtnSurvivorPercentage_From_Percent == null))
                {
                    this.mbtnSurvivorPercentage_From_Percent = new WinButton(this);
                    #region Search Criteria
                    this.mbtnSurvivorPercentage_From_Percent.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtnSurvivorPercentage_From_Percent.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnSurvivorPercentage_From_Percent;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnSurvivorPercentage_From_Percent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortalityInDeferralPeriod_From : WinWindow
    {
        
        public wMortalityInDeferralPeriod_From(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbFromMortalityInDeferralPeriod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboMortalityInDeferralPeriod_From
        {
            get
            {
                if ((this.mcboMortalityInDeferralPeriod_From == null))
                {
                    this.mcboMortalityInDeferralPeriod_From = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboMortalityInDeferralPeriod_From.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboMortalityInDeferralPeriod_From;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboMortalityInDeferralPeriod_From;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortalityInDeferralPeriod_To : WinWindow
    {
        
        public wMortalityInDeferralPeriod_To(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbToMortalityInDeferralPeriod";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboMortalityInDeferralPeriod_To
        {
            get
            {
                if ((this.mcboMortalityInDeferralPeriod_To == null))
                {
                    this.mcboMortalityInDeferralPeriod_To = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboMortalityInDeferralPeriod_To.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboMortalityInDeferralPeriod_To;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboMortalityInDeferralPeriod_To;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNumberOfPaymentsPerYear_From_VIcon : WinWindow
    {
        
        public wNumberOfPaymentsPerYear_From_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnNumberOfPaymentsPerYear_From_V
        {
            get
            {
                if ((this.mbtnNumberOfPaymentsPerYear_From_V == null))
                {
                    this.mbtnNumberOfPaymentsPerYear_From_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnNumberOfPaymentsPerYear_From_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnNumberOfPaymentsPerYear_From_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnNumberOfPaymentsPerYear_From_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnNumberOfPaymentsPerYear_From_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNumberOfPaymentsPerYear_From_CIcon : WinWindow
    {
        
        public wNumberOfPaymentsPerYear_From_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnNumberOfPaymentsPerYear_From_C
        {
            get
            {
                if ((this.mbtnNumberOfPaymentsPerYear_From_C == null))
                {
                    this.mbtnNumberOfPaymentsPerYear_From_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnNumberOfPaymentsPerYear_From_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnNumberOfPaymentsPerYear_From_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnNumberOfPaymentsPerYear_From_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnNumberOfPaymentsPerYear_From_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitStopAge_From_VIcon : WinWindow
    {
        
        public wBenefitStopAge_From_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitStopAge_From_V
        {
            get
            {
                if ((this.mbtnBenefitStopAge_From_V == null))
                {
                    this.mbtnBenefitStopAge_From_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitStopAge_From_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnBenefitStopAge_From_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitStopAge_From_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitStopAge_From_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitStopAge_From_CIcon : WinWindow
    {
        
        public wBenefitStopAge_From_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitStopAge_From_C
        {
            get
            {
                if ((this.mbtnBenefitStopAge_From_C == null))
                {
                    this.mbtnBenefitStopAge_From_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitStopAge_From_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnBenefitStopAge_From_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitStopAge_From_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitStopAge_From_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitCommenceAge_From_VIcon : WinWindow
    {
        
        public wBenefitCommenceAge_From_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommenceAge_From_V
        {
            get
            {
                if ((this.mbtnBenefitCommenceAge_From_V == null))
                {
                    this.mbtnBenefitCommenceAge_From_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommenceAge_From_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnBenefitCommenceAge_From_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommenceAge_From_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommenceAge_From_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitCommenceAge_To_VIcon : WinWindow
    {
        
        public wBenefitCommenceAge_To_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommenceAge_To_V
        {
            get
            {
                if ((this.mbtnBenefitCommenceAge_To_V == null))
                {
                    this.mbtnBenefitCommenceAge_To_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommenceAge_To_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnBenefitCommenceAge_To_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommenceAge_To_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommenceAge_To_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitStopAge_To_VIcon : WinWindow
    {
        
        public wBenefitStopAge_To_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitStopAge_To_V
        {
            get
            {
                if ((this.mbtnBenefitStopAge_To_V == null))
                {
                    this.mbtnBenefitStopAge_To_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitStopAge_To_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnBenefitStopAge_To_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitStopAge_To_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitStopAge_To_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitStopAge_To_CIcon : WinWindow
    {
        
        public wBenefitStopAge_To_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitStopAge_To_C
        {
            get
            {
                if ((this.mbtnBenefitStopAge_To_C == null))
                {
                    this.mbtnBenefitStopAge_To_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitStopAge_To_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnBenefitStopAge_To_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitStopAge_To_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitStopAge_To_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNumberOfPaymentsPerYear_To_VIcon : WinWindow
    {
        
        public wNumberOfPaymentsPerYear_To_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnNumberOfPaymentsPerYear_To_V
        {
            get
            {
                if ((this.mbtnNumberOfPaymentsPerYear_To_V == null))
                {
                    this.mbtnNumberOfPaymentsPerYear_To_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnNumberOfPaymentsPerYear_To_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnNumberOfPaymentsPerYear_To_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnNumberOfPaymentsPerYear_To_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnNumberOfPaymentsPerYear_To_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNumberOfPaymentsPerYear_To_CIcon : WinWindow
    {
        
        public wNumberOfPaymentsPerYear_To_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnNumberOfPaymentsPerYear_To_C
        {
            get
            {
                if ((this.mbtnNumberOfPaymentsPerYear_To_C == null))
                {
                    this.mbtnNumberOfPaymentsPerYear_To_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnNumberOfPaymentsPerYear_To_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnNumberOfPaymentsPerYear_To_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnNumberOfPaymentsPerYear_To_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnNumberOfPaymentsPerYear_To_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActuarialEquivalence_From : WinWindow
    {
        
        public wActuarialEquivalence_From(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbFromActuarialEquivalenceBasis";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboActuarialEquivalence_From
        {
            get
            {
                if ((this.mcboActuarialEquivalence_From == null))
                {
                    this.mcboActuarialEquivalence_From = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboActuarialEquivalence_From.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboActuarialEquivalence_From;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboActuarialEquivalence_From;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActuarialEquivalence_To : WinWindow
    {
        
        public wActuarialEquivalence_To(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbToActuarialEquivalenceBasis";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboActuarialEquivalence_To
        {
            get
            {
                if ((this.mcboActuarialEquivalence_To == null))
                {
                    this.mcboActuarialEquivalence_To = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboActuarialEquivalence_To.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboActuarialEquivalence_To;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboActuarialEquivalence_To;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wApplySpouseAgeDifference_From : WinWindow
    {
        
        public wApplySpouseAgeDifference_From(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkApplySpouseAgeDifferenceFrom";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkApplySpouseAgeDifference_From
        {
            get
            {
                if ((this.mchkApplySpouseAgeDifference_From == null))
                {
                    this.mchkApplySpouseAgeDifference_From = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkApplySpouseAgeDifference_From.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply spouse age difference";
                    this.mchkApplySpouseAgeDifference_From.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkApplySpouseAgeDifference_From;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkApplySpouseAgeDifference_From;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wApplySpouseAgeDifference_To : WinWindow
    {
        
        public wApplySpouseAgeDifference_To(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkApplySpouseAgeDifferenceTo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkApplySpouseAgeDifference_To
        {
            get
            {
                if ((this.mchkApplySpouseAgeDifference_To == null))
                {
                    this.mchkApplySpouseAgeDifference_To = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkApplySpouseAgeDifference_To.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkApplySpouseAgeDifference_To;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkApplySpouseAgeDifference_To;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommonComboBox : WinWindow
    {
        
        public wCommonComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommonTXT : WinWindow
    {
        
        public wCommonTXT(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_To_VIcon : WinWindow
    {
        
        public wSurvivorPercentage_To_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnSurvivorPercentage_To_V
        {
            get
            {
                if ((this.mbtnSurvivorPercentage_To_V == null))
                {
                    this.mbtnSurvivorPercentage_To_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnSurvivorPercentage_To_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnSurvivorPercentage_To_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnSurvivorPercentage_To_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnSurvivorPercentage_To_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_To_PercentIcon : WinWindow
    {
        
        public wSurvivorPercentage_To_PercentIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnSurvivorPercentage_To_Percent
        {
            get
            {
                if ((this.mbtnSurvivorPercentage_To_Percent == null))
                {
                    this.mbtnSurvivorPercentage_To_Percent = new WinButton(this);
                    #region Search Criteria
                    this.mbtnSurvivorPercentage_To_Percent.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtnSurvivorPercentage_To_Percent.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnSurvivorPercentage_To_Percent;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnSurvivorPercentage_To_Percent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_From_txt : WinWindow
    {
        
        public wSurvivorPercentage_From_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtSurvivorPercentage_From txtSurvivorPercentage_From
        {
            get
            {
                if ((this.mtxtSurvivorPercentage_From == null))
                {
                    this.mtxtSurvivorPercentage_From = new txtSurvivorPercentage_From(this);
                }
                return this.mtxtSurvivorPercentage_From;
            }
        }
        #endregion
        
        #region Fields
        private txtSurvivorPercentage_From mtxtSurvivorPercentage_From;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtSurvivorPercentage_From : WinEdit
    {
        
        public txtSurvivorPercentage_From(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_To_txt : WinWindow
    {
        
        public wSurvivorPercentage_To_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtSurvivorPercentage_To txtSurvivorPercentage_To
        {
            get
            {
                if ((this.mtxtSurvivorPercentage_To == null))
                {
                    this.mtxtSurvivorPercentage_To = new txtSurvivorPercentage_To(this);
                }
                return this.mtxtSurvivorPercentage_To;
            }
        }
        #endregion
        
        #region Fields
        private txtSurvivorPercentage_To mtxtSurvivorPercentage_To;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtSurvivorPercentage_To : WinEdit
    {
        
        public txtSurvivorPercentage_To(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPopupAmount_From_VIcon : WinWindow
    {
        
        public wPopupAmount_From_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPopupAmount_From_V
        {
            get
            {
                if ((this.mbtnPopupAmount_From_V == null))
                {
                    this.mbtnPopupAmount_From_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPopupAmount_From_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnPopupAmount_From_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPopupAmount_From_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPopupAmount_From_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPopupAmount_From_CIcon : WinWindow
    {
        
        public wPopupAmount_From_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPopupAmount_From_C
        {
            get
            {
                if ((this.mbtnPopupAmount_From_C == null))
                {
                    this.mbtnPopupAmount_From_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPopupAmount_From_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnPopupAmount_From_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPopupAmount_From_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPopupAmount_From_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPopupAmount_To_VIcon : WinWindow
    {
        
        public wPopupAmount_To_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPopupAmount_To_V
        {
            get
            {
                if ((this.mbtnPopupAmount_To_V == null))
                {
                    this.mbtnPopupAmount_To_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPopupAmount_To_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnPopupAmount_To_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPopupAmount_To_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPopupAmount_To_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPopupAmount_To_CIcon : WinWindow
    {
        
        public wPopupAmount_To_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPopupAmount_To_C
        {
            get
            {
                if ((this.mbtnPopupAmount_To_C == null))
                {
                    this.mbtnPopupAmount_To_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPopupAmount_To_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnPopupAmount_To_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPopupAmount_To_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPopupAmount_To_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTabularOrConstantFactor_M_txt : WinWindow
    {
        
        public wTabularOrConstantFactor_M_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstantM";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTabularOrConstantFactor_M txtTabularOrConstantFactor_M
        {
            get
            {
                if ((this.mtxtTabularOrConstantFactor_M == null))
                {
                    this.mtxtTabularOrConstantFactor_M = new txtTabularOrConstantFactor_M(this);
                }
                return this.mtxtTabularOrConstantFactor_M;
            }
        }
        #endregion
        
        #region Fields
        private txtTabularOrConstantFactor_M mtxtTabularOrConstantFactor_M;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTabularOrConstantFactor_M : WinEdit
    {
        
        public txtTabularOrConstantFactor_M(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantMEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantMEdit1 == null))
                {
                    this.mUI_numEditConstantMEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantMEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantMEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantMEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantMEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTabularOrConstantFactor_F_txt : WinWindow
    {
        
        public wTabularOrConstantFactor_F_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstantF";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTabularOrConstantFactor_F txtTabularOrConstantFactor_F
        {
            get
            {
                if ((this.mtxtTabularOrConstantFactor_F == null))
                {
                    this.mtxtTabularOrConstantFactor_F = new txtTabularOrConstantFactor_F(this);
                }
                return this.mtxtTabularOrConstantFactor_F;
            }
        }
        #endregion
        
        #region Fields
        private txtTabularOrConstantFactor_F mtxtTabularOrConstantFactor_F;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTabularOrConstantFactor_F : WinEdit
    {
        
        public txtTabularOrConstantFactor_F(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantFEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantFEdit1 == null))
                {
                    this.mUI_numEditConstantFEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantFEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantFEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantFEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantFEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTabularOrConstantFactor_TIcon : WinWindow
    {
        
        public wTabularOrConstantFactor_TIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnT
        {
            get
            {
                if ((this.mbtnT == null))
                {
                    this.mbtnT = new WinButton(this);
                    #region Search Criteria
                    this.mbtnT.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtnT.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnT;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnT;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTabularOrConstantFactor_cbo : WinWindow
    {
        
        public wTabularOrConstantFactor_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboTabularOrConstantFactor
        {
            get
            {
                if ((this.mcboTabularOrConstantFactor == null))
                {
                    this.mcboTabularOrConstantFactor = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboTabularOrConstantFactor.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboTabularOrConstantFactor;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboTabularOrConstantFactor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPresentValueFactor_BenefitCommencementAge_V : WinWindow
    {
        
        public wPresentValueFactor_BenefitCommencementAge_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wApplyPercentMarriedAndSpouseAgeDifference : WinWindow
    {
        
        public wApplyPercentMarriedAndSpouseAgeDifference(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbApplyPercentMarriedAndSpouseAgeDifference";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Start age for post commencement mortality";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_C : WinWindow
    {
        
        public wSurvivorPercentage_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSurvivorPercentage_txt : WinWindow
    {
        
        public wSurvivorPercentage_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStartAge_C : WinWindow
    {
        
        public wStartAge_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStartAge_txt : WinWindow
    {
        
        public wStartAge_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wApplyDifferentStarta : WinWindow
    {
        
        public wApplyDifferentStarta(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkStartAge";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply different start age for post commencement mortality";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGuaranteePeriod_txt : WinWindow
    {
        
        public wGuaranteePeriod_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtGuaranteePeriod txtGuaranteePeriod
        {
            get
            {
                if ((this.mtxtGuaranteePeriod == null))
                {
                    this.mtxtGuaranteePeriod = new txtGuaranteePeriod(this);
                }
                return this.mtxtGuaranteePeriod;
            }
        }
        #endregion
        
        #region Fields
        private txtGuaranteePeriod mtxtGuaranteePeriod;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtGuaranteePeriod : WinEdit
    {
        
        public txtGuaranteePeriod(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtGuaranteePeriod_edit
        {
            get
            {
                if ((this.mtxtGuaranteePeriod_edit == null))
                {
                    this.mtxtGuaranteePeriod_edit = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtGuaranteePeriod_edit.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mtxtGuaranteePeriod_edit.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxtGuaranteePeriod_edit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtGuaranteePeriod_edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtGuaranteePeriod_edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitCommencementAge_C : WinWindow
    {
        
        public wBenefitCommencementAge_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommencementAge_C
        {
            get
            {
                if ((this.mbtnBenefitCommencementAge_C == null))
                {
                    this.mbtnBenefitCommencementAge_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommencementAge_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnBenefitCommencementAge_C.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mbtnBenefitCommencementAge_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommencementAge_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommencementAge_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wBenefitCommencementAge_txt : WinWindow
    {
        
        public wBenefitCommencementAge_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBenefitCommencementAge txtBenefitCommencementAge
        {
            get
            {
                if ((this.mtxtBenefitCommencementAge == null))
                {
                    this.mtxtBenefitCommencementAge = new txtBenefitCommencementAge(this);
                }
                return this.mtxtBenefitCommencementAge;
            }
        }
        #endregion
        
        #region Fields
        private txtBenefitCommencementAge mtxtBenefitCommencementAge;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBenefitCommencementAge : WinEdit
    {
        
        public txtBenefitCommencementAge(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit edit
        {
            get
            {
                if ((this.medit == null))
                {
                    this.medit = new WinEdit(this);
                    #region Search Criteria
                    this.medit.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.medit.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.medit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.medit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit medit;
        #endregion
    }
}
