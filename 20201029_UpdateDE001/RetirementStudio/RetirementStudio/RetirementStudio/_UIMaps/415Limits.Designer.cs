// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.Item415LimitsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class Item415Limits
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wStandard wStandard
        {
            get
            {
                if ((this.mwStandard == null))
                {
                    this.mwStandard = new wStandard(this);
                }
                return this.mwStandard;
            }
        }
        
        public wCustomCode wCustomCode
        {
            get
            {
                if ((this.mwCustomCode == null))
                {
                    this.mwCustomCode = new wCustomCode(this);
                }
                return this.mwCustomCode;
            }
        }
        
        public wDeterminLimitBasedOn wDeterminLimitBasedOn
        {
            get
            {
                if ((this.mwDeterminLimitBasedOn == null))
                {
                    this.mwDeterminLimitBasedOn = new wDeterminLimitBasedOn(this);
                }
                return this.mwDeterminLimitBasedOn;
            }
        }
        
        public wDeterminLimitBasedOn_Year wDeterminLimitBasedOn_Year
        {
            get
            {
                if ((this.mwDeterminLimitBasedOn_Year == null))
                {
                    this.mwDeterminLimitBasedOn_Year = new wDeterminLimitBasedOn_Year(this);
                }
                return this.mwDeterminLimitBasedOn_Year;
            }
        }
        
        public wIncreaseAppliesUntil wIncreaseAppliesUntil
        {
            get
            {
                if ((this.mwIncreaseAppliesUntil == null))
                {
                    this.mwIncreaseAppliesUntil = new wIncreaseAppliesUntil(this);
                }
                return this.mwIncreaseAppliesUntil;
            }
        }
        
        public wBenefitCommenceAge_VIcon wBenefitCommenceAge_VIcon
        {
            get
            {
                if ((this.mwBenefitCommenceAge_VIcon == null))
                {
                    this.mwBenefitCommenceAge_VIcon = new wBenefitCommenceAge_VIcon(this);
                }
                return this.mwBenefitCommenceAge_VIcon;
            }
        }
        
        public wBenefitCommenceAge_CIcon wBenefitCommenceAge_CIcon
        {
            get
            {
                if ((this.mwBenefitCommenceAge_CIcon == null))
                {
                    this.mwBenefitCommenceAge_CIcon = new wBenefitCommenceAge_CIcon(this);
                }
                return this.mwBenefitCommenceAge_CIcon;
            }
        }
        
        public wCommonTXT wCommonTXT
        {
            get
            {
                if ((this.mwCommonTXT == null))
                {
                    this.mwCommonTXT = new wCommonTXT(this);
                }
                return this.mwCommonTXT;
            }
        }
        
        public wCommonComboBox wCommonComboBox
        {
            get
            {
                if ((this.mwCommonComboBox == null))
                {
                    this.mwCommonComboBox = new wCommonComboBox(this);
                }
                return this.mwCommonComboBox;
            }
        }
        
        public wPlanNormalFromStopAge_VIcon wPlanNormalFromStopAge_VIcon
        {
            get
            {
                if ((this.mwPlanNormalFromStopAge_VIcon == null))
                {
                    this.mwPlanNormalFromStopAge_VIcon = new wPlanNormalFromStopAge_VIcon(this);
                }
                return this.mwPlanNormalFromStopAge_VIcon;
            }
        }
        
        public wPlanNormalFromStopAge_CIcon wPlanNormalFromStopAge_CIcon
        {
            get
            {
                if ((this.mwPlanNormalFromStopAge_CIcon == null))
                {
                    this.mwPlanNormalFromStopAge_CIcon = new wPlanNormalFromStopAge_CIcon(this);
                }
                return this.mwPlanNormalFromStopAge_CIcon;
            }
        }
        
        public w415LimitFormStopAge_VIcon w415LimitFormStopAge_VIcon
        {
            get
            {
                if ((this.mw415LimitFormStopAge_VIcon == null))
                {
                    this.mw415LimitFormStopAge_VIcon = new w415LimitFormStopAge_VIcon(this);
                }
                return this.mw415LimitFormStopAge_VIcon;
            }
        }
        
        public w415LimitFormStopAge_CIcon w415LimitFormStopAge_CIcon
        {
            get
            {
                if ((this.mw415LimitFormStopAge_CIcon == null))
                {
                    this.mw415LimitFormStopAge_CIcon = new w415LimitFormStopAge_CIcon(this);
                }
                return this.mw415LimitFormStopAge_CIcon;
            }
        }
        
        public wEarlyRetirementFator wEarlyRetirementFator
        {
            get
            {
                if ((this.mwEarlyRetirementFator == null))
                {
                    this.mwEarlyRetirementFator = new wEarlyRetirementFator(this);
                }
                return this.mwEarlyRetirementFator;
            }
        }
        
        public wLateRetirementFactor wLateRetirementFactor
        {
            get
            {
                if ((this.mwLateRetirementFactor == null))
                {
                    this.mwLateRetirementFactor = new wLateRetirementFactor(this);
                }
                return this.mwLateRetirementFactor;
            }
        }
        
        public wPlanNormalFormOfPayment wPlanNormalFormOfPayment
        {
            get
            {
                if ((this.mwPlanNormalFormOfPayment == null))
                {
                    this.mwPlanNormalFormOfPayment = new wPlanNormalFormOfPayment(this);
                }
                return this.mwPlanNormalFormOfPayment;
            }
        }
        
        public wConversionFactorNormalFromToStraightLife wConversionFactorNormalFromToStraightLife
        {
            get
            {
                if ((this.mwConversionFactorNormalFromToStraightLife == null))
                {
                    this.mwConversionFactorNormalFromToStraightLife = new wConversionFactorNormalFromToStraightLife(this);
                }
                return this.mwConversionFactorNormalFromToStraightLife;
            }
        }
        
        public wPlanActuarialEquivalence wPlanActuarialEquivalence
        {
            get
            {
                if ((this.mwPlanActuarialEquivalence == null))
                {
                    this.mwPlanActuarialEquivalence = new wPlanActuarialEquivalence(this);
                }
                return this.mwPlanActuarialEquivalence;
            }
        }
        
        public w415LimitFormOfPayement w415LimitFormOfPayement
        {
            get
            {
                if ((this.mw415LimitFormOfPayement == null))
                {
                    this.mw415LimitFormOfPayement = new w415LimitFormOfPayement(this);
                }
                return this.mw415LimitFormOfPayement;
            }
        }
        
        public wConversionFactorNormalFromTo415Limit wConversionFactorNormalFromTo415Limit
        {
            get
            {
                if ((this.mwConversionFactorNormalFromTo415Limit == null))
                {
                    this.mwConversionFactorNormalFromTo415Limit = new wConversionFactorNormalFromTo415Limit(this);
                }
                return this.mwConversionFactorNormalFromTo415Limit;
            }
        }
        
        public wParticipationService wParticipationService
        {
            get
            {
                if ((this.mwParticipationService == null))
                {
                    this.mwParticipationService = new wParticipationService(this);
                }
                return this.mwParticipationService;
            }
        }
        
        public wMandatoryEmployeeContribution wMandatoryEmployeeContribution
        {
            get
            {
                if ((this.mwMandatoryEmployeeContribution == null))
                {
                    this.mwMandatoryEmployeeContribution = new wMandatoryEmployeeContribution(this);
                }
                return this.mwMandatoryEmployeeContribution;
            }
        }
        
        public wProjectedPayForAlternative wProjectedPayForAlternative
        {
            get
            {
                if ((this.mwProjectedPayForAlternative == null))
                {
                    this.mwProjectedPayForAlternative = new wProjectedPayForAlternative(this);
                }
                return this.mwProjectedPayForAlternative;
            }
        }
        
        public wEmploymentService wEmploymentService
        {
            get
            {
                if ((this.mwEmploymentService == null))
                {
                    this.mwEmploymentService = new wEmploymentService(this);
                }
                return this.mwEmploymentService;
            }
        }
        #endregion
        
        #region Fields
        private wStandard mwStandard;
        
        private wCustomCode mwCustomCode;
        
        private wDeterminLimitBasedOn mwDeterminLimitBasedOn;
        
        private wDeterminLimitBasedOn_Year mwDeterminLimitBasedOn_Year;
        
        private wIncreaseAppliesUntil mwIncreaseAppliesUntil;
        
        private wBenefitCommenceAge_VIcon mwBenefitCommenceAge_VIcon;
        
        private wBenefitCommenceAge_CIcon mwBenefitCommenceAge_CIcon;
        
        private wCommonTXT mwCommonTXT;
        
        private wCommonComboBox mwCommonComboBox;
        
        private wPlanNormalFromStopAge_VIcon mwPlanNormalFromStopAge_VIcon;
        
        private wPlanNormalFromStopAge_CIcon mwPlanNormalFromStopAge_CIcon;
        
        private w415LimitFormStopAge_VIcon mw415LimitFormStopAge_VIcon;
        
        private w415LimitFormStopAge_CIcon mw415LimitFormStopAge_CIcon;
        
        private wEarlyRetirementFator mwEarlyRetirementFator;
        
        private wLateRetirementFactor mwLateRetirementFactor;
        
        private wPlanNormalFormOfPayment mwPlanNormalFormOfPayment;
        
        private wConversionFactorNormalFromToStraightLife mwConversionFactorNormalFromToStraightLife;
        
        private wPlanActuarialEquivalence mwPlanActuarialEquivalence;
        
        private w415LimitFormOfPayement mw415LimitFormOfPayement;
        
        private wConversionFactorNormalFromTo415Limit mwConversionFactorNormalFromTo415Limit;
        
        private wParticipationService mwParticipationService;
        
        private wMandatoryEmployeeContribution mwMandatoryEmployeeContribution;
        
        private wProjectedPayForAlternative mwProjectedPayForAlternative;
        
        private wEmploymentService mwEmploymentService;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wStandard : WinWindow
    {
        
        public wStandard(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radStandard";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdStandard
        {
            get
            {
                if ((this.mrdStandard == null))
                {
                    this.mrdStandard = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdStandard.SearchProperties[WinRadioButton.PropertyNames.Name] = "Standard";
                    this.mrdStandard.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdStandard;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdStandard;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wCustomCode : WinWindow
    {
        
        public wCustomCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCustomCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCustomCode
        {
            get
            {
                if ((this.mrdCustomCode == null))
                {
                    this.mrdCustomCode = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCustomCode.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom code";
                    this.mrdCustomCode.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCustomCode;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCustomCode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wDeterminLimitBasedOn : WinWindow
    {
        
        public wDeterminLimitBasedOn(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboValuationYearPlus";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboDeterminLimitBasedOn
        {
            get
            {
                if ((this.mcboDeterminLimitBasedOn == null))
                {
                    this.mcboDeterminLimitBasedOn = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboDeterminLimitBasedOn.SearchProperties[WinComboBox.PropertyNames.Name] = "Determine limit based on";
                    this.mcboDeterminLimitBasedOn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboDeterminLimitBasedOn;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboDeterminLimitBasedOn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wDeterminLimitBasedOn_Year : WinWindow
    {
        
        public wDeterminLimitBasedOn_Year(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudYearSpecified";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtDeterminLimitBasedOn_Year txtDeterminLimitBasedOn_Year
        {
            get
            {
                if ((this.mtxtDeterminLimitBasedOn_Year == null))
                {
                    this.mtxtDeterminLimitBasedOn_Year = new txtDeterminLimitBasedOn_Year(this);
                }
                return this.mtxtDeterminLimitBasedOn_Year;
            }
        }
        #endregion
        
        #region Fields
        private txtDeterminLimitBasedOn_Year mtxtDeterminLimitBasedOn_Year;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class txtDeterminLimitBasedOn_Year : WinEdit
    {
        
        public txtDeterminLimitBasedOn_Year(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudYearSpecifiedEdit1
        {
            get
            {
                if ((this.mUINudYearSpecifiedEdit1 == null))
                {
                    this.mUINudYearSpecifiedEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudYearSpecifiedEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudYearSpecifiedEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudYearSpecifiedEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudYearSpecifiedEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wIncreaseAppliesUntil : WinWindow
    {
        
        public wIncreaseAppliesUntil(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbolIncreaseAppliesUntil";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboIncreaseAppliesUntil
        {
            get
            {
                if ((this.mcboIncreaseAppliesUntil == null))
                {
                    this.mcboIncreaseAppliesUntil = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboIncreaseAppliesUntil.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboIncreaseAppliesUntil;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboIncreaseAppliesUntil;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wBenefitCommenceAge_VIcon : WinWindow
    {
        
        public wBenefitCommenceAge_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommenceAge_V
        {
            get
            {
                if ((this.mbtnBenefitCommenceAge_V == null))
                {
                    this.mbtnBenefitCommenceAge_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommenceAge_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnBenefitCommenceAge_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommenceAge_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommenceAge_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wBenefitCommenceAge_CIcon : WinWindow
    {
        
        public wBenefitCommenceAge_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnBenefitCommenceAge_C
        {
            get
            {
                if ((this.mbtnBenefitCommenceAge_C == null))
                {
                    this.mbtnBenefitCommenceAge_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnBenefitCommenceAge_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnBenefitCommenceAge_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnBenefitCommenceAge_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnBenefitCommenceAge_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wCommonTXT : WinWindow
    {
        
        public wCommonTXT(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wCommonComboBox : WinWindow
    {
        
        public wCommonComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wPlanNormalFromStopAge_VIcon : WinWindow
    {
        
        public wPlanNormalFromStopAge_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPlanNormalFromStopAge_V
        {
            get
            {
                if ((this.mbtnPlanNormalFromStopAge_V == null))
                {
                    this.mbtnPlanNormalFromStopAge_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPlanNormalFromStopAge_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtnPlanNormalFromStopAge_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPlanNormalFromStopAge_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPlanNormalFromStopAge_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wPlanNormalFromStopAge_CIcon : WinWindow
    {
        
        public wPlanNormalFromStopAge_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPlanNormalFromStopAge_C
        {
            get
            {
                if ((this.mbtnPlanNormalFromStopAge_C == null))
                {
                    this.mbtnPlanNormalFromStopAge_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPlanNormalFromStopAge_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtnPlanNormalFromStopAge_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPlanNormalFromStopAge_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPlanNormalFromStopAge_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class w415LimitFormStopAge_VIcon : WinWindow
    {
        
        public w415LimitFormStopAge_VIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn415LimitFormStopAge_V
        {
            get
            {
                if ((this.mbtn415LimitFormStopAge_V == null))
                {
                    this.mbtn415LimitFormStopAge_V = new WinButton(this);
                    #region Search Criteria
                    this.mbtn415LimitFormStopAge_V.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn415LimitFormStopAge_V.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn415LimitFormStopAge_V;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn415LimitFormStopAge_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class w415LimitFormStopAge_CIcon : WinWindow
    {
        
        public w415LimitFormStopAge_CIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn415LimitFormStopAge_C
        {
            get
            {
                if ((this.mbtn415LimitFormStopAge_C == null))
                {
                    this.mbtn415LimitFormStopAge_C = new WinButton(this);
                    #region Search Criteria
                    this.mbtn415LimitFormStopAge_C.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn415LimitFormStopAge_C.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn415LimitFormStopAge_C;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn415LimitFormStopAge_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wEarlyRetirementFator : WinWindow
    {
        
        public wEarlyRetirementFator(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboEarlyRetirementFactor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboEarlyRetirementFator
        {
            get
            {
                if ((this.mcboEarlyRetirementFator == null))
                {
                    this.mcboEarlyRetirementFator = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboEarlyRetirementFator.SearchProperties[WinComboBox.PropertyNames.Name] = "Increase applies until";
                    this.mcboEarlyRetirementFator.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboEarlyRetirementFator;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboEarlyRetirementFator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wLateRetirementFactor : WinWindow
    {
        
        public wLateRetirementFactor(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboLateRetirementFactor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboLateRetirementFactor
        {
            get
            {
                if ((this.mcboLateRetirementFactor == null))
                {
                    this.mcboLateRetirementFactor = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboLateRetirementFactor.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboLateRetirementFactor;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboLateRetirementFactor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wPlanNormalFormOfPayment : WinWindow
    {
        
        public wPlanNormalFormOfPayment(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboNormalFormOfPay";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboPlanNormalFormOfPayment
        {
            get
            {
                if ((this.mcboPlanNormalFormOfPayment == null))
                {
                    this.mcboPlanNormalFormOfPayment = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboPlanNormalFormOfPayment.SearchProperties[WinComboBox.PropertyNames.Name] = "Plan\'s normal form of payment";
                    this.mcboPlanNormalFormOfPayment.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboPlanNormalFormOfPayment;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboPlanNormalFormOfPayment;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wConversionFactorNormalFromToStraightLife : WinWindow
    {
        
        public wConversionFactorNormalFromToStraightLife(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboConversionFactorStraightLife";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboConversionFactorNormalFromToStraightLife
        {
            get
            {
                if ((this.mcboConversionFactorNormalFromToStraightLife == null))
                {
                    this.mcboConversionFactorNormalFromToStraightLife = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboConversionFactorNormalFromToStraightLife.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboConversionFactorNormalFromToStraightLife;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboConversionFactorNormalFromToStraightLife;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wPlanActuarialEquivalence : WinWindow
    {
        
        public wPlanActuarialEquivalence(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboActuarialEquivalence";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboPlanActuarialEquivalence
        {
            get
            {
                if ((this.mcboPlanActuarialEquivalence == null))
                {
                    this.mcboPlanActuarialEquivalence = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboPlanActuarialEquivalence.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboPlanActuarialEquivalence;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboPlanActuarialEquivalence;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class w415LimitFormOfPayement : WinWindow
    {
        
        public w415LimitFormOfPayement(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbo415LimitFormOfPayment";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo415LimitFormOfPayement
        {
            get
            {
                if ((this.mcbo415LimitFormOfPayement == null))
                {
                    this.mcbo415LimitFormOfPayement = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo415LimitFormOfPayement.SearchProperties[WinComboBox.PropertyNames.Name] = "Plan\'s actuarial equivalence";
                    this.mcbo415LimitFormOfPayement.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo415LimitFormOfPayement;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo415LimitFormOfPayement;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wConversionFactorNormalFromTo415Limit : WinWindow
    {
        
        public wConversionFactorNormalFromTo415Limit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboConversionFactor415Form";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboConversionFactorNormalFromTo415Limit
        {
            get
            {
                if ((this.mcboConversionFactorNormalFromTo415Limit == null))
                {
                    this.mcboConversionFactorNormalFromTo415Limit = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboConversionFactorNormalFromTo415Limit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboConversionFactorNormalFromTo415Limit;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboConversionFactorNormalFromTo415Limit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wParticipationService : WinWindow
    {
        
        public wParticipationService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboParticipationService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboParticipationService
        {
            get
            {
                if ((this.mcboParticipationService == null))
                {
                    this.mcboParticipationService = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboParticipationService.SearchProperties[WinComboBox.PropertyNames.Name] = "Participation service";
                    this.mcboParticipationService.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboParticipationService;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboParticipationService;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wMandatoryEmployeeContribution : WinWindow
    {
        
        public wMandatoryEmployeeContribution(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboEmployeeContribution";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboMandatoryEmployeeContribution
        {
            get
            {
                if ((this.mcboMandatoryEmployeeContribution == null))
                {
                    this.mcboMandatoryEmployeeContribution = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboMandatoryEmployeeContribution.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboMandatoryEmployeeContribution;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboMandatoryEmployeeContribution;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wProjectedPayForAlternative : WinWindow
    {
        
        public wProjectedPayForAlternative(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboProjectedSalary";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboProjectedPayForAlternative
        {
            get
            {
                if ((this.mcboProjectedPayForAlternative == null))
                {
                    this.mcboProjectedPayForAlternative = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboProjectedPayForAlternative.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboProjectedPayForAlternative;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboProjectedPayForAlternative;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class wEmploymentService : WinWindow
    {
        
        public wEmploymentService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboEmploymentService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboEmploymentService
        {
            get
            {
                if ((this.mcboEmploymentService == null))
                {
                    this.mcboEmploymentService = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboEmploymentService.SearchProperties[WinComboBox.PropertyNames.Name] = "Mandatory employee contribution account balance";
                    this.mcboEmploymentService.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboEmploymentService;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboEmploymentService;
        #endregion
    }
}
