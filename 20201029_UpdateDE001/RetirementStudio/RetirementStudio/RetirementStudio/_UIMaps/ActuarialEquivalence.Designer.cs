// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.ActuarialEquivalenceClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class ActuarialEquivalence
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wInterestRate_txt wInterestRate_txt
        {
            get
            {
                if ((this.mwInterestRate_txt == null))
                {
                    this.mwInterestRate_txt = new wInterestRate_txt(this);
                }
                return this.mwInterestRate_txt;
            }
        }
        
        public wMortality wMortality
        {
            get
            {
                if ((this.mwMortality == null))
                {
                    this.mwMortality = new wMortality(this);
                }
                return this.mwMortality;
            }
        }
        
        public wValuationInterest wValuationInterest
        {
            get
            {
                if ((this.mwValuationInterest == null))
                {
                    this.mwValuationInterest = new wValuationInterest(this);
                }
                return this.mwValuationInterest;
            }
        }
        
        public wValuationMortality wValuationMortality
        {
            get
            {
                if ((this.mwValuationMortality == null))
                {
                    this.mwValuationMortality = new wValuationMortality(this);
                }
                return this.mwValuationMortality;
            }
        }
        
        public wValuationCOLA wValuationCOLA
        {
            get
            {
                if ((this.mwValuationCOLA == null))
                {
                    this.mwValuationCOLA = new wValuationCOLA(this);
                }
                return this.mwValuationCOLA;
            }
        }
        
        public wValuationSpouseAgeDiff wValuationSpouseAgeDiff
        {
            get
            {
                if ((this.mwValuationSpouseAgeDiff == null))
                {
                    this.mwValuationSpouseAgeDiff = new wValuationSpouseAgeDiff(this);
                }
                return this.mwValuationSpouseAgeDiff;
            }
        }
        
        public wCostOfLivingIncrease_cbo wCostOfLivingIncrease_cbo
        {
            get
            {
                if ((this.mwCostOfLivingIncrease_cbo == null))
                {
                    this.mwCostOfLivingIncrease_cbo = new wCostOfLivingIncrease_cbo(this);
                }
                return this.mwCostOfLivingIncrease_cbo;
            }
        }
        
        public wCostOfLivingIncrease_V wCostOfLivingIncrease_V
        {
            get
            {
                if ((this.mwCostOfLivingIncrease_V == null))
                {
                    this.mwCostOfLivingIncrease_V = new wCostOfLivingIncrease_V(this);
                }
                return this.mwCostOfLivingIncrease_V;
            }
        }
        
        public wValuationPercentMarried wValuationPercentMarried
        {
            get
            {
                if ((this.mwValuationPercentMarried == null))
                {
                    this.mwValuationPercentMarried = new wValuationPercentMarried(this);
                }
                return this.mwValuationPercentMarried;
            }
        }
        
        public wComm_P_txt wComm_P_txt
        {
            get
            {
                if ((this.mwComm_P_txt == null))
                {
                    this.mwComm_P_txt = new wComm_P_txt(this);
                }
                return this.mwComm_P_txt;
            }
        }
        
        public wComm_T_cbo wComm_T_cbo
        {
            get
            {
                if ((this.mwComm_T_cbo == null))
                {
                    this.mwComm_T_cbo = new wComm_T_cbo(this);
                }
                return this.mwComm_T_cbo;
            }
        }
        
        public wInterestRate_P wInterestRate_P
        {
            get
            {
                if ((this.mwInterestRate_P == null))
                {
                    this.mwInterestRate_P = new wInterestRate_P(this);
                }
                return this.mwInterestRate_P;
            }
        }
        
        public wCostOfLivingIncrease_P wCostOfLivingIncrease_P
        {
            get
            {
                if ((this.mwCostOfLivingIncrease_P == null))
                {
                    this.mwCostOfLivingIncrease_P = new wCostOfLivingIncrease_P(this);
                }
                return this.mwCostOfLivingIncrease_P;
            }
        }
        
        public wPercentMarried_T wPercentMarried_T
        {
            get
            {
                if ((this.mwPercentMarried_T == null))
                {
                    this.mwPercentMarried_T = new wPercentMarried_T(this);
                }
                return this.mwPercentMarried_T;
            }
        }
        
        public wDifferenceInSpousesAge_T wDifferenceInSpousesAge_T
        {
            get
            {
                if ((this.mwDifferenceInSpousesAge_T == null))
                {
                    this.mwDifferenceInSpousesAge_T = new wDifferenceInSpousesAge_T(this);
                }
                return this.mwDifferenceInSpousesAge_T;
            }
        }
        
        public wPrepostcommencement wPrepostcommencement
        {
            get
            {
                if ((this.mwPrepostcommencement == null))
                {
                    this.mwPrepostcommencement = new wPrepostcommencement(this);
                }
                return this.mwPrepostcommencement;
            }
        }
        
        public wPre_V wPre_V
        {
            get
            {
                if ((this.mwPre_V == null))
                {
                    this.mwPre_V = new wPre_V(this);
                }
                return this.mwPre_V;
            }
        }
        
        public wPre_P wPre_P
        {
            get
            {
                if ((this.mwPre_P == null))
                {
                    this.mwPre_P = new wPre_P(this);
                }
                return this.mwPre_P;
            }
        }
        
        public wComm_V wComm_V
        {
            get
            {
                if ((this.mwComm_V == null))
                {
                    this.mwComm_V = new wComm_V(this);
                }
                return this.mwComm_V;
            }
        }
        
        public wPost_V wPost_V
        {
            get
            {
                if ((this.mwPost_V == null))
                {
                    this.mwPost_V = new wPost_V(this);
                }
                return this.mwPost_V;
            }
        }
        
        public wPost_P wPost_P
        {
            get
            {
                if ((this.mwPost_P == null))
                {
                    this.mwPost_P = new wPost_P(this);
                }
                return this.mwPost_P;
            }
        }
        
        public wCost_V wCost_V
        {
            get
            {
                if ((this.mwCost_V == null))
                {
                    this.mwCost_V = new wCost_V(this);
                }
                return this.mwCost_V;
            }
        }
        
        public wCost_P wCost_P
        {
            get
            {
                if ((this.mwCost_P == null))
                {
                    this.mwCost_P = new wCost_P(this);
                }
                return this.mwCost_P;
            }
        }
        
        public wInterestRate_PrescribedRates wInterestRate_PrescribedRates
        {
            get
            {
                if ((this.mwInterestRate_PrescribedRates == null))
                {
                    this.mwInterestRate_PrescribedRates = new wInterestRate_PrescribedRates(this);
                }
                return this.mwInterestRate_PrescribedRates;
            }
        }
        
        public wInterest_AsOfDate wInterest_AsOfDate
        {
            get
            {
                if ((this.mwInterest_AsOfDate == null))
                {
                    this.mwInterest_AsOfDate = new wInterest_AsOfDate(this);
                }
                return this.mwInterest_AsOfDate;
            }
        }
        
        public wMortality_PrescribedRates wMortality_PrescribedRates
        {
            get
            {
                if ((this.mwMortality_PrescribedRates == null))
                {
                    this.mwMortality_PrescribedRates = new wMortality_PrescribedRates(this);
                }
                return this.mwMortality_PrescribedRates;
            }
        }
        
        public wMortality_DisabledvsHealthy wMortality_DisabledvsHealthy
        {
            get
            {
                if ((this.mwMortality_DisabledvsHealthy == null))
                {
                    this.mwMortality_DisabledvsHealthy = new wMortality_DisabledvsHealthy(this);
                }
                return this.mwMortality_DisabledvsHealthy;
            }
        }
        
        public wSpotRateApplication wSpotRateApplication
        {
            get
            {
                if ((this.mwSpotRateApplication == null))
                {
                    this.mwSpotRateApplication = new wSpotRateApplication(this);
                }
                return this.mwSpotRateApplication;
            }
        }
        
        public wMortality_cbo_3 wMortality_cbo_3
        {
            get
            {
                if ((this.mwMortality_cbo_3 == null))
                {
                    this.mwMortality_cbo_3 = new wMortality_cbo_3(this);
                }
                return this.mwMortality_cbo_3;
            }
        }
        
        public wProjectionScale wProjectionScale
        {
            get
            {
                if ((this.mwProjectionScale == null))
                {
                    this.mwProjectionScale = new wProjectionScale(this);
                }
                return this.mwProjectionScale;
            }
        }
        
        public wInterestRate_cbo wInterestRate_cbo
        {
            get
            {
                if ((this.mwInterestRate_cbo == null))
                {
                    this.mwInterestRate_cbo = new wInterestRate_cbo(this);
                }
                return this.mwInterestRate_cbo;
            }
        }
        
        public wInterestRate_SameStructureForAllPeriod wInterestRate_SameStructureForAllPeriod
        {
            get
            {
                if ((this.mwInterestRate_SameStructureForAllPeriod == null))
                {
                    this.mwInterestRate_SameStructureForAllPeriod = new wInterestRate_SameStructureForAllPeriod(this);
                }
                return this.mwInterestRate_SameStructureForAllPeriod;
            }
        }
        
        public wMortalitySameStructureForAllPeriod wMortalitySameStructureForAllPeriod
        {
            get
            {
                if ((this.mwMortalitySameStructureForAllPeriod == null))
                {
                    this.mwMortalitySameStructureForAllPeriod = new wMortalitySameStructureForAllPeriod(this);
                }
                return this.mwMortalitySameStructureForAllPeriod;
            }
        }
        #endregion
        
        #region Fields
        private wInterestRate_txt mwInterestRate_txt;
        
        private wMortality mwMortality;
        
        private wValuationInterest mwValuationInterest;
        
        private wValuationMortality mwValuationMortality;
        
        private wValuationCOLA mwValuationCOLA;
        
        private wValuationSpouseAgeDiff mwValuationSpouseAgeDiff;
        
        private wCostOfLivingIncrease_cbo mwCostOfLivingIncrease_cbo;
        
        private wCostOfLivingIncrease_V mwCostOfLivingIncrease_V;
        
        private wValuationPercentMarried mwValuationPercentMarried;
        
        private wComm_P_txt mwComm_P_txt;
        
        private wComm_T_cbo mwComm_T_cbo;
        
        private wInterestRate_P mwInterestRate_P;
        
        private wCostOfLivingIncrease_P mwCostOfLivingIncrease_P;
        
        private wPercentMarried_T mwPercentMarried_T;
        
        private wDifferenceInSpousesAge_T mwDifferenceInSpousesAge_T;
        
        private wPrepostcommencement mwPrepostcommencement;
        
        private wPre_V mwPre_V;
        
        private wPre_P mwPre_P;
        
        private wComm_V mwComm_V;
        
        private wPost_V mwPost_V;
        
        private wPost_P mwPost_P;
        
        private wCost_V mwCost_V;
        
        private wCost_P mwCost_P;
        
        private wInterestRate_PrescribedRates mwInterestRate_PrescribedRates;
        
        private wInterest_AsOfDate mwInterest_AsOfDate;
        
        private wMortality_PrescribedRates mwMortality_PrescribedRates;
        
        private wMortality_DisabledvsHealthy mwMortality_DisabledvsHealthy;
        
        private wSpotRateApplication mwSpotRateApplication;
        
        private wMortality_cbo_3 mwMortality_cbo_3;
        
        private wProjectionScale mwProjectionScale;
        
        private wInterestRate_cbo mwInterestRate_cbo;
        
        private wInterestRate_SameStructureForAllPeriod mwInterestRate_SameStructureForAllPeriod;
        
        private wMortalitySameStructureForAllPeriod mwMortalitySameStructureForAllPeriod;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestRate_txt : WinWindow
    {
        
        public wInterestRate_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtInterestRate txtInterestRate
        {
            get
            {
                if ((this.mtxtInterestRate == null))
                {
                    this.mtxtInterestRate = new txtInterestRate(this);
                }
                return this.mtxtInterestRate;
            }
        }
        #endregion
        
        #region Fields
        private txtInterestRate mtxtInterestRate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtInterestRate : WinEdit
    {
        
        public txtInterestRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortality : WinWindow
    {
        
        public wMortality(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboMortality
        {
            get
            {
                if ((this.mcboMortality == null))
                {
                    this.mcboMortality = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboMortality.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcboMortality.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboMortality;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboMortality;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValuationInterest : WinWindow
    {
        
        public wValuationInterest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkValuationInterest";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkValuationInterest
        {
            get
            {
                if ((this.mchkValuationInterest == null))
                {
                    this.mchkValuationInterest = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkValuationInterest.SearchProperties[WinCheckBox.PropertyNames.Name] = "Valuation interest";
                    this.mchkValuationInterest.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkValuationInterest.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkValuationInterest;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkValuationInterest;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValuationMortality : WinWindow
    {
        
        public wValuationMortality(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkValuationMortality";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkValuationMortality
        {
            get
            {
                if ((this.mchkValuationMortality == null))
                {
                    this.mchkValuationMortality = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkValuationMortality.SearchProperties[WinCheckBox.PropertyNames.Name] = "Valuation mortality";
                    this.mchkValuationMortality.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkValuationMortality.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkValuationMortality;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkValuationMortality;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValuationCOLA : WinWindow
    {
        
        public wValuationCOLA(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkCOLA";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkValuationCOLA
        {
            get
            {
                if ((this.mchkValuationCOLA == null))
                {
                    this.mchkValuationCOLA = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkValuationCOLA.SearchProperties[WinCheckBox.PropertyNames.Name] = "Valuation COLA";
                    this.mchkValuationCOLA.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkValuationCOLA.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkValuationCOLA;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkValuationCOLA;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValuationSpouseAgeDiff : WinWindow
    {
        
        public wValuationSpouseAgeDiff(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSpouseAgeDifference";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkValuationSpouseAgeDiff
        {
            get
            {
                if ((this.mchkValuationSpouseAgeDiff == null))
                {
                    this.mchkValuationSpouseAgeDiff = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkValuationSpouseAgeDiff.SearchProperties[WinCheckBox.PropertyNames.Name] = "Valuation spouse age difference";
                    this.mchkValuationSpouseAgeDiff.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mchkValuationSpouseAgeDiff.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkValuationSpouseAgeDiff;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkValuationSpouseAgeDiff;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCostOfLivingIncrease_cbo : WinWindow
    {
        
        public wCostOfLivingIncrease_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCostOfLivingIncrease_V : WinWindow
    {
        
        public wCostOfLivingIncrease_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wValuationPercentMarried : WinWindow
    {
        
        public wValuationPercentMarried(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkValuationPercentMarried";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Valuation percent married";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wComm_P_txt : WinWindow
    {
        
        public wComm_P_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wComm_T_cbo : WinWindow
    {
        
        public wComm_T_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestRate_P : WinWindow
    {
        
        public wInterestRate_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mUIItemButton.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCostOfLivingIncrease_P : WinWindow
    {
        
        public wCostOfLivingIncrease_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mUIItemButton.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPercentMarried_T : WinWindow
    {
        
        public wPercentMarried_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton UITButton
        {
            get
            {
                if ((this.mUITButton == null))
                {
                    this.mUITButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITButton.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mUITButton.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDifferenceInSpousesAge_T : WinWindow
    {
        
        public wDifferenceInSpousesAge_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton UITButton
        {
            get
            {
                if ((this.mUITButton == null))
                {
                    this.mUITButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITButton.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mUITButton.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrepostcommencement : WinWindow
    {
        
        public wPrepostcommencement(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radInterestRateCommencementRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Pre/post commencement";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPre_V : WinWindow
    {
        
        public wPre_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPre_P : WinWindow
    {
        
        public wPre_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wComm_V : WinWindow
    {
        
        public wComm_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPost_V : WinWindow
    {
        
        public wPost_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPost_P : WinWindow
    {
        
        public wPost_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCost_V : WinWindow
    {
        
        public wCost_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCost_P : WinWindow
    {
        
        public wCost_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestRate_PrescribedRates : WinWindow
    {
        
        public wInterestRate_PrescribedRates(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radInterestRateLegislatedRates";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrescribedRates
        {
            get
            {
                if ((this.mrdPrescribedRates == null))
                {
                    this.mrdPrescribedRates = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrescribedRates.SearchProperties[WinRadioButton.PropertyNames.Name] = "Prescribed rates";
                    this.mrdPrescribedRates.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrescribedRates;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrescribedRates;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterest_AsOfDate : WinWindow
    {
        
        public wInterest_AsOfDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteInterestRateAsOfDate";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cboAsOfDate cboAsOfDate
        {
            get
            {
                if ((this.mcboAsOfDate == null))
                {
                    this.mcboAsOfDate = new cboAsOfDate(this);
                }
                return this.mcboAsOfDate;
            }
        }
        #endregion
        
        #region Fields
        private cboAsOfDate mcboAsOfDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cboAsOfDate : WinComboBox
    {
        
        public cboAsOfDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortality_PrescribedRates : WinWindow
    {
        
        public wMortality_PrescribedRates(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radMortalityLegislatedTables";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrescribedRates
        {
            get
            {
                if ((this.mrdPrescribedRates == null))
                {
                    this.mrdPrescribedRates = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrescribedRates.SearchProperties[WinRadioButton.PropertyNames.Name] = "Prescribed rates";
                    this.mrdPrescribedRates.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrescribedRates;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrescribedRates;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortality_DisabledvsHealthy : WinWindow
    {
        
        public wMortality_DisabledvsHealthy(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkDisabledHealthy";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkDisabledvsHealthy
        {
            get
            {
                if ((this.mchkDisabledvsHealthy == null))
                {
                    this.mchkDisabledvsHealthy = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkDisabledvsHealthy.SearchProperties[WinCheckBox.PropertyNames.Name] = "Disabled vs healthy";
                    this.mchkDisabledvsHealthy.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkDisabledvsHealthy;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkDisabledvsHealthy;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSpotRateApplication : WinWindow
    {
        
        public wSpotRateApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboSpotRateApplication";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboSpotRateApplication
        {
            get
            {
                if ((this.mcboSpotRateApplication == null))
                {
                    this.mcboSpotRateApplication = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboSpotRateApplication.SearchProperties[WinComboBox.PropertyNames.Name] = "Spot rate application";
                    this.mcboSpotRateApplication.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboSpotRateApplication;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboSpotRateApplication;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortality_cbo_3 : WinWindow
    {
        
        public wMortality_cbo_3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableIndex2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wProjectionScale : WinWindow
    {
        
        public wProjectionScale(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboProjectionScale";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Projection scale";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestRate_cbo : WinWindow
    {
        
        public wInterestRate_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboInterestRate";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInterestRate_SameStructureForAllPeriod : WinWindow
    {
        
        public wInterestRate_SameStructureForAllPeriod(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radInterestRateAllPeriods";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdSameStructureForAllPeriod
        {
            get
            {
                if ((this.mrdSameStructureForAllPeriod == null))
                {
                    this.mrdSameStructureForAllPeriod = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdSameStructureForAllPeriod.SearchProperties[WinRadioButton.PropertyNames.Name] = "Same structure for all periods";
                    this.mrdSameStructureForAllPeriod.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mrdSameStructureForAllPeriod.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdSameStructureForAllPeriod;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdSameStructureForAllPeriod;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wMortalitySameStructureForAllPeriod : WinWindow
    {
        
        public wMortalitySameStructureForAllPeriod(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radMortalityAllPeriods";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdSameStructureForAllPeriod
        {
            get
            {
                if ((this.mrdSameStructureForAllPeriod == null))
                {
                    this.mrdSameStructureForAllPeriod = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdSameStructureForAllPeriod.SearchProperties[WinRadioButton.PropertyNames.Name] = "Same structure for all periods";
                    this.mrdSameStructureForAllPeriod.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mrdSameStructureForAllPeriod.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdSameStructureForAllPeriod;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdSameStructureForAllPeriod;
        #endregion
    }
}
