// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.GMPAdjustmentFactorsClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class GMPAdjustmentFactors
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wAct_FromValuation_S148Increases wAct_FromValuation_S148Increases
        {
            get
            {
                if ((this.mwAct_FromValuation_S148Increases == null))
                {
                    this.mwAct_FromValuation_S148Increases = new wAct_FromValuation_S148Increases(this);
                }
                return this.mwAct_FromValuation_S148Increases;
            }
        }
        
        public wAct_FromValuation_FixedRateAt wAct_FromValuation_FixedRateAt
        {
            get
            {
                if ((this.mwAct_FromValuation_FixedRateAt == null))
                {
                    this.mwAct_FromValuation_FixedRateAt = new wAct_FromValuation_FixedRateAt(this);
                }
                return this.mwAct_FromValuation_FixedRateAt;
            }
        }
        
        public wAct_FromValuation_FixedRateAt_V wAct_FromValuation_FixedRateAt_V
        {
            get
            {
                if ((this.mwAct_FromValuation_FixedRateAt_V == null))
                {
                    this.mwAct_FromValuation_FixedRateAt_V = new wAct_FromValuation_FixedRateAt_V(this);
                }
                return this.mwAct_FromValuation_FixedRateAt_V;
            }
        }
        
        public wAct_FromValuation_FixedRateAt_D wAct_FromValuation_FixedRateAt_D
        {
            get
            {
                if ((this.mwAct_FromValuation_FixedRateAt_D == null))
                {
                    this.mwAct_FromValuation_FixedRateAt_D = new wAct_FromValuation_FixedRateAt_D(this);
                }
                return this.mwAct_FromValuation_FixedRateAt_D;
            }
        }
        
        public wAct_FromValuation_PensionIncrease wAct_FromValuation_PensionIncrease
        {
            get
            {
                if ((this.mwAct_FromValuation_PensionIncrease == null))
                {
                    this.mwAct_FromValuation_PensionIncrease = new wAct_FromValuation_PensionIncrease(this);
                }
                return this.mwAct_FromValuation_PensionIncrease;
            }
        }
        
        public wAct_FromDate_S148Increases wAct_FromDate_S148Increases
        {
            get
            {
                if ((this.mwAct_FromDate_S148Increases == null))
                {
                    this.mwAct_FromDate_S148Increases = new wAct_FromDate_S148Increases(this);
                }
                return this.mwAct_FromDate_S148Increases;
            }
        }
        
        public wAct_FromDate_FixedRateAt wAct_FromDate_FixedRateAt
        {
            get
            {
                if ((this.mwAct_FromDate_FixedRateAt == null))
                {
                    this.mwAct_FromDate_FixedRateAt = new wAct_FromDate_FixedRateAt(this);
                }
                return this.mwAct_FromDate_FixedRateAt;
            }
        }
        
        public wAct_FromDate_FixedRateAt_V wAct_FromDate_FixedRateAt_V
        {
            get
            {
                if ((this.mwAct_FromDate_FixedRateAt_V == null))
                {
                    this.mwAct_FromDate_FixedRateAt_V = new wAct_FromDate_FixedRateAt_V(this);
                }
                return this.mwAct_FromDate_FixedRateAt_V;
            }
        }
        
        public wAct_FromDate_FixedRateAt_D wAct_FromDate_FixedRateAt_D
        {
            get
            {
                if ((this.mwAct_FromDate_FixedRateAt_D == null))
                {
                    this.mwAct_FromDate_FixedRateAt_D = new wAct_FromDate_FixedRateAt_D(this);
                }
                return this.mwAct_FromDate_FixedRateAt_D;
            }
        }
        
        public wAct_FromDate_PensionIncrease wAct_FromDate_PensionIncrease
        {
            get
            {
                if ((this.mwAct_FromDate_PensionIncrease == null))
                {
                    this.mwAct_FromDate_PensionIncrease = new wAct_FromDate_PensionIncrease(this);
                }
                return this.mwAct_FromDate_PensionIncrease;
            }
        }
        
        public wInact_S148Increases wInact_S148Increases
        {
            get
            {
                if ((this.mwInact_S148Increases == null))
                {
                    this.mwInact_S148Increases = new wInact_S148Increases(this);
                }
                return this.mwInact_S148Increases;
            }
        }
        
        public wInact_FixedRateAtDateOfLeaving wInact_FixedRateAtDateOfLeaving
        {
            get
            {
                if ((this.mwInact_FixedRateAtDateOfLeaving == null))
                {
                    this.mwInact_FixedRateAtDateOfLeaving = new wInact_FixedRateAtDateOfLeaving(this);
                }
                return this.mwInact_FixedRateAtDateOfLeaving;
            }
        }
        
        public wInact_FixedRateAt wInact_FixedRateAt
        {
            get
            {
                if ((this.mwInact_FixedRateAt == null))
                {
                    this.mwInact_FixedRateAt = new wInact_FixedRateAt(this);
                }
                return this.mwInact_FixedRateAt;
            }
        }
        
        public wInact_FixedDateAt_V wInact_FixedDateAt_V
        {
            get
            {
                if ((this.mwInact_FixedDateAt_V == null))
                {
                    this.mwInact_FixedDateAt_V = new wInact_FixedDateAt_V(this);
                }
                return this.mwInact_FixedDateAt_V;
            }
        }
        
        public wInact_FixedDateAt_D wInact_FixedDateAt_D
        {
            get
            {
                if ((this.mwInact_FixedDateAt_D == null))
                {
                    this.mwInact_FixedDateAt_D = new wInact_FixedDateAt_D(this);
                }
                return this.mwInact_FixedDateAt_D;
            }
        }
        
        public wInact_LimitedRate wInact_LimitedRate
        {
            get
            {
                if ((this.mwInact_LimitedRate == null))
                {
                    this.mwInact_LimitedRate = new wInact_LimitedRate(this);
                }
                return this.mwInact_LimitedRate;
            }
        }
        
        public wInact_PensionIncrease wInact_PensionIncrease
        {
            get
            {
                if ((this.mwInact_PensionIncrease == null))
                {
                    this.mwInact_PensionIncrease = new wInact_PensionIncrease(this);
                }
                return this.mwInact_PensionIncrease;
            }
        }
        
        public wIncrease_Pre88GMP_V wIncrease_Pre88GMP_V
        {
            get
            {
                if ((this.mwIncrease_Pre88GMP_V == null))
                {
                    this.mwIncrease_Pre88GMP_V = new wIncrease_Pre88GMP_V(this);
                }
                return this.mwIncrease_Pre88GMP_V;
            }
        }
        
        public wIncrease_Pre88GMP_P wIncrease_Pre88GMP_P
        {
            get
            {
                if ((this.mwIncrease_Pre88GMP_P == null))
                {
                    this.mwIncrease_Pre88GMP_P = new wIncrease_Pre88GMP_P(this);
                }
                return this.mwIncrease_Pre88GMP_P;
            }
        }
        
        public wIncrease_Pre88GMP_T wIncrease_Pre88GMP_T
        {
            get
            {
                if ((this.mwIncrease_Pre88GMP_T == null))
                {
                    this.mwIncrease_Pre88GMP_T = new wIncrease_Pre88GMP_T(this);
                }
                return this.mwIncrease_Pre88GMP_T;
            }
        }
        
        public wIncrease_Post88GMP_V wIncrease_Post88GMP_V
        {
            get
            {
                if ((this.mwIncrease_Post88GMP_V == null))
                {
                    this.mwIncrease_Post88GMP_V = new wIncrease_Post88GMP_V(this);
                }
                return this.mwIncrease_Post88GMP_V;
            }
        }
        
        public wIncrease_Post88GMP_P wIncrease_Post88GMP_P
        {
            get
            {
                if ((this.mwIncrease_Post88GMP_P == null))
                {
                    this.mwIncrease_Post88GMP_P = new wIncrease_Post88GMP_P(this);
                }
                return this.mwIncrease_Post88GMP_P;
            }
        }
        
        public wIncrease_Post88GMP_T wIncrease_Post88GMP_T
        {
            get
            {
                if ((this.mwIncrease_Post88GMP_T == null))
                {
                    this.mwIncrease_Post88GMP_T = new wIncrease_Post88GMP_T(this);
                }
                return this.mwIncrease_Post88GMP_T;
            }
        }
        
        public wIncrease_Pre88GMPPension wIncrease_Pre88GMPPension
        {
            get
            {
                if ((this.mwIncrease_Pre88GMPPension == null))
                {
                    this.mwIncrease_Pre88GMPPension = new wIncrease_Pre88GMPPension(this);
                }
                return this.mwIncrease_Pre88GMPPension;
            }
        }
        
        public wIncrease_Post88GMPPension wIncrease_Post88GMPPension
        {
            get
            {
                if ((this.mwIncrease_Post88GMPPension == null))
                {
                    this.mwIncrease_Post88GMPPension = new wIncrease_Post88GMPPension(this);
                }
                return this.mwIncrease_Post88GMPPension;
            }
        }
        
        public wCommon_cbo_V wCommon_cbo_V
        {
            get
            {
                if ((this.mwCommon_cbo_V == null))
                {
                    this.mwCommon_cbo_V = new wCommon_cbo_V(this);
                }
                return this.mwCommon_cbo_V;
            }
        }
        
        public wCommon_txt_D wCommon_txt_D
        {
            get
            {
                if ((this.mwCommon_txt_D == null))
                {
                    this.mwCommon_txt_D = new wCommon_txt_D(this);
                }
                return this.mwCommon_txt_D;
            }
        }
        
        public wCommon_txt_P wCommon_txt_P
        {
            get
            {
                if ((this.mwCommon_txt_P == null))
                {
                    this.mwCommon_txt_P = new wCommon_txt_P(this);
                }
                return this.mwCommon_txt_P;
            }
        }
        
        public wCommon_cbo_T wCommon_cbo_T
        {
            get
            {
                if ((this.mwCommon_cbo_T == null))
                {
                    this.mwCommon_cbo_T = new wCommon_cbo_T(this);
                }
                return this.mwCommon_cbo_T;
            }
        }
        #endregion
        
        #region Fields
        private wAct_FromValuation_S148Increases mwAct_FromValuation_S148Increases;
        
        private wAct_FromValuation_FixedRateAt mwAct_FromValuation_FixedRateAt;
        
        private wAct_FromValuation_FixedRateAt_V mwAct_FromValuation_FixedRateAt_V;
        
        private wAct_FromValuation_FixedRateAt_D mwAct_FromValuation_FixedRateAt_D;
        
        private wAct_FromValuation_PensionIncrease mwAct_FromValuation_PensionIncrease;
        
        private wAct_FromDate_S148Increases mwAct_FromDate_S148Increases;
        
        private wAct_FromDate_FixedRateAt mwAct_FromDate_FixedRateAt;
        
        private wAct_FromDate_FixedRateAt_V mwAct_FromDate_FixedRateAt_V;
        
        private wAct_FromDate_FixedRateAt_D mwAct_FromDate_FixedRateAt_D;
        
        private wAct_FromDate_PensionIncrease mwAct_FromDate_PensionIncrease;
        
        private wInact_S148Increases mwInact_S148Increases;
        
        private wInact_FixedRateAtDateOfLeaving mwInact_FixedRateAtDateOfLeaving;
        
        private wInact_FixedRateAt mwInact_FixedRateAt;
        
        private wInact_FixedDateAt_V mwInact_FixedDateAt_V;
        
        private wInact_FixedDateAt_D mwInact_FixedDateAt_D;
        
        private wInact_LimitedRate mwInact_LimitedRate;
        
        private wInact_PensionIncrease mwInact_PensionIncrease;
        
        private wIncrease_Pre88GMP_V mwIncrease_Pre88GMP_V;
        
        private wIncrease_Pre88GMP_P mwIncrease_Pre88GMP_P;
        
        private wIncrease_Pre88GMP_T mwIncrease_Pre88GMP_T;
        
        private wIncrease_Post88GMP_V mwIncrease_Post88GMP_V;
        
        private wIncrease_Post88GMP_P mwIncrease_Post88GMP_P;
        
        private wIncrease_Post88GMP_T mwIncrease_Post88GMP_T;
        
        private wIncrease_Pre88GMPPension mwIncrease_Pre88GMPPension;
        
        private wIncrease_Post88GMPPension mwIncrease_Post88GMPPension;
        
        private wCommon_cbo_V mwCommon_cbo_V;
        
        private wCommon_txt_D mwCommon_txt_D;
        
        private wCommon_txt_P mwCommon_txt_P;
        
        private wCommon_cbo_T mwCommon_cbo_T;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromValuation_S148Increases : WinWindow
    {
        
        public wAct_FromValuation_S148Increases(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radS148IncActives1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "S148 increases";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromValuation_FixedRateAt : WinWindow
    {
        
        public wAct_FromValuation_FixedRateAt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radFixedRateAtDateActives1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Fixed rate at";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromValuation_FixedRateAt_V : WinWindow
    {
        
        public wAct_FromValuation_FixedRateAt_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromValuation_FixedRateAt_D : WinWindow
    {
        
        public wAct_FromValuation_FixedRateAt_D(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "D";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromValuation_PensionIncrease : WinWindow
    {
        
        public wAct_FromValuation_PensionIncrease(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPensionIncreaseLabel";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Pension increase label";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromDate_S148Increases : WinWindow
    {
        
        public wAct_FromDate_S148Increases(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radS148IncActives2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "S148 increases";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromDate_FixedRateAt : WinWindow
    {
        
        public wAct_FromDate_FixedRateAt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radFixedRateAtDateActives2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Fixed rate at";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromDate_FixedRateAt_V : WinWindow
    {
        
        public wAct_FromDate_FixedRateAt_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromDate_FixedRateAt_D : WinWindow
    {
        
        public wAct_FromDate_FixedRateAt_D(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnDate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "D";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAct_FromDate_PensionIncrease : WinWindow
    {
        
        public wAct_FromDate_PensionIncrease(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPensionIncreaseLabel2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Pension increase label";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_S148Increases : WinWindow
    {
        
        public wInact_S148Increases(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radS148IncInactives";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "S148 increases";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_FixedRateAtDateOfLeaving : WinWindow
    {
        
        public wInact_FixedRateAtDateOfLeaving(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radFixedRateAtDateOfLeaving";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Fixed rate at date of leaving";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_FixedRateAt : WinWindow
    {
        
        public wInact_FixedRateAt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radFixedRateAtDateInactives";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Fixed rate at";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_FixedDateAt_V : WinWindow
    {
        
        public wInact_FixedDateAt_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_FixedDateAt_D : WinWindow
    {
        
        public wInact_FixedDateAt_D(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnDate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "D";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_LimitedRate : WinWindow
    {
        
        public wInact_LimitedRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radLimitedRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Limited rate";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInact_PensionIncrease : WinWindow
    {
        
        public wInact_PensionIncrease(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPensionIncreaseLabel3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Pension increase label";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Pre88GMP_V : WinWindow
    {
        
        public wIncrease_Pre88GMP_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Pre88GMP_P : WinWindow
    {
        
        public wIncrease_Pre88GMP_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Pre88GMP_T : WinWindow
    {
        
        public wIncrease_Pre88GMP_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Post88GMP_V : WinWindow
    {
        
        public wIncrease_Post88GMP_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Post88GMP_P : WinWindow
    {
        
        public wIncrease_Post88GMP_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Post88GMP_T : WinWindow
    {
        
        public wIncrease_Post88GMP_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Pre88GMPPension : WinWindow
    {
        
        public wIncrease_Pre88GMPPension(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPre88GMPPensionIncreaseLabel";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Pst88 GMP pensionincrease label";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIncrease_Post88GMPPension : WinWindow
    {
        
        public wIncrease_Post88GMPPension(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPst88GMPPensionIncreaseLabel";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo_V : WinWindow
    {
        
        public wCommon_cbo_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt_D : WinWindow
    {
        
        public wCommon_txt_D(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_dteEditDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt_P : WinWindow
    {
        
        public wCommon_txt_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo_T : WinWindow
    {
        
        public wCommon_cbo_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
}
