// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.ActuarialReportClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class ActuarialReport
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        
        public wOpenWindow wOpenWindow
        {
            get
            {
                if ((this.mwOpenWindow == null))
                {
                    this.mwOpenWindow = new wOpenWindow();
                }
                return this.mwOpenWindow;
            }
        }
        
        public wAddSubsidiary wAddSubsidiary
        {
            get
            {
                if ((this.mwAddSubsidiary == null))
                {
                    this.mwAddSubsidiary = new wAddSubsidiary();
                }
                return this.mwAddSubsidiary;
            }
        }
        
        public wCopyIndividualListing wCopyIndividualListing
        {
            get
            {
                if ((this.mwCopyIndividualListing == null))
                {
                    this.mwCopyIndividualListing = new wCopyIndividualListing();
                }
                return this.mwCopyIndividualListing;
            }
        }
        
        public wItem wItem
        {
            get
            {
                if ((this.mwItem == null))
                {
                    this.mwItem = new wItem();
                }
                return this.mwItem;
            }
        }
        
        public wConfirm wConfirm
        {
            get
            {
                if ((this.mwConfirm == null))
                {
                    this.mwConfirm = new wConfirm();
                }
                return this.mwConfirm;
            }
        }
        
        public wReportContent wReportContent
        {
            get
            {
                if ((this.mwReportContent == null))
                {
                    this.mwReportContent = new wReportContent();
                }
                return this.mwReportContent;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        
        private wOpenWindow mwOpenWindow;
        
        private wAddSubsidiary mwAddSubsidiary;
        
        private wCopyIndividualListing mwCopyIndividualListing;
        
        private wItem mwItem;
        
        private wConfirm mwConfirm;
        
        private wReportContent mwReportContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinWindow wTab
        {
            get
            {
                if ((this.mwTab == null))
                {
                    this.mwTab = new WinWindow(this);
                    #region Search Criteria
                    this.mwTab.SearchProperties[WinWindow.PropertyNames.ControlName] = "wspMain";
                    this.mwTab.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mwTab.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mwTab;
            }
        }
        
        public wG_MercerLocation wG_MercerLocation
        {
            get
            {
                if ((this.mwG_MercerLocation == null))
                {
                    this.mwG_MercerLocation = new wG_MercerLocation(this);
                }
                return this.mwG_MercerLocation;
            }
        }
        
        public wG_FullNameOfMercerCompany wG_FullNameOfMercerCompany
        {
            get
            {
                if ((this.mwG_FullNameOfMercerCompany == null))
                {
                    this.mwG_FullNameOfMercerCompany = new wG_FullNameOfMercerCompany(this);
                }
                return this.mwG_FullNameOfMercerCompany;
            }
        }
        
        public wG_NameToBePrintedOnReport_Left wG_NameToBePrintedOnReport_Left
        {
            get
            {
                if ((this.mwG_NameToBePrintedOnReport_Left == null))
                {
                    this.mwG_NameToBePrintedOnReport_Left = new wG_NameToBePrintedOnReport_Left(this);
                }
                return this.mwG_NameToBePrintedOnReport_Left;
            }
        }
        
        public wG_AcademicTitleOfUn_Right wG_AcademicTitleOfUn_Right
        {
            get
            {
                if ((this.mwG_AcademicTitleOfUn_Right == null))
                {
                    this.mwG_AcademicTitleOfUn_Right = new wG_AcademicTitleOfUn_Right(this);
                }
                return this.mwG_AcademicTitleOfUn_Right;
            }
        }
        
        public wG_ExtensionOfUnders_Right wG_ExtensionOfUnders_Right
        {
            get
            {
                if ((this.mwG_ExtensionOfUnders_Right == null))
                {
                    this.mwG_ExtensionOfUnders_Right = new wG_ExtensionOfUnders_Right(this);
                }
                return this.mwG_ExtensionOfUnders_Right;
            }
        }
        
        public wG_LocationOfUndersi_Right wG_LocationOfUndersi_Right
        {
            get
            {
                if ((this.mwG_LocationOfUndersi_Right == null))
                {
                    this.mwG_LocationOfUndersi_Right = new wG_LocationOfUndersi_Right(this);
                }
                return this.mwG_LocationOfUndersi_Right;
            }
        }
        
        public wG_DoNotAttachTermsAndConditions wG_DoNotAttachTermsAndConditions
        {
            get
            {
                if ((this.mwG_DoNotAttachTermsAndConditions == null))
                {
                    this.mwG_DoNotAttachTermsAndConditions = new wG_DoNotAttachTermsAndConditions(this);
                }
                return this.mwG_DoNotAttachTermsAndConditions;
            }
        }
        
        public wG_AcademicTitleOfUn_Left wG_AcademicTitleOfUn_Left
        {
            get
            {
                if ((this.mwG_AcademicTitleOfUn_Left == null))
                {
                    this.mwG_AcademicTitleOfUn_Left = new wG_AcademicTitleOfUn_Left(this);
                }
                return this.mwG_AcademicTitleOfUn_Left;
            }
        }
        
        public wG_NameToBePrintedOn_Right wG_NameToBePrintedOn_Right
        {
            get
            {
                if ((this.mwG_NameToBePrintedOn_Right == null))
                {
                    this.mwG_NameToBePrintedOn_Right = new wG_NameToBePrintedOn_Right(this);
                }
                return this.mwG_NameToBePrintedOn_Right;
            }
        }
        
        public wSI_LongName wSI_LongName
        {
            get
            {
                if ((this.mwSI_LongName == null))
                {
                    this.mwSI_LongName = new wSI_LongName(this);
                }
                return this.mwSI_LongName;
            }
        }
        
        public wSI_LongName_txt wSI_LongName_txt
        {
            get
            {
                if ((this.mwSI_LongName_txt == null))
                {
                    this.mwSI_LongName_txt = new wSI_LongName_txt(this);
                }
                return this.mwSI_LongName_txt;
            }
        }
        
        public wSI_ShortName wSI_ShortName
        {
            get
            {
                if ((this.mwSI_ShortName == null))
                {
                    this.mwSI_ShortName = new wSI_ShortName(this);
                }
                return this.mwSI_ShortName;
            }
        }
        
        public wSI_ShortName_txt wSI_ShortName_txt
        {
            get
            {
                if ((this.mwSI_ShortName_txt == null))
                {
                    this.mwSI_ShortName_txt = new wSI_ShortName_txt(this);
                }
                return this.mwSI_ShortName_txt;
            }
        }
        
        public wSI_ClientCode wSI_ClientCode
        {
            get
            {
                if ((this.mwSI_ClientCode == null))
                {
                    this.mwSI_ClientCode = new wSI_ClientCode(this);
                }
                return this.mwSI_ClientCode;
            }
        }
        
        public wSI_AddressLine1 wSI_AddressLine1
        {
            get
            {
                if ((this.mwSI_AddressLine1 == null))
                {
                    this.mwSI_AddressLine1 = new wSI_AddressLine1(this);
                }
                return this.mwSI_AddressLine1;
            }
        }
        
        public wSI_AddressLine1_txt wSI_AddressLine1_txt
        {
            get
            {
                if ((this.mwSI_AddressLine1_txt == null))
                {
                    this.mwSI_AddressLine1_txt = new wSI_AddressLine1_txt(this);
                }
                return this.mwSI_AddressLine1_txt;
            }
        }
        
        public wSI_City wSI_City
        {
            get
            {
                if ((this.mwSI_City == null))
                {
                    this.mwSI_City = new wSI_City(this);
                }
                return this.mwSI_City;
            }
        }
        
        public wSI_City_txt wSI_City_txt
        {
            get
            {
                if ((this.mwSI_City_txt == null))
                {
                    this.mwSI_City_txt = new wSI_City_txt(this);
                }
                return this.mwSI_City_txt;
            }
        }
        
        public wSI_PostalCode wSI_PostalCode
        {
            get
            {
                if ((this.mwSI_PostalCode == null))
                {
                    this.mwSI_PostalCode = new wSI_PostalCode(this);
                }
                return this.mwSI_PostalCode;
            }
        }
        
        public wSI_PostalCode_txt wSI_PostalCode_txt
        {
            get
            {
                if ((this.mwSI_PostalCode_txt == null))
                {
                    this.mwSI_PostalCode_txt = new wSI_PostalCode_txt(this);
                }
                return this.mwSI_PostalCode_txt;
            }
        }
        
        public wSI_Country wSI_Country
        {
            get
            {
                if ((this.mwSI_Country == null))
                {
                    this.mwSI_Country = new wSI_Country(this);
                }
                return this.mwSI_Country;
            }
        }
        
        public wSI_Country_txt wSI_Country_txt
        {
            get
            {
                if ((this.mwSI_Country_txt == null))
                {
                    this.mwSI_Country_txt = new wSI_Country_txt(this);
                }
                return this.mwSI_Country_txt;
            }
        }
        
        public wRC_DefineReportSets wRC_DefineReportSets
        {
            get
            {
                if ((this.mwRC_DefineReportSets == null))
                {
                    this.mwRC_DefineReportSets = new wRC_DefineReportSets(this);
                }
                return this.mwRC_DefineReportSets;
            }
        }
        
        public wRC_VOSummary_grid wRC_VOSummary_grid
        {
            get
            {
                if ((this.mwRC_VOSummary_grid == null))
                {
                    this.mwRC_VOSummary_grid = new wRC_VOSummary_grid(this);
                }
                return this.mwRC_VOSummary_grid;
            }
        }
        
        public wRC_VOSummary_Item_btn wRC_VOSummary_Item_btn
        {
            get
            {
                if ((this.mwRC_VOSummary_Item_btn == null))
                {
                    this.mwRC_VOSummary_Item_btn = new wRC_VOSummary_Item_btn(this);
                }
                return this.mwRC_VOSummary_Item_btn;
            }
        }
        
        public wT_DirectPromise wT_DirectPromise
        {
            get
            {
                if ((this.mwT_DirectPromise == null))
                {
                    this.mwT_DirectPromise = new wT_DirectPromise(this);
                }
                return this.mwT_DirectPromise;
            }
        }
        
        public wT_SupportFund wT_SupportFund
        {
            get
            {
                if ((this.mwT_SupportFund == null))
                {
                    this.mwT_SupportFund = new wT_SupportFund(this);
                }
                return this.mwT_SupportFund;
            }
        }
        
        public wT_NameOfSupportFund wT_NameOfSupportFund
        {
            get
            {
                if ((this.mwT_NameOfSupportFund == null))
                {
                    this.mwT_NameOfSupportFund = new wT_NameOfSupportFund(this);
                }
                return this.mwT_NameOfSupportFund;
            }
        }
        
        public wT_NumberOfBreaks wT_NumberOfBreaks
        {
            get
            {
                if ((this.mwT_NumberOfBreaks == null))
                {
                    this.mwT_NumberOfBreaks = new wT_NumberOfBreaks(this);
                }
                return this.mwT_NumberOfBreaks;
            }
        }
        
        public wT_Grid wT_Grid
        {
            get
            {
                if ((this.mwT_Grid == null))
                {
                    this.mwT_Grid = new wT_Grid(this);
                }
                return this.mwT_Grid;
            }
        }
        
        public wT_CommCbo wT_CommCbo
        {
            get
            {
                if ((this.mwT_CommCbo == null))
                {
                    this.mwT_CommCbo = new wT_CommCbo(this);
                }
                return this.mwT_CommCbo;
            }
        }
        
        public wT_DateEditor wT_DateEditor
        {
            get
            {
                if ((this.mwT_DateEditor == null))
                {
                    this.mwT_DateEditor = new wT_DateEditor(this);
                }
                return this.mwT_DateEditor;
            }
        }
        
        public wT_CommEdit wT_CommEdit
        {
            get
            {
                if ((this.mwT_CommEdit == null))
                {
                    this.mwT_CommEdit = new wT_CommEdit(this);
                }
                return this.mwT_CommEdit;
            }
        }
        
        public wSR_SensitivityResults wSR_SensitivityResults
        {
            get
            {
                if ((this.mwSR_SensitivityResults == null))
                {
                    this.mwSR_SensitivityResults = new wSR_SensitivityResults(this);
                }
                return this.mwSR_SensitivityResults;
            }
        }
        
        public wSR_ValuationNode_Item wSR_ValuationNode_Item
        {
            get
            {
                if ((this.mwSR_ValuationNode_Item == null))
                {
                    this.mwSR_ValuationNode_Item = new wSR_ValuationNode_Item(this);
                }
                return this.mwSR_ValuationNode_Item;
            }
        }
        
        public wSR_Rate_Item wSR_Rate_Item
        {
            get
            {
                if ((this.mwSR_Rate_Item == null))
                {
                    this.mwSR_Rate_Item = new wSR_Rate_Item(this);
                }
                return this.mwSR_Rate_Item;
            }
        }
        
        public wIntAcc_grid wIntAcc_grid
        {
            get
            {
                if ((this.mwIntAcc_grid == null))
                {
                    this.mwIntAcc_grid = new wIntAcc_grid(this);
                }
                return this.mwIntAcc_grid;
            }
        }
        
        public wIntAcc_edit wIntAcc_edit
        {
            get
            {
                if ((this.mwIntAcc_edit == null))
                {
                    this.mwIntAcc_edit = new wIntAcc_edit(this);
                }
                return this.mwIntAcc_edit;
            }
        }
        
        public wTreeView wTreeView
        {
            get
            {
                if ((this.mwTreeView == null))
                {
                    this.mwTreeView = new wTreeView(this);
                }
                return this.mwTreeView;
            }
        }
        
        public wG_ShowLYliabilitiesinl wG_ShowLYliabilitiesinl
        {
            get
            {
                if ((this.mwG_ShowLYliabilitiesinl == null))
                {
                    this.mwG_ShowLYliabilitiesinl = new wG_ShowLYliabilitiesinl(this);
                }
                return this.mwG_ShowLYliabilitiesinl;
            }
        }
        
        public wT_VehicleScroll wT_VehicleScroll
        {
            get
            {
                if ((this.mwT_VehicleScroll == null))
                {
                    this.mwT_VehicleScroll = new wT_VehicleScroll(this);
                }
                return this.mwT_VehicleScroll;
            }
        }
        
        public wRC_Copy wRC_Copy
        {
            get
            {
                if ((this.mwRC_Copy == null))
                {
                    this.mwRC_Copy = new wRC_Copy(this);
                }
                return this.mwRC_Copy;
            }
        }
        
        public wRC_ReportDefinitions wRC_ReportDefinitions
        {
            get
            {
                if ((this.mwRC_ReportDefinitions == null))
                {
                    this.mwRC_ReportDefinitions = new wRC_ReportDefinitions(this);
                }
                return this.mwRC_ReportDefinitions;
            }
        }
        
        public wAddressLine2 wAddressLine2
        {
            get
            {
                if ((this.mwAddressLine2 == null))
                {
                    this.mwAddressLine2 = new wAddressLine2(this);
                }
                return this.mwAddressLine2;
            }
        }
        
        public wAddressLine2_txt wAddressLine2_txt
        {
            get
            {
                if ((this.mwAddressLine2_txt == null))
                {
                    this.mwAddressLine2_txt = new wAddressLine2_txt(this);
                }
                return this.mwAddressLine2_txt;
            }
        }
        
        public wT_FileNameItem wT_FileNameItem
        {
            get
            {
                if ((this.mwT_FileNameItem == null))
                {
                    this.mwT_FileNameItem = new wT_FileNameItem(this);
                }
                return this.mwT_FileNameItem;
            }
        }
        
        public wG_IndividualTermsAndCondition wG_IndividualTermsAndCondition
        {
            get
            {
                if ((this.mwG_IndividualTermsAndCondition == null))
                {
                    this.mwG_IndividualTermsAndCondition = new wG_IndividualTermsAndCondition(this);
                }
                return this.mwG_IndividualTermsAndCondition;
            }
        }
        
        public wNumberOfBreaks_DE wNumberOfBreaks_DE
        {
            get
            {
                if ((this.mwNumberOfBreaks_DE == null))
                {
                    this.mwNumberOfBreaks_DE = new wNumberOfBreaks_DE(this);
                }
                return this.mwNumberOfBreaks_DE;
            }
        }
        
        public wRC_IndividualListingLayouts wRC_IndividualListingLayouts
        {
            get
            {
                if ((this.mwRC_IndividualListingLayouts == null))
                {
                    this.mwRC_IndividualListingLayouts = new wRC_IndividualListingLayouts(this);
                }
                return this.mwRC_IndividualListingLayouts;
            }
        }
        
        public wRC_Edit wRC_Edit
        {
            get
            {
                if ((this.mwRC_Edit == null))
                {
                    this.mwRC_Edit = new wRC_Edit(this);
                }
                return this.mwRC_Edit;
            }
        }
        
        public wRC_Delete wRC_Delete
        {
            get
            {
                if ((this.mwRC_Delete == null))
                {
                    this.mwRC_Delete = new wRC_Delete(this);
                }
                return this.mwRC_Delete;
            }
        }
        
        public wRC_Publish wRC_Publish
        {
            get
            {
                if ((this.mwRC_Publish == null))
                {
                    this.mwRC_Publish = new wRC_Publish(this);
                }
                return this.mwRC_Publish;
            }
        }
        
        public UISprBreakInfoWindow UISprBreakInfoWindow
        {
            get
            {
                if ((this.mUISprBreakInfoWindow == null))
                {
                    this.mUISprBreakInfoWindow = new UISprBreakInfoWindow(this);
                }
                return this.mUISprBreakInfoWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mwTab;
        
        private wG_MercerLocation mwG_MercerLocation;
        
        private wG_FullNameOfMercerCompany mwG_FullNameOfMercerCompany;
        
        private wG_NameToBePrintedOnReport_Left mwG_NameToBePrintedOnReport_Left;
        
        private wG_AcademicTitleOfUn_Right mwG_AcademicTitleOfUn_Right;
        
        private wG_ExtensionOfUnders_Right mwG_ExtensionOfUnders_Right;
        
        private wG_LocationOfUndersi_Right mwG_LocationOfUndersi_Right;
        
        private wG_DoNotAttachTermsAndConditions mwG_DoNotAttachTermsAndConditions;
        
        private wG_AcademicTitleOfUn_Left mwG_AcademicTitleOfUn_Left;
        
        private wG_NameToBePrintedOn_Right mwG_NameToBePrintedOn_Right;
        
        private wSI_LongName mwSI_LongName;
        
        private wSI_LongName_txt mwSI_LongName_txt;
        
        private wSI_ShortName mwSI_ShortName;
        
        private wSI_ShortName_txt mwSI_ShortName_txt;
        
        private wSI_ClientCode mwSI_ClientCode;
        
        private wSI_AddressLine1 mwSI_AddressLine1;
        
        private wSI_AddressLine1_txt mwSI_AddressLine1_txt;
        
        private wSI_City mwSI_City;
        
        private wSI_City_txt mwSI_City_txt;
        
        private wSI_PostalCode mwSI_PostalCode;
        
        private wSI_PostalCode_txt mwSI_PostalCode_txt;
        
        private wSI_Country mwSI_Country;
        
        private wSI_Country_txt mwSI_Country_txt;
        
        private wRC_DefineReportSets mwRC_DefineReportSets;
        
        private wRC_VOSummary_grid mwRC_VOSummary_grid;
        
        private wRC_VOSummary_Item_btn mwRC_VOSummary_Item_btn;
        
        private wT_DirectPromise mwT_DirectPromise;
        
        private wT_SupportFund mwT_SupportFund;
        
        private wT_NameOfSupportFund mwT_NameOfSupportFund;
        
        private wT_NumberOfBreaks mwT_NumberOfBreaks;
        
        private wT_Grid mwT_Grid;
        
        private wT_CommCbo mwT_CommCbo;
        
        private wT_DateEditor mwT_DateEditor;
        
        private wT_CommEdit mwT_CommEdit;
        
        private wSR_SensitivityResults mwSR_SensitivityResults;
        
        private wSR_ValuationNode_Item mwSR_ValuationNode_Item;
        
        private wSR_Rate_Item mwSR_Rate_Item;
        
        private wIntAcc_grid mwIntAcc_grid;
        
        private wIntAcc_edit mwIntAcc_edit;
        
        private wTreeView mwTreeView;
        
        private wG_ShowLYliabilitiesinl mwG_ShowLYliabilitiesinl;
        
        private wT_VehicleScroll mwT_VehicleScroll;
        
        private wRC_Copy mwRC_Copy;
        
        private wRC_ReportDefinitions mwRC_ReportDefinitions;
        
        private wAddressLine2 mwAddressLine2;
        
        private wAddressLine2_txt mwAddressLine2_txt;
        
        private wT_FileNameItem mwT_FileNameItem;
        
        private wG_IndividualTermsAndCondition mwG_IndividualTermsAndCondition;
        
        private wNumberOfBreaks_DE mwNumberOfBreaks_DE;
        
        private wRC_IndividualListingLayouts mwRC_IndividualListingLayouts;
        
        private wRC_Edit mwRC_Edit;
        
        private wRC_Delete mwRC_Delete;
        
        private wRC_Publish mwRC_Publish;
        
        private UISprBreakInfoWindow mUISprBreakInfoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_MercerLocation : WinWindow
    {
        
        public wG_MercerLocation(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtMercerLocation";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Mercer information";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_FullNameOfMercerCompany : WinWindow
    {
        
        public wG_FullNameOfMercerCompany(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtFullNameOfMercerCompany";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Mercer Location";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_NameToBePrintedOnReport_Left : WinWindow
    {
        
        public wG_NameToBePrintedOnReport_Left(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNameToBePrintedOnReportLeft";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Full name of Mercer company";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_AcademicTitleOfUn_Right : WinWindow
    {
        
        public wG_AcademicTitleOfUn_Right(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAcademicTitleOfUndersigningPersonRight";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_ExtensionOfUnders_Right : WinWindow
    {
        
        public wG_ExtensionOfUnders_Right(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtExtensionOfUndersigningPersonRight";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Location of undersigning person (right)";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_LocationOfUndersi_Right : WinWindow
    {
        
        public wG_LocationOfUndersi_Right(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLocationOfUndersigningPersonRight";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_DoNotAttachTermsAndConditions : WinWindow
    {
        
        public wG_DoNotAttachTermsAndConditions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkIndividualTermsAndConditions2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Do not attach terms and conditions";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_AcademicTitleOfUn_Left : WinWindow
    {
        
        public wG_AcademicTitleOfUn_Left(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAcademicTitleOfUndersigningPersonLeft";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Name of undersigning person (left)";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_NameToBePrintedOn_Right : WinWindow
    {
        
        public wG_NameToBePrintedOn_Right(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNameToBePrintedOnReportRight";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Academic title of undersigning person (left)";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_LongName : WinWindow
    {
        
        public wSI_LongName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbLongName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_LongName_txt : WinWindow
    {
        
        public wSI_LongName_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLongName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_ShortName : WinWindow
    {
        
        public wSI_ShortName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbShortName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_ShortName_txt : WinWindow
    {
        
        public wSI_ShortName_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtShortName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_ClientCode : WinWindow
    {
        
        public wSI_ClientCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtClientCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_AddressLine1 : WinWindow
    {
        
        public wSI_AddressLine1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbAddressLine1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_AddressLine1_txt : WinWindow
    {
        
        public wSI_AddressLine1_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAddressLine1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_City : WinWindow
    {
        
        public wSI_City(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbCity";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_City_txt : WinWindow
    {
        
        public wSI_City_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCity";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_PostalCode : WinWindow
    {
        
        public wSI_PostalCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbPostalCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_PostalCode_txt : WinWindow
    {
        
        public wSI_PostalCode_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPostalCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_Country : WinWindow
    {
        
        public wSI_Country(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbCountry";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSI_Country_txt : WinWindow
    {
        
        public wSI_Country_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCountry";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_DefineReportSets : WinWindow
    {
        
        public wRC_DefineReportSets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprReportDefinitions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = @"Select a VO, click on the button in the VO Summary field, then select a document from the popup toassign a VO Summary to it. Documents assigned to VO Zusammenfassung will be flagged language = German. Documents assigned to VO Summary will be flagged language = English.";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_VOSummary_grid : WinWindow
    {
        
        public wRC_VOSummary_grid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprVOSummaries";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_VOSummary_Item_btn : WinWindow
    {
        
        public wRC_VOSummary_Item_btn(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSelect";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "...";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_DirectPromise : WinWindow
    {
        
        public wT_DirectPromise(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkDirectPromise";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Direct Promise";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_SupportFund : WinWindow
    {
        
        public wT_SupportFund(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkSupportFund";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Support Fund";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_NameOfSupportFund : WinWindow
    {
        
        public wT_NameOfSupportFund(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNameOfSupportFund";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Name of support fund";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_NumberOfBreaks : WinWindow
    {
        
        public wT_NumberOfBreaks(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudNumberOfBreaks";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudNumberOfBreaksEdit1
        {
            get
            {
                if ((this.mUINudNumberOfBreaksEdit1 == null))
                {
                    this.mUINudNumberOfBreaksEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudNumberOfBreaksEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudNumberOfBreaksEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudNumberOfBreaksEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudNumberOfBreaksEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_Grid : WinWindow
    {
        
        public wT_Grid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprBreakInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_CommCbo : WinWindow
    {
        
        public wT_CommCbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_DateEditor : WinWindow
    {
        
        public wT_DateEditor(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlDateEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinComboBox(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_CommEdit : WinWindow
    {
        
        public wT_CommEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit : WinEdit
    {
        
        public Edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSR_SensitivityResults : WinWindow
    {
        
        public wSR_SensitivityResults(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprResults";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSR_ValuationNode_Item : WinWindow
    {
        
        public wSR_ValuationNode_Item(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "InputTextBox_Internal";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSR_Rate_Item : WinWindow
    {
        
        public wSR_Rate_Item(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIntAcc_grid : WinWindow
    {
        
        public wIntAcc_grid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprBreakInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Information by break";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIntAcc_edit : WinWindow
    {
        
        public wIntAcc_edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Edit1 Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new Edit1(this);
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private Edit1 mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Edit1 : WinEdit
    {
        
        public Edit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Selected text";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTreeView : WinWindow
    {
        
        public wTreeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "treeSubsidiaries";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public Tree Tree
        {
            get
            {
                if ((this.mTree == null))
                {
                    this.mTree = new Tree(this);
                }
                return this.mTree;
            }
        }
        #endregion
        
        #region Fields
        private Tree mTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Tree : WinTree
    {
        
        public Tree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTree.PropertyNames.Name] = "Subsidiaries";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTreeItem Item
        {
            get
            {
                if ((this.mItem == null))
                {
                    this.mItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mItem.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_ShowLYliabilitiesinl : WinWindow
    {
        
        public wG_ShowLYliabilitiesinl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkShowLYLiabilities";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Show LY liabilities in last year\'s report break";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_VehicleScroll : WinWindow
    {
        
        public wT_VehicleScroll(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "DEFundingVehicleParametersView";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wVerticalScrollBar wVerticalScrollBar
        {
            get
            {
                if ((this.mwVerticalScrollBar == null))
                {
                    this.mwVerticalScrollBar = new wVerticalScrollBar(this);
                }
                return this.mwVerticalScrollBar;
            }
        }
        #endregion
        
        #region Fields
        private wVerticalScrollBar mwVerticalScrollBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wVerticalScrollBar : WinScrollBar
    {
        
        public wVerticalScrollBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinScrollBar.PropertyNames.Name] = "Vertical";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton top
        {
            get
            {
                if ((this.mtop == null))
                {
                    this.mtop = new WinButton(this);
                    #region Search Criteria
                    this.mtop.SearchProperties[WinButton.PropertyNames.Name] = "Line up";
                    this.mtop.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtop;
            }
        }
        
        public WinButton PageDown
        {
            get
            {
                if ((this.mPageDown == null))
                {
                    this.mPageDown = new WinButton(this);
                    #region Search Criteria
                    this.mPageDown.SearchProperties[WinButton.PropertyNames.Name] = "Page down";
                    this.mPageDown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mPageDown;
            }
        }
        
        public WinControl bar
        {
            get
            {
                if ((this.mbar == null))
                {
                    this.mbar = new WinControl(this);
                    #region Search Criteria
                    this.mbar.SearchProperties[UITestControl.PropertyNames.Name] = "Position";
                    this.mbar.SearchProperties[UITestControl.PropertyNames.ControlType] = "Indicator";
                    this.mbar.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbar;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mtop;
        
        private WinButton mPageDown;
        
        private WinControl mbar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_Copy : WinWindow
    {
        
        public wRC_Copy(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCopy";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Copy";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_ReportDefinitions : WinWindow
    {
        
        public wRC_ReportDefinitions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprReportDefinitions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = @"Select a VO, click on the button in the VO Summary field, then select a document from the popup toassign a VO Summary to it. Documents assigned to VO Zusammenfassung will be flagged language = German. Documents assigned to VO Summary will be flagged language = English.";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAddressLine2 : WinWindow
    {
        
        public wAddressLine2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbAddressLine2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAddressLine2_txt : WinWindow
    {
        
        public wAddressLine2_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAddressLine2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wT_FileNameItem : WinWindow
    {
        
        public wT_FileNameItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtFileName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wG_IndividualTermsAndCondition : WinWindow
    {
        
        public wG_IndividualTermsAndCondition(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtIndividualTermsAndConditions1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit Edit
        {
            get
            {
                if ((this.mEdit == null))
                {
                    this.mEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name of undersigning person (right)";
                    this.mEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNumberOfBreaks_DE : WinWindow
    {
        
        public wNumberOfBreaks_DE(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudNumberOfBreaks";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "Number of reports";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Number of reports";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_IndividualListingLayouts : WinWindow
    {
        
        public wRC_IndividualListingLayouts(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spdTemplateList";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient listSpd
        {
            get
            {
                if ((this.mlistSpd == null))
                {
                    this.mlistSpd = new WinClient(this);
                    #region Search Criteria
                    this.mlistSpd.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mlistSpd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlistSpd;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mlistSpd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_Edit : WinWindow
    {
        
        public wRC_Edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnEdit";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Edit";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_Delete : WinWindow
    {
        
        public wRC_Delete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDelete";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Delete";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRC_Publish : WinWindow
    {
        
        public wRC_Publish(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPublish";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Publish";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISprBreakInfoWindow : WinWindow
    {
        
        public UISprBreakInfoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprBreakInfo";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient UISprBreakInfoClient
        {
            get
            {
                if ((this.mUISprBreakInfoClient == null))
                {
                    this.mUISprBreakInfoClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISprBreakInfoClient.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUISprBreakInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISprBreakInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOpenWindow : WinWindow
    {
        
        public wOpenWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Open";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public wFileName wFileName
        {
            get
            {
                if ((this.mwFileName == null))
                {
                    this.mwFileName = new wFileName(this);
                }
                return this.mwFileName;
            }
        }
        
        public wOpen wOpen
        {
            get
            {
                if ((this.mwOpen == null))
                {
                    this.mwOpen = new wOpen(this);
                }
                return this.mwOpen;
            }
        }
        
        public wOpenSplit wOpenSplit
        {
            get
            {
                if ((this.mwOpenSplit == null))
                {
                    this.mwOpenSplit = new wOpenSplit(this);
                }
                return this.mwOpenSplit;
            }
        }
        #endregion
        
        #region Fields
        private wFileName mwFileName;
        
        private wOpen mwOpen;
        
        private wOpenSplit mwOpenSplit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFileName : WinWindow
    {
        
        public wFileName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mtxt.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOpen : WinWindow
    {
        
        public wOpen(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mbtn.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOpenSplit : WinSplitButton
    {
        
        public wOpenSplit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Open";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinControl btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinControl(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDownButton";
                    this.mbtn.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAddSubsidiary : WinWindow
    {
        
        public wAddSubsidiary()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Subsidiary";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Subsidiary");
            #endregion
        }
        
        #region Properties
        public wLongName wLongName
        {
            get
            {
                if ((this.mwLongName == null))
                {
                    this.mwLongName = new wLongName(this);
                }
                return this.mwLongName;
            }
        }
        
        public wShortName wShortName
        {
            get
            {
                if ((this.mwShortName == null))
                {
                    this.mwShortName = new wShortName(this);
                }
                return this.mwShortName;
            }
        }
        
        public wOK wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK(this);
                }
                return this.mwOK;
            }
        }
        #endregion
        
        #region Fields
        private wLongName mwLongName;
        
        private wShortName mwShortName;
        
        private wOK mwOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wLongName : WinWindow
    {
        
        public wLongName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLongName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Add Subsidiary");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Subsidiary Long Name";
                    this.mtxt.WindowTitles.Add("Add Subsidiary");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wShortName : WinWindow
    {
        
        public wShortName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtShortName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Add Subsidiary");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Add Subsidiary");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK : WinWindow
    {
        
        public wOK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Add Subsidiary");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtn.WindowTitles.Add("Add Subsidiary");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCopyIndividualListing : WinWindow
    {
        
        public wCopyIndividualListing()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Copy Individual Listing Layout";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Copy Individual Listing Layout");
            #endregion
        }
        
        #region Properties
        public wCopyastandardlayout wCopyastandardlayout
        {
            get
            {
                if ((this.mwCopyastandardlayout == null))
                {
                    this.mwCopyastandardlayout = new wCopyastandardlayout(this);
                }
                return this.mwCopyastandardlayout;
            }
        }
        
        public wTemplateList wTemplateList
        {
            get
            {
                if ((this.mwTemplateList == null))
                {
                    this.mwTemplateList = new wTemplateList(this);
                }
                return this.mwTemplateList;
            }
        }
        
        public wOK1 wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK1(this);
                }
                return this.mwOK;
            }
        }
        #endregion
        
        #region Fields
        private wCopyastandardlayout mwCopyastandardlayout;
        
        private wTemplateList mwTemplateList;
        
        private wOK1 mwOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCopyastandardlayout : WinWindow
    {
        
        public wCopyastandardlayout(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbnCopyFromStandardLayout";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Copy Individual Listing Layout");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Copy a standard layout";
                    this.mrd.WindowTitles.Add("Copy Individual Listing Layout");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTemplateList : WinWindow
    {
        
        public wTemplateList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spdTemplateList";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Copy Individual Listing Layout");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Copy Individual Listing Layout");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK1 : WinWindow
    {
        
        public wOK1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Copy Individual Listing Layout");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtn.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mbtn.WindowTitles.Add("Copy Individual Listing Layout");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wItem : WinWindow
    {
        
        public wItem()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public wContextMenu wContextMenu
        {
            get
            {
                if ((this.mwContextMenu == null))
                {
                    this.mwContextMenu = new wContextMenu(this);
                }
                return this.mwContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private wContextMenu mwContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContextMenu : WinMenu
    {
        
        public wContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public WinMenuItem wAddColumn
        {
            get
            {
                if ((this.mwAddColumn == null))
                {
                    this.mwAddColumn = new WinMenuItem(this);
                    #region Search Criteria
                    this.mwAddColumn.SearchProperties[WinMenuItem.PropertyNames.Name] = "Add Column";
                    #endregion
                }
                return this.mwAddColumn;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mwAddColumn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wConfirm : WinWindow
    {
        
        public wConfirm()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Deletion of Report Columns";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Confirm Deletion of Report Columns");
            #endregion
        }
        
        #region Properties
        public wYes wYes
        {
            get
            {
                if ((this.mwYes == null))
                {
                    this.mwYes = new wYes(this);
                }
                return this.mwYes;
            }
        }
        #endregion
        
        #region Fields
        private wYes mwYes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wYes : WinWindow
    {
        
        public wYes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Confirm Deletion of Report Columns");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mbtn.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mbtn.WindowTitles.Add("Confirm Deletion of Report Columns");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wReportContent : WinWindow
    {
        
        public wReportContent()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wReportTemplate wReportTemplate
        {
            get
            {
                if ((this.mwReportTemplate == null))
                {
                    this.mwReportTemplate = new wReportTemplate(this);
                }
                return this.mwReportTemplate;
            }
        }
        #endregion
        
        #region Fields
        private wReportTemplate mwReportTemplate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wReportTemplate : WinWindow
    {
        
        public wReportTemplate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.LISTBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wList wList
        {
            get
            {
                if ((this.mwList == null))
                {
                    this.mwList = new wList(this);
                }
                return this.mwList;
            }
        }
        #endregion
        
        #region Fields
        private wList mwList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wList : WinList
    {
        
        public wList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public WinListItem item
        {
            get
            {
                if ((this.mitem == null))
                {
                    this.mitem = new WinListItem(this);
                    #region Search Criteria
                    this.mitem.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    #endregion
                }
                return this.mitem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mitem;
        #endregion
    }
}
