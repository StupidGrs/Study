// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.FundingInformationClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class FundingInformation
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        
        public wComBox wComBox
        {
            get
            {
                if ((this.mwComBox == null))
                {
                    this.mwComBox = new wComBox();
                }
                return this.mwComBox;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        
        private wComBox mwComBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public tvNaviTree tvNaviTree
        {
            get
            {
                if ((this.mtvNaviTree == null))
                {
                    this.mtvNaviTree = new tvNaviTree(this);
                }
                return this.mtvNaviTree;
            }
        }
        
        public wContributions_Employer_FPGrid wContributions_Employer_FPGrid
        {
            get
            {
                if ((this.mwContributions_Employer_FPGrid == null))
                {
                    this.mwContributions_Employer_FPGrid = new wContributions_Employer_FPGrid(this);
                }
                return this.mwContributions_Employer_FPGrid;
            }
        }
        
        public wGI_PlanYearBeginDate wGI_PlanYearBeginDate
        {
            get
            {
                if ((this.mwGI_PlanYearBeginDate == null))
                {
                    this.mwGI_PlanYearBeginDate = new wGI_PlanYearBeginDate(this);
                }
                return this.mwGI_PlanYearBeginDate;
            }
        }
        
        public wGI_PlanYearEndDate wGI_PlanYearEndDate
        {
            get
            {
                if ((this.mwGI_PlanYearEndDate == null))
                {
                    this.mwGI_PlanYearEndDate = new wGI_PlanYearEndDate(this);
                }
                return this.mwGI_PlanYearEndDate;
            }
        }
        
        public wGI_CurrentYareNumOfParcipants wGI_CurrentYareNumOfParcipants
        {
            get
            {
                if ((this.mwGI_CurrentYareNumOfParcipants == null))
                {
                    this.mwGI_CurrentYareNumOfParcipants = new wGI_CurrentYareNumOfParcipants(this);
                }
                return this.mwGI_CurrentYareNumOfParcipants;
            }
        }
        
        public wGI_YearsForShortfallAmortization wGI_YearsForShortfallAmortization
        {
            get
            {
                if ((this.mwGI_YearsForShortfallAmortization == null))
                {
                    this.mwGI_YearsForShortfallAmortization = new wGI_YearsForShortfallAmortization(this);
                }
                return this.mwGI_YearsForShortfallAmortization;
            }
        }
        
        public wGI_MaxDeductible_UseStablized wGI_MaxDeductible_UseStablized
        {
            get
            {
                if ((this.mwGI_MaxDeductible_UseStablized == null))
                {
                    this.mwGI_MaxDeductible_UseStablized = new wGI_MaxDeductible_UseStablized(this);
                }
                return this.mwGI_MaxDeductible_UseStablized;
            }
        }
        
        public wGI_MaxDeductible_UseUnstablized wGI_MaxDeductible_UseUnstablized
        {
            get
            {
                if ((this.mwGI_MaxDeductible_UseUnstablized == null))
                {
                    this.mwGI_MaxDeductible_UseUnstablized = new wGI_MaxDeductible_UseUnstablized(this);
                }
                return this.mwGI_MaxDeductible_UseUnstablized;
            }
        }
        
        public wGI_ExpenseLoad_None wGI_ExpenseLoad_None
        {
            get
            {
                if ((this.mwGI_ExpenseLoad_None == null))
                {
                    this.mwGI_ExpenseLoad_None = new wGI_ExpenseLoad_None(this);
                }
                return this.mwGI_ExpenseLoad_None;
            }
        }
        
        public wGI_ExpenseLoad_Percent wGI_ExpenseLoad_Percent
        {
            get
            {
                if ((this.mwGI_ExpenseLoad_Percent == null))
                {
                    this.mwGI_ExpenseLoad_Percent = new wGI_ExpenseLoad_Percent(this);
                }
                return this.mwGI_ExpenseLoad_Percent;
            }
        }
        
        public wGI_ExpenseLoad_Constant wGI_ExpenseLoad_Constant
        {
            get
            {
                if ((this.mwGI_ExpenseLoad_Constant == null))
                {
                    this.mwGI_ExpenseLoad_Constant = new wGI_ExpenseLoad_Constant(this);
                }
                return this.mwGI_ExpenseLoad_Constant;
            }
        }
        
        public wGI_TimeWeighting_ExpectedEEContrib wGI_TimeWeighting_ExpectedEEContrib
        {
            get
            {
                if ((this.mwGI_TimeWeighting_ExpectedEEContrib == null))
                {
                    this.mwGI_TimeWeighting_ExpectedEEContrib = new wGI_TimeWeighting_ExpectedEEContrib(this);
                }
                return this.mwGI_TimeWeighting_ExpectedEEContrib;
            }
        }
        
        public wGI_WaivedFunding_Amount wGI_WaivedFunding_Amount
        {
            get
            {
                if ((this.mwGI_WaivedFunding_Amount == null))
                {
                    this.mwGI_WaivedFunding_Amount = new wGI_WaivedFunding_Amount(this);
                }
                return this.mwGI_WaivedFunding_Amount;
            }
        }
        
        public wGI_WaivedFunding_YearsOfAmortization wGI_WaivedFunding_YearsOfAmortization
        {
            get
            {
                if ((this.mwGI_WaivedFunding_YearsOfAmortization == null))
                {
                    this.mwGI_WaivedFunding_YearsOfAmortization = new wGI_WaivedFunding_YearsOfAmortization(this);
                }
                return this.mwGI_WaivedFunding_YearsOfAmortization;
            }
        }
        
        public wGI_CarryoverBalance_VoluntaryCOB wGI_CarryoverBalance_VoluntaryCOB
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_VoluntaryCOB == null))
                {
                    this.mwGI_CarryoverBalance_VoluntaryCOB = new wGI_CarryoverBalance_VoluntaryCOB(this);
                }
                return this.mwGI_CarryoverBalance_VoluntaryCOB;
            }
        }
        
        public wGI_CarryoverBalance_ApplyCalculated_Yes wGI_CarryoverBalance_ApplyCalculated_Yes
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_ApplyCalculated_Yes == null))
                {
                    this.mwGI_CarryoverBalance_ApplyCalculated_Yes = new wGI_CarryoverBalance_ApplyCalculated_Yes(this);
                }
                return this.mwGI_CarryoverBalance_ApplyCalculated_Yes;
            }
        }
        
        public wGI_CarryoverBalance_ApplyCalculated_No wGI_CarryoverBalance_ApplyCalculated_No
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_ApplyCalculated_No == null))
                {
                    this.mwGI_CarryoverBalance_ApplyCalculated_No = new wGI_CarryoverBalance_ApplyCalculated_No(this);
                }
                return this.mwGI_CarryoverBalance_ApplyCalculated_No;
            }
        }
        
        public wGI_CarryoverBalance_ClientDecision_Yes wGI_CarryoverBalance_ClientDecision_Yes
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_ClientDecision_Yes == null))
                {
                    this.mwGI_CarryoverBalance_ClientDecision_Yes = new wGI_CarryoverBalance_ClientDecision_Yes(this);
                }
                return this.mwGI_CarryoverBalance_ClientDecision_Yes;
            }
        }
        
        public wGI_CarryoverBalance_ClientDecision_No wGI_CarryoverBalance_ClientDecision_No
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_ClientDecision_No == null))
                {
                    this.mwGI_CarryoverBalance_ClientDecision_No = new wGI_CarryoverBalance_ClientDecision_No(this);
                }
                return this.mwGI_CarryoverBalance_ClientDecision_No;
            }
        }
        
        public wGI_CarryoverBalance_ClientDecision_Unknown wGI_CarryoverBalance_ClientDecision_Unknown
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_ClientDecision_Unknown == null))
                {
                    this.mwGI_CarryoverBalance_ClientDecision_Unknown = new wGI_CarryoverBalance_ClientDecision_Unknown(this);
                }
                return this.mwGI_CarryoverBalance_ClientDecision_Unknown;
            }
        }
        
        public wGI_CarryoverBalance_PBGCAgreement_Yes wGI_CarryoverBalance_PBGCAgreement_Yes
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_PBGCAgreement_Yes == null))
                {
                    this.mwGI_CarryoverBalance_PBGCAgreement_Yes = new wGI_CarryoverBalance_PBGCAgreement_Yes(this);
                }
                return this.mwGI_CarryoverBalance_PBGCAgreement_Yes;
            }
        }
        
        public wGI_CarryoverBalance_PBGCAgreement_No wGI_CarryoverBalance_PBGCAgreement_No
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_PBGCAgreement_No == null))
                {
                    this.mwGI_CarryoverBalance_PBGCAgreement_No = new wGI_CarryoverBalance_PBGCAgreement_No(this);
                }
                return this.mwGI_CarryoverBalance_PBGCAgreement_No;
            }
        }
        
        public wGI_CarryoverBalance_PBGCAgreement_Unknown wGI_CarryoverBalance_PBGCAgreement_Unknown
        {
            get
            {
                if ((this.mwGI_CarryoverBalance_PBGCAgreement_Unknown == null))
                {
                    this.mwGI_CarryoverBalance_PBGCAgreement_Unknown = new wGI_CarryoverBalance_PBGCAgreement_Unknown(this);
                }
                return this.mwGI_CarryoverBalance_PBGCAgreement_Unknown;
            }
        }
        
        public wGI_PrefundingBalance_VoluntaryPFB wGI_PrefundingBalance_VoluntaryPFB
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_VoluntaryPFB == null))
                {
                    this.mwGI_PrefundingBalance_VoluntaryPFB = new wGI_PrefundingBalance_VoluntaryPFB(this);
                }
                return this.mwGI_PrefundingBalance_VoluntaryPFB;
            }
        }
        
        public wGI_PrefundingBalance_ApplyCalcuted_Yes wGI_PrefundingBalance_ApplyCalcuted_Yes
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_ApplyCalcuted_Yes == null))
                {
                    this.mwGI_PrefundingBalance_ApplyCalcuted_Yes = new wGI_PrefundingBalance_ApplyCalcuted_Yes(this);
                }
                return this.mwGI_PrefundingBalance_ApplyCalcuted_Yes;
            }
        }
        
        public wGI_PrefundingBalance_ApplyCalcuted_No wGI_PrefundingBalance_ApplyCalcuted_No
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_ApplyCalcuted_No == null))
                {
                    this.mwGI_PrefundingBalance_ApplyCalcuted_No = new wGI_PrefundingBalance_ApplyCalcuted_No(this);
                }
                return this.mwGI_PrefundingBalance_ApplyCalcuted_No;
            }
        }
        
        public wGI_PrefundingBalance_ClientDecision_Yes wGI_PrefundingBalance_ClientDecision_Yes
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_ClientDecision_Yes == null))
                {
                    this.mwGI_PrefundingBalance_ClientDecision_Yes = new wGI_PrefundingBalance_ClientDecision_Yes(this);
                }
                return this.mwGI_PrefundingBalance_ClientDecision_Yes;
            }
        }
        
        public wGI_PrefundingBalance_ClientDecision_No wGI_PrefundingBalance_ClientDecision_No
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_ClientDecision_No == null))
                {
                    this.mwGI_PrefundingBalance_ClientDecision_No = new wGI_PrefundingBalance_ClientDecision_No(this);
                }
                return this.mwGI_PrefundingBalance_ClientDecision_No;
            }
        }
        
        public wGI_PrefundingBalance_ClientDecision_Unknown wGI_PrefundingBalance_ClientDecision_Unknown
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_ClientDecision_Unknown == null))
                {
                    this.mwGI_PrefundingBalance_ClientDecision_Unknown = new wGI_PrefundingBalance_ClientDecision_Unknown(this);
                }
                return this.mwGI_PrefundingBalance_ClientDecision_Unknown;
            }
        }
        
        public wGI_PrefundingBalance_PBGCAgreement_Yes wGI_PrefundingBalance_PBGCAgreement_Yes
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_PBGCAgreement_Yes == null))
                {
                    this.mwGI_PrefundingBalance_PBGCAgreement_Yes = new wGI_PrefundingBalance_PBGCAgreement_Yes(this);
                }
                return this.mwGI_PrefundingBalance_PBGCAgreement_Yes;
            }
        }
        
        public wGI_PrefundingBalance_PBGCAgreement_No wGI_PrefundingBalance_PBGCAgreement_No
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_PBGCAgreement_No == null))
                {
                    this.mwGI_PrefundingBalance_PBGCAgreement_No = new wGI_PrefundingBalance_PBGCAgreement_No(this);
                }
                return this.mwGI_PrefundingBalance_PBGCAgreement_No;
            }
        }
        
        public wGI_PrefundingBalance_PBGCAgreement_Unknown wGI_PrefundingBalance_PBGCAgreement_Unknown
        {
            get
            {
                if ((this.mwGI_PrefundingBalance_PBGCAgreement_Unknown == null))
                {
                    this.mwGI_PrefundingBalance_PBGCAgreement_Unknown = new wGI_PrefundingBalance_PBGCAgreement_Unknown(this);
                }
                return this.mwGI_PrefundingBalance_PBGCAgreement_Unknown;
            }
        }
        
        public wGI_BenefitRestriction_PlanSponsor_Yes wGI_BenefitRestriction_PlanSponsor_Yes
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_PlanSponsor_Yes == null))
                {
                    this.mwGI_BenefitRestriction_PlanSponsor_Yes = new wGI_BenefitRestriction_PlanSponsor_Yes(this);
                }
                return this.mwGI_BenefitRestriction_PlanSponsor_Yes;
            }
        }
        
        public wGI_BenefitRestriction_PlanSponsor_No wGI_BenefitRestriction_PlanSponsor_No
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_PlanSponsor_No == null))
                {
                    this.mwGI_BenefitRestriction_PlanSponsor_No = new wGI_BenefitRestriction_PlanSponsor_No(this);
                }
                return this.mwGI_BenefitRestriction_PlanSponsor_No;
            }
        }
        
        public wGI_BenefitRestriction_PlanSponsor_Unknown wGI_BenefitRestriction_PlanSponsor_Unknown
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_PlanSponsor_Unknown == null))
                {
                    this.mwGI_BenefitRestriction_PlanSponsor_Unknown = new wGI_BenefitRestriction_PlanSponsor_Unknown(this);
                }
                return this.mwGI_BenefitRestriction_PlanSponsor_Unknown;
            }
        }
        
        public wGI_BenefitRestriction_IncreaseDueToPlanAmendment wGI_BenefitRestriction_IncreaseDueToPlanAmendment
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_IncreaseDueToPlanAmendment == null))
                {
                    this.mwGI_BenefitRestriction_IncreaseDueToPlanAmendment = new wGI_BenefitRestriction_IncreaseDueToPlanAmendment(this);
                }
                return this.mwGI_BenefitRestriction_IncreaseDueToPlanAmendment;
            }
        }
        
        public wGI_BenefitRestriction_ExemptFrom_Yes wGI_BenefitRestriction_ExemptFrom_Yes
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_ExemptFrom_Yes == null))
                {
                    this.mwGI_BenefitRestriction_ExemptFrom_Yes = new wGI_BenefitRestriction_ExemptFrom_Yes(this);
                }
                return this.mwGI_BenefitRestriction_ExemptFrom_Yes;
            }
        }
        
        public wGI_BenefitRestriction_ExemptFrom_No wGI_BenefitRestriction_ExemptFrom_No
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_ExemptFrom_No == null))
                {
                    this.mwGI_BenefitRestriction_ExemptFrom_No = new wGI_BenefitRestriction_ExemptFrom_No(this);
                }
                return this.mwGI_BenefitRestriction_ExemptFrom_No;
            }
        }
        
        public wGI_BenefitRestriction_ExemptFrom_Unknown wGI_BenefitRestriction_ExemptFrom_Unknown
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_ExemptFrom_Unknown == null))
                {
                    this.mwGI_BenefitRestriction_ExemptFrom_Unknown = new wGI_BenefitRestriction_ExemptFrom_Unknown(this);
                }
                return this.mwGI_BenefitRestriction_ExemptFrom_Unknown;
            }
        }
        
        public wGI_BenefitRestriction_IncreaseDueToShutdown wGI_BenefitRestriction_IncreaseDueToShutdown
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_IncreaseDueToShutdown == null))
                {
                    this.mwGI_BenefitRestriction_IncreaseDueToShutdown = new wGI_BenefitRestriction_IncreaseDueToShutdown(this);
                }
                return this.mwGI_BenefitRestriction_IncreaseDueToShutdown;
            }
        }
        
        public wGI_BenefitRestriction_OriginalPlanEffectiveDate wGI_BenefitRestriction_OriginalPlanEffectiveDate
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_OriginalPlanEffectiveDate == null))
                {
                    this.mwGI_BenefitRestriction_OriginalPlanEffectiveDate = new wGI_BenefitRestriction_OriginalPlanEffectiveDate(this);
                }
                return this.mwGI_BenefitRestriction_OriginalPlanEffectiveDate;
            }
        }
        
        public wGI_BenefitRestriction_PlanWasFrozen_Yes wGI_BenefitRestriction_PlanWasFrozen_Yes
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_PlanWasFrozen_Yes == null))
                {
                    this.mwGI_BenefitRestriction_PlanWasFrozen_Yes = new wGI_BenefitRestriction_PlanWasFrozen_Yes(this);
                }
                return this.mwGI_BenefitRestriction_PlanWasFrozen_Yes;
            }
        }
        
        public wGI_BenefitRestriction_PlanWasFrozen_No wGI_BenefitRestriction_PlanWasFrozen_No
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_PlanWasFrozen_No == null))
                {
                    this.mwGI_BenefitRestriction_PlanWasFrozen_No = new wGI_BenefitRestriction_PlanWasFrozen_No(this);
                }
                return this.mwGI_BenefitRestriction_PlanWasFrozen_No;
            }
        }
        
        public wGI_BenefitRestriction_PlanWasFrozen_Unknown wGI_BenefitRestriction_PlanWasFrozen_Unknown
        {
            get
            {
                if ((this.mwGI_BenefitRestriction_PlanWasFrozen_Unknown == null))
                {
                    this.mwGI_BenefitRestriction_PlanWasFrozen_Unknown = new wGI_BenefitRestriction_PlanWasFrozen_Unknown(this);
                }
                return this.mwGI_BenefitRestriction_PlanWasFrozen_Unknown;
            }
        }
        
        public wGI_CompanyName wGI_CompanyName
        {
            get
            {
                if ((this.mwGI_CompanyName == null))
                {
                    this.mwGI_CompanyName = new wGI_CompanyName(this);
                }
                return this.mwGI_CompanyName;
            }
        }
        
        public wGI_Telephone wGI_Telephone
        {
            get
            {
                if ((this.mwGI_Telephone == null))
                {
                    this.mwGI_Telephone = new wGI_Telephone(this);
                }
                return this.mwGI_Telephone;
            }
        }
        
        public wGI_AddressLine1 wGI_AddressLine1
        {
            get
            {
                if ((this.mwGI_AddressLine1 == null))
                {
                    this.mwGI_AddressLine1 = new wGI_AddressLine1(this);
                }
                return this.mwGI_AddressLine1;
            }
        }
        
        public wGI_AddressLine2 wGI_AddressLine2
        {
            get
            {
                if ((this.mwGI_AddressLine2 == null))
                {
                    this.mwGI_AddressLine2 = new wGI_AddressLine2(this);
                }
                return this.mwGI_AddressLine2;
            }
        }
        
        public wGI_AddressLine3 wGI_AddressLine3
        {
            get
            {
                if ((this.mwGI_AddressLine3 == null))
                {
                    this.mwGI_AddressLine3 = new wGI_AddressLine3(this);
                }
                return this.mwGI_AddressLine3;
            }
        }
        
        public wGI_Signer1Name wGI_Signer1Name
        {
            get
            {
                if ((this.mwGI_Signer1Name == null))
                {
                    this.mwGI_Signer1Name = new wGI_Signer1Name(this);
                }
                return this.mwGI_Signer1Name;
            }
        }
        
        public wGI_Signer1Credential wGI_Signer1Credential
        {
            get
            {
                if ((this.mwGI_Signer1Credential == null))
                {
                    this.mwGI_Signer1Credential = new wGI_Signer1Credential(this);
                }
                return this.mwGI_Signer1Credential;
            }
        }
        
        public wGI_Signer2Name wGI_Signer2Name
        {
            get
            {
                if ((this.mwGI_Signer2Name == null))
                {
                    this.mwGI_Signer2Name = new wGI_Signer2Name(this);
                }
                return this.mwGI_Signer2Name;
            }
        }
        
        public wGI_Signer2Credential wGI_Signer2Credential
        {
            get
            {
                if ((this.mwGI_Signer2Credential == null))
                {
                    this.mwGI_Signer2Credential = new wGI_Signer2Credential(this);
                }
                return this.mwGI_Signer2Credential;
            }
        }
        
        public wGI_PeerReviewName wGI_PeerReviewName
        {
            get
            {
                if ((this.mwGI_PeerReviewName == null))
                {
                    this.mwGI_PeerReviewName = new wGI_PeerReviewName(this);
                }
                return this.mwGI_PeerReviewName;
            }
        }
        
        public wGI_PeerReviewCredentials wGI_PeerReviewCredentials
        {
            get
            {
                if ((this.mwGI_PeerReviewCredentials == null))
                {
                    this.mwGI_PeerReviewCredentials = new wGI_PeerReviewCredentials(this);
                }
                return this.mwGI_PeerReviewCredentials;
            }
        }
        
        public wPYR_SummaryView wPYR_SummaryView
        {
            get
            {
                if ((this.mwPYR_SummaryView == null))
                {
                    this.mwPYR_SummaryView = new wPYR_SummaryView(this);
                }
                return this.mwPYR_SummaryView;
            }
        }
        
        public wPYR_DetailView wPYR_DetailView
        {
            get
            {
                if ((this.mwPYR_DetailView == null))
                {
                    this.mwPYR_DetailView = new wPYR_DetailView(this);
                }
                return this.mwPYR_DetailView;
            }
        }
        
        public wPYR_Tab wPYR_Tab
        {
            get
            {
                if ((this.mwPYR_Tab == null))
                {
                    this.mwPYR_Tab = new wPYR_Tab(this);
                }
                return this.mwPYR_Tab;
            }
        }
        
        public wEL_UseEstimatedLiabilities wEL_UseEstimatedLiabilities
        {
            get
            {
                if ((this.mwEL_UseEstimatedLiabilities == null))
                {
                    this.mwEL_UseEstimatedLiabilities = new wEL_UseEstimatedLiabilities(this);
                }
                return this.mwEL_UseEstimatedLiabilities;
            }
        }
        
        public wEL_FundingService wEL_FundingService
        {
            get
            {
                if ((this.mwEL_FundingService == null))
                {
                    this.mwEL_FundingService = new wEL_FundingService(this);
                }
                return this.mwEL_FundingService;
            }
        }
        
        public wEL_ValuationNode wEL_ValuationNode
        {
            get
            {
                if ((this.mwEL_ValuationNode == null))
                {
                    this.mwEL_ValuationNode = new wEL_ValuationNode(this);
                }
                return this.mwEL_ValuationNode;
            }
        }
        
        public wAssets_AssetsSnapshots_FPGrid wAssets_AssetsSnapshots_FPGrid
        {
            get
            {
                if ((this.mwAssets_AssetsSnapshots_FPGrid == null))
                {
                    this.mwAssets_AssetsSnapshots_FPGrid = new wAssets_AssetsSnapshots_FPGrid(this);
                }
                return this.mwAssets_AssetsSnapshots_FPGrid;
            }
        }
        
        public wAssets_ActualBenefitPayments_FPGrid wAssets_ActualBenefitPayments_FPGrid
        {
            get
            {
                if ((this.mwAssets_ActualBenefitPayments_FPGrid == null))
                {
                    this.mwAssets_ActualBenefitPayments_FPGrid = new wAssets_ActualBenefitPayments_FPGrid(this);
                }
                return this.mwAssets_ActualBenefitPayments_FPGrid;
            }
        }
        
        public wCommon_txt wCommon_txt
        {
            get
            {
                if ((this.mwCommon_txt == null))
                {
                    this.mwCommon_txt = new wCommon_txt(this);
                }
                return this.mwCommon_txt;
            }
        }
        
        public wAssets_WeightsForAssetsGL_FPGrid wAssets_WeightsForAssetsGL_FPGrid
        {
            get
            {
                if ((this.mwAssets_WeightsForAssetsGL_FPGrid == null))
                {
                    this.mwAssets_WeightsForAssetsGL_FPGrid = new wAssets_WeightsForAssetsGL_FPGrid(this);
                }
                return this.mwAssets_WeightsForAssetsGL_FPGrid;
            }
        }
        
        public wGP_InterestRates_Rate_GC wGP_InterestRates_Rate_GC
        {
            get
            {
                if ((this.mwGP_InterestRates_Rate_GC == null))
                {
                    this.mwGP_InterestRates_Rate_GC = new wGP_InterestRates_Rate_GC(this);
                }
                return this.mwGP_InterestRates_Rate_GC;
            }
        }
        
        public wGP_InterestRates_Rate_Slv wGP_InterestRates_Rate_Slv
        {
            get
            {
                if ((this.mwGP_InterestRates_Rate_Slv == null))
                {
                    this.mwGP_InterestRates_Rate_Slv = new wGP_InterestRates_Rate_Slv(this);
                }
                return this.mwGP_InterestRates_Rate_Slv;
            }
        }
        
        public wGP_InterestRates_AsOfDate_GC wGP_InterestRates_AsOfDate_GC
        {
            get
            {
                if ((this.mwGP_InterestRates_AsOfDate_GC == null))
                {
                    this.mwGP_InterestRates_AsOfDate_GC = new wGP_InterestRates_AsOfDate_GC(this);
                }
                return this.mwGP_InterestRates_AsOfDate_GC;
            }
        }
        
        public wGP_InterestRates_AsOfDate_Slv wGP_InterestRates_AsOfDate_Slv
        {
            get
            {
                if ((this.mwGP_InterestRates_AsOfDate_Slv == null))
                {
                    this.mwGP_InterestRates_AsOfDate_Slv = new wGP_InterestRates_AsOfDate_Slv(this);
                }
                return this.mwGP_InterestRates_AsOfDate_Slv;
            }
        }
        
        public wGP_InterestRates_YearsForShortFall_GC wGP_InterestRates_YearsForShortFall_GC
        {
            get
            {
                if ((this.mwGP_InterestRates_YearsForShortFall_GC == null))
                {
                    this.mwGP_InterestRates_YearsForShortFall_GC = new wGP_InterestRates_YearsForShortFall_GC(this);
                }
                return this.mwGP_InterestRates_YearsForShortFall_GC;
            }
        }
        
        public wGP_InterestRates_YearsForShortFall_Slv wGP_InterestRates_YearsForShortFall_Slv
        {
            get
            {
                if ((this.mwGP_InterestRates_YearsForShortFall_Slv == null))
                {
                    this.mwGP_InterestRates_YearsForShortFall_Slv = new wGP_InterestRates_YearsForShortFall_Slv(this);
                }
                return this.mwGP_InterestRates_YearsForShortFall_Slv;
            }
        }
        
        public wGP_Expense_Solvency_Termination_chk wGP_Expense_Solvency_Termination_chk
        {
            get
            {
                if ((this.mwGP_Expense_Solvency_Termination_chk == null))
                {
                    this.mwGP_Expense_Solvency_Termination_chk = new wGP_Expense_Solvency_Termination_chk(this);
                }
                return this.mwGP_Expense_Solvency_Termination_chk;
            }
        }
        
        public wGP_Expense_Solvency_Termination_C wGP_Expense_Solvency_Termination_C
        {
            get
            {
                if ((this.mwGP_Expense_Solvency_Termination_C == null))
                {
                    this.mwGP_Expense_Solvency_Termination_C = new wGP_Expense_Solvency_Termination_C(this);
                }
                return this.mwGP_Expense_Solvency_Termination_C;
            }
        }
        
        public wGP_Expense_Solvency_Termination_P wGP_Expense_Solvency_Termination_P
        {
            get
            {
                if ((this.mwGP_Expense_Solvency_Termination_P == null))
                {
                    this.mwGP_Expense_Solvency_Termination_P = new wGP_Expense_Solvency_Termination_P(this);
                }
                return this.mwGP_Expense_Solvency_Termination_P;
            }
        }
        
        public wGP_Expense_Windup_Termination_chk wGP_Expense_Windup_Termination_chk
        {
            get
            {
                if ((this.mwGP_Expense_Windup_Termination_chk == null))
                {
                    this.mwGP_Expense_Windup_Termination_chk = new wGP_Expense_Windup_Termination_chk(this);
                }
                return this.mwGP_Expense_Windup_Termination_chk;
            }
        }
        
        public wGP_Expense_Windup_Termination_C wGP_Expense_Windup_Termination_C
        {
            get
            {
                if ((this.mwGP_Expense_Windup_Termination_C == null))
                {
                    this.mwGP_Expense_Windup_Termination_C = new wGP_Expense_Windup_Termination_C(this);
                }
                return this.mwGP_Expense_Windup_Termination_C;
            }
        }
        
        public wGP_Expense_Windup_Termination_P wGP_Expense_Windup_Termination_P
        {
            get
            {
                if ((this.mwGP_Expense_Windup_Termination_P == null))
                {
                    this.mwGP_Expense_Windup_Termination_P = new wGP_Expense_Windup_Termination_P(this);
                }
                return this.mwGP_Expense_Windup_Termination_P;
            }
        }
        
        public wGP_Expense_Common_txt_C wGP_Expense_Common_txt_C
        {
            get
            {
                if ((this.mwGP_Expense_Common_txt_C == null))
                {
                    this.mwGP_Expense_Common_txt_C = new wGP_Expense_Common_txt_C(this);
                }
                return this.mwGP_Expense_Common_txt_C;
            }
        }
        
        public wGP_Expense_Common_txt_P wGP_Expense_Common_txt_P
        {
            get
            {
                if ((this.mwGP_Expense_Common_txt_P == null))
                {
                    this.mwGP_Expense_Common_txt_P = new wGP_Expense_Common_txt_P(this);
                }
                return this.mwGP_Expense_Common_txt_P;
            }
        }
        
        public wGP_OtherLiabilities_DifferenceInCircumstance wGP_OtherLiabilities_DifferenceInCircumstance
        {
            get
            {
                if ((this.mwGP_OtherLiabilities_DifferenceInCircumstance == null))
                {
                    this.mwGP_OtherLiabilities_DifferenceInCircumstance = new wGP_OtherLiabilities_DifferenceInCircumstance(this);
                }
                return this.mwGP_OtherLiabilities_DifferenceInCircumstance;
            }
        }
        
        public wGP_OtherLiabilities_ValueOfExcludedBenefits wGP_OtherLiabilities_ValueOfExcludedBenefits
        {
            get
            {
                if ((this.mwGP_OtherLiabilities_ValueOfExcludedBenefits == null))
                {
                    this.mwGP_OtherLiabilities_ValueOfExcludedBenefits = new wGP_OtherLiabilities_ValueOfExcludedBenefits(this);
                }
                return this.mwGP_OtherLiabilities_ValueOfExcludedBenefits;
            }
        }
        
        public wGP_RoundingScalingOptions_Thousands69470000 wGP_RoundingScalingOptions_Thousands69470000
        {
            get
            {
                if ((this.mwGP_RoundingScalingOptions_Thousands69470000 == null))
                {
                    this.mwGP_RoundingScalingOptions_Thousands69470000 = new wGP_RoundingScalingOptions_Thousands69470000(this);
                }
                return this.mwGP_RoundingScalingOptions_Thousands69470000;
            }
        }
        
        public wGP_OtherAssets_FPGrid wGP_OtherAssets_FPGrid
        {
            get
            {
                if ((this.mwGP_OtherAssets_FPGrid == null))
                {
                    this.mwGP_OtherAssets_FPGrid = new wGP_OtherAssets_FPGrid(this);
                }
                return this.mwGP_OtherAssets_FPGrid;
            }
        }
        
        public wGP_OtherLiabilities_FPGrid wGP_OtherLiabilities_FPGrid
        {
            get
            {
                if ((this.mwGP_OtherLiabilities_FPGrid == null))
                {
                    this.mwGP_OtherLiabilities_FPGrid = new wGP_OtherLiabilities_FPGrid(this);
                }
                return this.mwGP_OtherLiabilities_FPGrid;
            }
        }
        
        public wGP_FPGrid_Common_txt wGP_FPGrid_Common_txt
        {
            get
            {
                if ((this.mwGP_FPGrid_Common_txt == null))
                {
                    this.mwGP_FPGrid_Common_txt = new wGP_FPGrid_Common_txt(this);
                }
                return this.mwGP_FPGrid_Common_txt;
            }
        }
        
        public wPVR_PlanDates_OriginalPlanEffectiveDate wPVR_PlanDates_OriginalPlanEffectiveDate
        {
            get
            {
                if ((this.mwPVR_PlanDates_OriginalPlanEffectiveDate == null))
                {
                    this.mwPVR_PlanDates_OriginalPlanEffectiveDate = new wPVR_PlanDates_OriginalPlanEffectiveDate(this);
                }
                return this.mwPVR_PlanDates_OriginalPlanEffectiveDate;
            }
        }
        
        public wPVR_PlanDates_EndOfPlanYear wPVR_PlanDates_EndOfPlanYear
        {
            get
            {
                if ((this.mwPVR_PlanDates_EndOfPlanYear == null))
                {
                    this.mwPVR_PlanDates_EndOfPlanYear = new wPVR_PlanDates_EndOfPlanYear(this);
                }
                return this.mwPVR_PlanDates_EndOfPlanYear;
            }
        }
        
        public wPVR_PlanDates_ValuationDate wPVR_PlanDates_ValuationDate
        {
            get
            {
                if ((this.mwPVR_PlanDates_ValuationDate == null))
                {
                    this.mwPVR_PlanDates_ValuationDate = new wPVR_PlanDates_ValuationDate(this);
                }
                return this.mwPVR_PlanDates_ValuationDate;
            }
        }
        
        public wPVR_PlanDates_ValuationYear wPVR_PlanDates_ValuationYear
        {
            get
            {
                if ((this.mwPVR_PlanDates_ValuationYear == null))
                {
                    this.mwPVR_PlanDates_ValuationYear = new wPVR_PlanDates_ValuationYear(this);
                }
                return this.mwPVR_PlanDates_ValuationYear;
            }
        }
        
        public wPVR_LiabilityMeasures_SolvencyTerm wPVR_LiabilityMeasures_SolvencyTerm
        {
            get
            {
                if ((this.mwPVR_LiabilityMeasures_SolvencyTerm == null))
                {
                    this.mwPVR_LiabilityMeasures_SolvencyTerm = new wPVR_LiabilityMeasures_SolvencyTerm(this);
                }
                return this.mwPVR_LiabilityMeasures_SolvencyTerm;
            }
        }
        
        public wPVR_LiabilityMeasures_WindUpTerm wPVR_LiabilityMeasures_WindUpTerm
        {
            get
            {
                if ((this.mwPVR_LiabilityMeasures_WindUpTerm == null))
                {
                    this.mwPVR_LiabilityMeasures_WindUpTerm = new wPVR_LiabilityMeasures_WindUpTerm(this);
                }
                return this.mwPVR_LiabilityMeasures_WindUpTerm;
            }
        }
        
        public wPVR_Assets_BenefitPayments wPVR_Assets_BenefitPayments
        {
            get
            {
                if ((this.mwPVR_Assets_BenefitPayments == null))
                {
                    this.mwPVR_Assets_BenefitPayments = new wPVR_Assets_BenefitPayments(this);
                }
                return this.mwPVR_Assets_BenefitPayments;
            }
        }
        
        public wPVR_Assets_PensionPayments wPVR_Assets_PensionPayments
        {
            get
            {
                if ((this.mwPVR_Assets_PensionPayments == null))
                {
                    this.mwPVR_Assets_PensionPayments = new wPVR_Assets_PensionPayments(this);
                }
                return this.mwPVR_Assets_PensionPayments;
            }
        }
        
        public wPVR_Assets_ActuarialValueOfAssets wPVR_Assets_ActuarialValueOfAssets
        {
            get
            {
                if ((this.mwPVR_Assets_ActuarialValueOfAssets == null))
                {
                    this.mwPVR_Assets_ActuarialValueOfAssets = new wPVR_Assets_ActuarialValueOfAssets(this);
                }
                return this.mwPVR_Assets_ActuarialValueOfAssets;
            }
        }
        
        public wPVR_NormalCost_Refresh wPVR_NormalCost_Refresh
        {
            get
            {
                if ((this.mwPVR_NormalCost_Refresh == null))
                {
                    this.mwPVR_NormalCost_Refresh = new wPVR_NormalCost_Refresh(this);
                }
                return this.mwPVR_NormalCost_Refresh;
            }
        }
        
        public wPVR_Assets_MarketValueOfAssets wPVR_Assets_MarketValueOfAssets
        {
            get
            {
                if ((this.mwPVR_Assets_MarketValueOfAssets == null))
                {
                    this.mwPVR_Assets_MarketValueOfAssets = new wPVR_Assets_MarketValueOfAssets(this);
                }
                return this.mwPVR_Assets_MarketValueOfAssets;
            }
        }
        
        public wContributions_Date wContributions_Date
        {
            get
            {
                if ((this.mwContributions_Date == null))
                {
                    this.mwContributions_Date = new wContributions_Date(this);
                }
                return this.mwContributions_Date;
            }
        }
        
        public wContributions_Employer_Category wContributions_Employer_Category
        {
            get
            {
                if ((this.mwContributions_Employer_Category == null))
                {
                    this.mwContributions_Employer_Category = new wContributions_Employer_Category(this);
                }
                return this.mwContributions_Employer_Category;
            }
        }
        
        public wContributions_Com_txt wContributions_Com_txt
        {
            get
            {
                if ((this.mwContributions_Com_txt == null))
                {
                    this.mwContributions_Com_txt = new wContributions_Com_txt(this);
                }
                return this.mwContributions_Com_txt;
            }
        }
        
        public wActuarialValueOfAssets_MarketValue wActuarialValueOfAssets_MarketValue
        {
            get
            {
                if ((this.mwActuarialValueOfAssets_MarketValue == null))
                {
                    this.mwActuarialValueOfAssets_MarketValue = new wActuarialValueOfAssets_MarketValue(this);
                }
                return this.mwActuarialValueOfAssets_MarketValue;
            }
        }
        
        public wActuarialValueOfAssets_Average wActuarialValueOfAssets_Average
        {
            get
            {
                if ((this.mwActuarialValueOfAssets_Average == null))
                {
                    this.mwActuarialValueOfAssets_Average = new wActuarialValueOfAssets_Average(this);
                }
                return this.mwActuarialValueOfAssets_Average;
            }
        }
        
        public wActuarialValueOfAssets_Custom wActuarialValueOfAssets_Custom
        {
            get
            {
                if ((this.mwActuarialValueOfAssets_Custom == null))
                {
                    this.mwActuarialValueOfAssets_Custom = new wActuarialValueOfAssets_Custom(this);
                }
                return this.mwActuarialValueOfAssets_Custom;
            }
        }
        
        public wActuarialValueOfAssets wActuarialValueOfAssets
        {
            get
            {
                if ((this.mwActuarialValueOfAssets == null))
                {
                    this.mwActuarialValueOfAssets = new wActuarialValueOfAssets(this);
                }
                return this.mwActuarialValueOfAssets;
            }
        }
        
        public wApplyMarketValueCorridor wApplyMarketValueCorridor
        {
            get
            {
                if ((this.mwApplyMarketValueCorridor == null))
                {
                    this.mwApplyMarketValueCorridor = new wApplyMarketValueCorridor(this);
                }
                return this.mwApplyMarketValueCorridor;
            }
        }
        
        public UITabDetailViewWindow UITabDetailViewWindow
        {
            get
            {
                if ((this.mUITabDetailViewWindow == null))
                {
                    this.mUITabDetailViewWindow = new UITabDetailViewWindow(this);
                }
                return this.mUITabDetailViewWindow;
            }
        }
        
        public wPVR_PlanDates_BeginningOfPlanYear wPVR_PlanDates_BeginningOfPlanYear
        {
            get
            {
                if ((this.mwPVR_PlanDates_BeginningOfPlanYear == null))
                {
                    this.mwPVR_PlanDates_BeginningOfPlanYear = new wPVR_PlanDates_BeginningOfPlanYear(this);
                }
                return this.mwPVR_PlanDates_BeginningOfPlanYear;
            }
        }
        
        public UIDtEopYearWindow UIDtEopYearWindow
        {
            get
            {
                if ((this.mUIDtEopYearWindow == null))
                {
                    this.mUIDtEopYearWindow = new UIDtEopYearWindow(this);
                }
                return this.mUIDtEopYearWindow;
            }
        }
        #endregion
        
        #region Fields
        private tvNaviTree mtvNaviTree;
        
        private wContributions_Employer_FPGrid mwContributions_Employer_FPGrid;
        
        private wGI_PlanYearBeginDate mwGI_PlanYearBeginDate;
        
        private wGI_PlanYearEndDate mwGI_PlanYearEndDate;
        
        private wGI_CurrentYareNumOfParcipants mwGI_CurrentYareNumOfParcipants;
        
        private wGI_YearsForShortfallAmortization mwGI_YearsForShortfallAmortization;
        
        private wGI_MaxDeductible_UseStablized mwGI_MaxDeductible_UseStablized;
        
        private wGI_MaxDeductible_UseUnstablized mwGI_MaxDeductible_UseUnstablized;
        
        private wGI_ExpenseLoad_None mwGI_ExpenseLoad_None;
        
        private wGI_ExpenseLoad_Percent mwGI_ExpenseLoad_Percent;
        
        private wGI_ExpenseLoad_Constant mwGI_ExpenseLoad_Constant;
        
        private wGI_TimeWeighting_ExpectedEEContrib mwGI_TimeWeighting_ExpectedEEContrib;
        
        private wGI_WaivedFunding_Amount mwGI_WaivedFunding_Amount;
        
        private wGI_WaivedFunding_YearsOfAmortization mwGI_WaivedFunding_YearsOfAmortization;
        
        private wGI_CarryoverBalance_VoluntaryCOB mwGI_CarryoverBalance_VoluntaryCOB;
        
        private wGI_CarryoverBalance_ApplyCalculated_Yes mwGI_CarryoverBalance_ApplyCalculated_Yes;
        
        private wGI_CarryoverBalance_ApplyCalculated_No mwGI_CarryoverBalance_ApplyCalculated_No;
        
        private wGI_CarryoverBalance_ClientDecision_Yes mwGI_CarryoverBalance_ClientDecision_Yes;
        
        private wGI_CarryoverBalance_ClientDecision_No mwGI_CarryoverBalance_ClientDecision_No;
        
        private wGI_CarryoverBalance_ClientDecision_Unknown mwGI_CarryoverBalance_ClientDecision_Unknown;
        
        private wGI_CarryoverBalance_PBGCAgreement_Yes mwGI_CarryoverBalance_PBGCAgreement_Yes;
        
        private wGI_CarryoverBalance_PBGCAgreement_No mwGI_CarryoverBalance_PBGCAgreement_No;
        
        private wGI_CarryoverBalance_PBGCAgreement_Unknown mwGI_CarryoverBalance_PBGCAgreement_Unknown;
        
        private wGI_PrefundingBalance_VoluntaryPFB mwGI_PrefundingBalance_VoluntaryPFB;
        
        private wGI_PrefundingBalance_ApplyCalcuted_Yes mwGI_PrefundingBalance_ApplyCalcuted_Yes;
        
        private wGI_PrefundingBalance_ApplyCalcuted_No mwGI_PrefundingBalance_ApplyCalcuted_No;
        
        private wGI_PrefundingBalance_ClientDecision_Yes mwGI_PrefundingBalance_ClientDecision_Yes;
        
        private wGI_PrefundingBalance_ClientDecision_No mwGI_PrefundingBalance_ClientDecision_No;
        
        private wGI_PrefundingBalance_ClientDecision_Unknown mwGI_PrefundingBalance_ClientDecision_Unknown;
        
        private wGI_PrefundingBalance_PBGCAgreement_Yes mwGI_PrefundingBalance_PBGCAgreement_Yes;
        
        private wGI_PrefundingBalance_PBGCAgreement_No mwGI_PrefundingBalance_PBGCAgreement_No;
        
        private wGI_PrefundingBalance_PBGCAgreement_Unknown mwGI_PrefundingBalance_PBGCAgreement_Unknown;
        
        private wGI_BenefitRestriction_PlanSponsor_Yes mwGI_BenefitRestriction_PlanSponsor_Yes;
        
        private wGI_BenefitRestriction_PlanSponsor_No mwGI_BenefitRestriction_PlanSponsor_No;
        
        private wGI_BenefitRestriction_PlanSponsor_Unknown mwGI_BenefitRestriction_PlanSponsor_Unknown;
        
        private wGI_BenefitRestriction_IncreaseDueToPlanAmendment mwGI_BenefitRestriction_IncreaseDueToPlanAmendment;
        
        private wGI_BenefitRestriction_ExemptFrom_Yes mwGI_BenefitRestriction_ExemptFrom_Yes;
        
        private wGI_BenefitRestriction_ExemptFrom_No mwGI_BenefitRestriction_ExemptFrom_No;
        
        private wGI_BenefitRestriction_ExemptFrom_Unknown mwGI_BenefitRestriction_ExemptFrom_Unknown;
        
        private wGI_BenefitRestriction_IncreaseDueToShutdown mwGI_BenefitRestriction_IncreaseDueToShutdown;
        
        private wGI_BenefitRestriction_OriginalPlanEffectiveDate mwGI_BenefitRestriction_OriginalPlanEffectiveDate;
        
        private wGI_BenefitRestriction_PlanWasFrozen_Yes mwGI_BenefitRestriction_PlanWasFrozen_Yes;
        
        private wGI_BenefitRestriction_PlanWasFrozen_No mwGI_BenefitRestriction_PlanWasFrozen_No;
        
        private wGI_BenefitRestriction_PlanWasFrozen_Unknown mwGI_BenefitRestriction_PlanWasFrozen_Unknown;
        
        private wGI_CompanyName mwGI_CompanyName;
        
        private wGI_Telephone mwGI_Telephone;
        
        private wGI_AddressLine1 mwGI_AddressLine1;
        
        private wGI_AddressLine2 mwGI_AddressLine2;
        
        private wGI_AddressLine3 mwGI_AddressLine3;
        
        private wGI_Signer1Name mwGI_Signer1Name;
        
        private wGI_Signer1Credential mwGI_Signer1Credential;
        
        private wGI_Signer2Name mwGI_Signer2Name;
        
        private wGI_Signer2Credential mwGI_Signer2Credential;
        
        private wGI_PeerReviewName mwGI_PeerReviewName;
        
        private wGI_PeerReviewCredentials mwGI_PeerReviewCredentials;
        
        private wPYR_SummaryView mwPYR_SummaryView;
        
        private wPYR_DetailView mwPYR_DetailView;
        
        private wPYR_Tab mwPYR_Tab;
        
        private wEL_UseEstimatedLiabilities mwEL_UseEstimatedLiabilities;
        
        private wEL_FundingService mwEL_FundingService;
        
        private wEL_ValuationNode mwEL_ValuationNode;
        
        private wAssets_AssetsSnapshots_FPGrid mwAssets_AssetsSnapshots_FPGrid;
        
        private wAssets_ActualBenefitPayments_FPGrid mwAssets_ActualBenefitPayments_FPGrid;
        
        private wCommon_txt mwCommon_txt;
        
        private wAssets_WeightsForAssetsGL_FPGrid mwAssets_WeightsForAssetsGL_FPGrid;
        
        private wGP_InterestRates_Rate_GC mwGP_InterestRates_Rate_GC;
        
        private wGP_InterestRates_Rate_Slv mwGP_InterestRates_Rate_Slv;
        
        private wGP_InterestRates_AsOfDate_GC mwGP_InterestRates_AsOfDate_GC;
        
        private wGP_InterestRates_AsOfDate_Slv mwGP_InterestRates_AsOfDate_Slv;
        
        private wGP_InterestRates_YearsForShortFall_GC mwGP_InterestRates_YearsForShortFall_GC;
        
        private wGP_InterestRates_YearsForShortFall_Slv mwGP_InterestRates_YearsForShortFall_Slv;
        
        private wGP_Expense_Solvency_Termination_chk mwGP_Expense_Solvency_Termination_chk;
        
        private wGP_Expense_Solvency_Termination_C mwGP_Expense_Solvency_Termination_C;
        
        private wGP_Expense_Solvency_Termination_P mwGP_Expense_Solvency_Termination_P;
        
        private wGP_Expense_Windup_Termination_chk mwGP_Expense_Windup_Termination_chk;
        
        private wGP_Expense_Windup_Termination_C mwGP_Expense_Windup_Termination_C;
        
        private wGP_Expense_Windup_Termination_P mwGP_Expense_Windup_Termination_P;
        
        private wGP_Expense_Common_txt_C mwGP_Expense_Common_txt_C;
        
        private wGP_Expense_Common_txt_P mwGP_Expense_Common_txt_P;
        
        private wGP_OtherLiabilities_DifferenceInCircumstance mwGP_OtherLiabilities_DifferenceInCircumstance;
        
        private wGP_OtherLiabilities_ValueOfExcludedBenefits mwGP_OtherLiabilities_ValueOfExcludedBenefits;
        
        private wGP_RoundingScalingOptions_Thousands69470000 mwGP_RoundingScalingOptions_Thousands69470000;
        
        private wGP_OtherAssets_FPGrid mwGP_OtherAssets_FPGrid;
        
        private wGP_OtherLiabilities_FPGrid mwGP_OtherLiabilities_FPGrid;
        
        private wGP_FPGrid_Common_txt mwGP_FPGrid_Common_txt;
        
        private wPVR_PlanDates_OriginalPlanEffectiveDate mwPVR_PlanDates_OriginalPlanEffectiveDate;
        
        private wPVR_PlanDates_EndOfPlanYear mwPVR_PlanDates_EndOfPlanYear;
        
        private wPVR_PlanDates_ValuationDate mwPVR_PlanDates_ValuationDate;
        
        private wPVR_PlanDates_ValuationYear mwPVR_PlanDates_ValuationYear;
        
        private wPVR_LiabilityMeasures_SolvencyTerm mwPVR_LiabilityMeasures_SolvencyTerm;
        
        private wPVR_LiabilityMeasures_WindUpTerm mwPVR_LiabilityMeasures_WindUpTerm;
        
        private wPVR_Assets_BenefitPayments mwPVR_Assets_BenefitPayments;
        
        private wPVR_Assets_PensionPayments mwPVR_Assets_PensionPayments;
        
        private wPVR_Assets_ActuarialValueOfAssets mwPVR_Assets_ActuarialValueOfAssets;
        
        private wPVR_NormalCost_Refresh mwPVR_NormalCost_Refresh;
        
        private wPVR_Assets_MarketValueOfAssets mwPVR_Assets_MarketValueOfAssets;
        
        private wContributions_Date mwContributions_Date;
        
        private wContributions_Employer_Category mwContributions_Employer_Category;
        
        private wContributions_Com_txt mwContributions_Com_txt;
        
        private wActuarialValueOfAssets_MarketValue mwActuarialValueOfAssets_MarketValue;
        
        private wActuarialValueOfAssets_Average mwActuarialValueOfAssets_Average;
        
        private wActuarialValueOfAssets_Custom mwActuarialValueOfAssets_Custom;
        
        private wActuarialValueOfAssets mwActuarialValueOfAssets;
        
        private wApplyMarketValueCorridor mwApplyMarketValueCorridor;
        
        private UITabDetailViewWindow mUITabDetailViewWindow;
        
        private wPVR_PlanDates_BeginningOfPlanYear mwPVR_PlanDates_BeginningOfPlanYear;
        
        private UIDtEopYearWindow mUIDtEopYearWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class tvNaviTree : WinWindow
    {
        
        public tvNaviTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "trvLibraryExplorer";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UIFundingCalculationsTreeItem UIFundingCalculationsTreeItem
        {
            get
            {
                if ((this.mUIFundingCalculationsTreeItem == null))
                {
                    this.mUIFundingCalculationsTreeItem = new UIFundingCalculationsTreeItem(this);
                }
                return this.mUIFundingCalculationsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFundingCalculationsTreeItem mUIFundingCalculationsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFundingCalculationsTreeItem : WinTreeItem
    {
        
        public UIFundingCalculationsTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Funding Calculations";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIContributionsTreeItem
        {
            get
            {
                if ((this.mUIContributionsTreeItem == null))
                {
                    this.mUIContributionsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIContributionsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Contributions";
                    this.mUIContributionsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIContributionsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIContributionsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIContributionsTreeItem.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIContributionsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIContributionsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContributions_Employer_FPGrid : WinWindow
    {
        
        public wContributions_Employer_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadEmployer";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PlanYearBeginDate : WinWindow
    {
        
        public wGI_PlanYearBeginDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtPlanYearBeginDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cboPlanYearBeginDate cboPlanYearBeginDate
        {
            get
            {
                if ((this.mcboPlanYearBeginDate == null))
                {
                    this.mcboPlanYearBeginDate = new cboPlanYearBeginDate(this);
                }
                return this.mcboPlanYearBeginDate;
            }
        }
        #endregion
        
        #region Fields
        private cboPlanYearBeginDate mcboPlanYearBeginDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cboPlanYearBeginDate : WinComboBox
    {
        
        public cboPlanYearBeginDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtPlanYearBeginDate
        {
            get
            {
                if ((this.mtxtPlanYearBeginDate == null))
                {
                    this.mtxtPlanYearBeginDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtPlanYearBeginDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtPlanYearBeginDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtPlanYearBeginDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtPlanYearBeginDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PlanYearEndDate : WinWindow
    {
        
        public wGI_PlanYearEndDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtPlanYearEndDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cboPlanYearEndDate cboPlanYearEndDate
        {
            get
            {
                if ((this.mcboPlanYearEndDate == null))
                {
                    this.mcboPlanYearEndDate = new cboPlanYearEndDate(this);
                }
                return this.mcboPlanYearEndDate;
            }
        }
        #endregion
        
        #region Fields
        private cboPlanYearEndDate mcboPlanYearEndDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cboPlanYearEndDate : WinComboBox
    {
        
        public cboPlanYearEndDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtPlanYearEndDate
        {
            get
            {
                if ((this.mtxtPlanYearEndDate == null))
                {
                    this.mtxtPlanYearEndDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtPlanYearEndDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtPlanYearEndDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtPlanYearEndDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtPlanYearEndDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CurrentYareNumOfParcipants : WinWindow
    {
        
        public wGI_CurrentYareNumOfParcipants(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtCurrentYareNumOfParcipants txtCurrentYareNumOfParcipants
        {
            get
            {
                if ((this.mtxtCurrentYareNumOfParcipants == null))
                {
                    this.mtxtCurrentYareNumOfParcipants = new txtCurrentYareNumOfParcipants(this);
                }
                return this.mtxtCurrentYareNumOfParcipants;
            }
        }
        #endregion
        
        #region Fields
        private txtCurrentYareNumOfParcipants mtxtCurrentYareNumOfParcipants;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtCurrentYareNumOfParcipants : WinEdit
    {
        
        public txtCurrentYareNumOfParcipants(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_YearsForShortfallAmortization : WinWindow
    {
        
        public wGI_YearsForShortfallAmortization(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtYearsForShortfallAmortization txtYearsForShortfallAmortization
        {
            get
            {
                if ((this.mtxtYearsForShortfallAmortization == null))
                {
                    this.mtxtYearsForShortfallAmortization = new txtYearsForShortfallAmortization(this);
                }
                return this.mtxtYearsForShortfallAmortization;
            }
        }
        #endregion
        
        #region Fields
        private txtYearsForShortfallAmortization mtxtYearsForShortfallAmortization;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtYearsForShortfallAmortization : WinEdit
    {
        
        public txtYearsForShortfallAmortization(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_MaxDeductible_UseStablized : WinWindow
    {
        
        public wGI_MaxDeductible_UseStablized(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbUseStabilizedRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdMaxDeductible_UseStablized
        {
            get
            {
                if ((this.mrdMaxDeductible_UseStablized == null))
                {
                    this.mrdMaxDeductible_UseStablized = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdMaxDeductible_UseStablized.SearchProperties[WinRadioButton.PropertyNames.Name] = "Use stabilized rates in average asset value determination";
                    this.mrdMaxDeductible_UseStablized.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdMaxDeductible_UseStablized;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdMaxDeductible_UseStablized;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_MaxDeductible_UseUnstablized : WinWindow
    {
        
        public wGI_MaxDeductible_UseUnstablized(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbUseNonStabilizedRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdMaxDeductible_UseUnstablized
        {
            get
            {
                if ((this.mrdMaxDeductible_UseUnstablized == null))
                {
                    this.mrdMaxDeductible_UseUnstablized = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdMaxDeductible_UseUnstablized.SearchProperties[WinRadioButton.PropertyNames.Name] = "Use nonstabilized rates in average asset value determination";
                    this.mrdMaxDeductible_UseUnstablized.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdMaxDeductible_UseUnstablized;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdMaxDeductible_UseUnstablized;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_ExpenseLoad_None : WinWindow
    {
        
        public wGI_ExpenseLoad_None(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbExpenseLoadNone";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdExpenseLoad_None
        {
            get
            {
                if ((this.mrdExpenseLoad_None == null))
                {
                    this.mrdExpenseLoad_None = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdExpenseLoad_None.SearchProperties[WinRadioButton.PropertyNames.Name] = "None";
                    this.mrdExpenseLoad_None.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdExpenseLoad_None;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdExpenseLoad_None;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_ExpenseLoad_Percent : WinWindow
    {
        
        public wGI_ExpenseLoad_Percent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbExpenseLoadPercent";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdExpenseLoad_Percent
        {
            get
            {
                if ((this.mrdExpenseLoad_Percent == null))
                {
                    this.mrdExpenseLoad_Percent = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdExpenseLoad_Percent.SearchProperties[WinRadioButton.PropertyNames.Name] = "Percent";
                    this.mrdExpenseLoad_Percent.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdExpenseLoad_Percent;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdExpenseLoad_Percent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_ExpenseLoad_Constant : WinWindow
    {
        
        public wGI_ExpenseLoad_Constant(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbExpenseLoadConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdExpenseLoad_Constant
        {
            get
            {
                if ((this.mrdExpenseLoad_Constant == null))
                {
                    this.mrdExpenseLoad_Constant = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdExpenseLoad_Constant.SearchProperties[WinRadioButton.PropertyNames.Name] = "Constant";
                    this.mrdExpenseLoad_Constant.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdExpenseLoad_Constant;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdExpenseLoad_Constant;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_TimeWeighting_ExpectedEEContrib : WinWindow
    {
        
        public wGI_TimeWeighting_ExpectedEEContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtTimeWeighting_ExpectedEEContrib txtTimeWeighting_ExpectedEEContrib
        {
            get
            {
                if ((this.mtxtTimeWeighting_ExpectedEEContrib == null))
                {
                    this.mtxtTimeWeighting_ExpectedEEContrib = new txtTimeWeighting_ExpectedEEContrib(this);
                }
                return this.mtxtTimeWeighting_ExpectedEEContrib;
            }
        }
        #endregion
        
        #region Fields
        private txtTimeWeighting_ExpectedEEContrib mtxtTimeWeighting_ExpectedEEContrib;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtTimeWeighting_ExpectedEEContrib : WinEdit
    {
        
        public txtTimeWeighting_ExpectedEEContrib(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_WaivedFunding_Amount : WinWindow
    {
        
        public wGI_WaivedFunding_Amount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtWaivedFunding_Amount txtWaivedFunding_Amount
        {
            get
            {
                if ((this.mtxtWaivedFunding_Amount == null))
                {
                    this.mtxtWaivedFunding_Amount = new txtWaivedFunding_Amount(this);
                }
                return this.mtxtWaivedFunding_Amount;
            }
        }
        #endregion
        
        #region Fields
        private txtWaivedFunding_Amount mtxtWaivedFunding_Amount;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtWaivedFunding_Amount : WinEdit
    {
        
        public txtWaivedFunding_Amount(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_WaivedFunding_YearsOfAmortization : WinWindow
    {
        
        public wGI_WaivedFunding_YearsOfAmortization(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtWaivedFunding_YearsOfAmortization txtWaivedFunding_YearsOfAmortization
        {
            get
            {
                if ((this.mtxtWaivedFunding_YearsOfAmortization == null))
                {
                    this.mtxtWaivedFunding_YearsOfAmortization = new txtWaivedFunding_YearsOfAmortization(this);
                }
                return this.mtxtWaivedFunding_YearsOfAmortization;
            }
        }
        #endregion
        
        #region Fields
        private txtWaivedFunding_YearsOfAmortization mtxtWaivedFunding_YearsOfAmortization;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtWaivedFunding_YearsOfAmortization : WinEdit
    {
        
        public txtWaivedFunding_YearsOfAmortization(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_VoluntaryCOB : WinWindow
    {
        
        public wGI_CarryoverBalance_VoluntaryCOB(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtCarryoverBalance_VoluntaryCOB txtCarryoverBalance_VoluntaryCOB
        {
            get
            {
                if ((this.mtxtCarryoverBalance_VoluntaryCOB == null))
                {
                    this.mtxtCarryoverBalance_VoluntaryCOB = new txtCarryoverBalance_VoluntaryCOB(this);
                }
                return this.mtxtCarryoverBalance_VoluntaryCOB;
            }
        }
        #endregion
        
        #region Fields
        private txtCarryoverBalance_VoluntaryCOB mtxtCarryoverBalance_VoluntaryCOB;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtCarryoverBalance_VoluntaryCOB : WinEdit
    {
        
        public txtCarryoverBalance_VoluntaryCOB(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_ApplyCalculated_Yes : WinWindow
    {
        
        public wGI_CarryoverBalance_ApplyCalculated_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_ApplyCalculated_Yes
        {
            get
            {
                if ((this.mrdCarryoverBalance_ApplyCalculated_Yes == null))
                {
                    this.mrdCarryoverBalance_ApplyCalculated_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_ApplyCalculated_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdCarryoverBalance_ApplyCalculated_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_ApplyCalculated_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_ApplyCalculated_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_ApplyCalculated_No : WinWindow
    {
        
        public wGI_CarryoverBalance_ApplyCalculated_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_ApplyCalculated_No
        {
            get
            {
                if ((this.mrdCarryoverBalance_ApplyCalculated_No == null))
                {
                    this.mrdCarryoverBalance_ApplyCalculated_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_ApplyCalculated_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdCarryoverBalance_ApplyCalculated_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_ApplyCalculated_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_ApplyCalculated_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_ClientDecision_Yes : WinWindow
    {
        
        public wGI_CarryoverBalance_ClientDecision_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_ClientDecision_Yes
        {
            get
            {
                if ((this.mrdCarryoverBalance_ClientDecision_Yes == null))
                {
                    this.mrdCarryoverBalance_ClientDecision_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_ClientDecision_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdCarryoverBalance_ClientDecision_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_ClientDecision_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_ClientDecision_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_ClientDecision_No : WinWindow
    {
        
        public wGI_CarryoverBalance_ClientDecision_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_ClientDecision_No
        {
            get
            {
                if ((this.mrdCarryoverBalance_ClientDecision_No == null))
                {
                    this.mrdCarryoverBalance_ClientDecision_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_ClientDecision_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdCarryoverBalance_ClientDecision_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_ClientDecision_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_ClientDecision_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_ClientDecision_Unknown : WinWindow
    {
        
        public wGI_CarryoverBalance_ClientDecision_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_ClientDecision_Unknown
        {
            get
            {
                if ((this.mrdCarryoverBalance_ClientDecision_Unknown == null))
                {
                    this.mrdCarryoverBalance_ClientDecision_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_ClientDecision_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdCarryoverBalance_ClientDecision_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_ClientDecision_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_ClientDecision_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_PBGCAgreement_Yes : WinWindow
    {
        
        public wGI_CarryoverBalance_PBGCAgreement_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_PBGCAgreement_Yes
        {
            get
            {
                if ((this.mrdCarryoverBalance_PBGCAgreement_Yes == null))
                {
                    this.mrdCarryoverBalance_PBGCAgreement_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_PBGCAgreement_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdCarryoverBalance_PBGCAgreement_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_PBGCAgreement_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_PBGCAgreement_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_PBGCAgreement_No : WinWindow
    {
        
        public wGI_CarryoverBalance_PBGCAgreement_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_PBGCAgreement_No
        {
            get
            {
                if ((this.mrdCarryoverBalance_PBGCAgreement_No == null))
                {
                    this.mrdCarryoverBalance_PBGCAgreement_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_PBGCAgreement_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdCarryoverBalance_PBGCAgreement_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_PBGCAgreement_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_PBGCAgreement_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CarryoverBalance_PBGCAgreement_Unknown : WinWindow
    {
        
        public wGI_CarryoverBalance_PBGCAgreement_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCarryoverBalance_PBGCAgreement_Unknown
        {
            get
            {
                if ((this.mrdCarryoverBalance_PBGCAgreement_Unknown == null))
                {
                    this.mrdCarryoverBalance_PBGCAgreement_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCarryoverBalance_PBGCAgreement_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdCarryoverBalance_PBGCAgreement_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCarryoverBalance_PBGCAgreement_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCarryoverBalance_PBGCAgreement_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_VoluntaryPFB : WinWindow
    {
        
        public wGI_PrefundingBalance_VoluntaryPFB(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtPrefundingBalance_VoluntaryPFB txtPrefundingBalance_VoluntaryPFB
        {
            get
            {
                if ((this.mtxtPrefundingBalance_VoluntaryPFB == null))
                {
                    this.mtxtPrefundingBalance_VoluntaryPFB = new txtPrefundingBalance_VoluntaryPFB(this);
                }
                return this.mtxtPrefundingBalance_VoluntaryPFB;
            }
        }
        #endregion
        
        #region Fields
        private txtPrefundingBalance_VoluntaryPFB mtxtPrefundingBalance_VoluntaryPFB;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtPrefundingBalance_VoluntaryPFB : WinEdit
    {
        
        public txtPrefundingBalance_VoluntaryPFB(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_ApplyCalcuted_Yes : WinWindow
    {
        
        public wGI_PrefundingBalance_ApplyCalcuted_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_ApplyCalcuted_Yes
        {
            get
            {
                if ((this.mrdPrefundingBalance_ApplyCalcuted_Yes == null))
                {
                    this.mrdPrefundingBalance_ApplyCalcuted_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_ApplyCalcuted_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdPrefundingBalance_ApplyCalcuted_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_ApplyCalcuted_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_ApplyCalcuted_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_ApplyCalcuted_No : WinWindow
    {
        
        public wGI_PrefundingBalance_ApplyCalcuted_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_ApplyCalcuted_No
        {
            get
            {
                if ((this.mrdPrefundingBalance_ApplyCalcuted_No == null))
                {
                    this.mrdPrefundingBalance_ApplyCalcuted_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_ApplyCalcuted_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdPrefundingBalance_ApplyCalcuted_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_ApplyCalcuted_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_ApplyCalcuted_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_ClientDecision_Yes : WinWindow
    {
        
        public wGI_PrefundingBalance_ClientDecision_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_ClientDecision_Yes
        {
            get
            {
                if ((this.mrdPrefundingBalance_ClientDecision_Yes == null))
                {
                    this.mrdPrefundingBalance_ClientDecision_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_ClientDecision_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdPrefundingBalance_ClientDecision_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_ClientDecision_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_ClientDecision_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_ClientDecision_No : WinWindow
    {
        
        public wGI_PrefundingBalance_ClientDecision_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_ClientDecision_No
        {
            get
            {
                if ((this.mrdPrefundingBalance_ClientDecision_No == null))
                {
                    this.mrdPrefundingBalance_ClientDecision_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_ClientDecision_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdPrefundingBalance_ClientDecision_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_ClientDecision_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_ClientDecision_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_ClientDecision_Unknown : WinWindow
    {
        
        public wGI_PrefundingBalance_ClientDecision_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_ClientDecision_Unknown
        {
            get
            {
                if ((this.mrdPrefundingBalance_ClientDecision_Unknown == null))
                {
                    this.mrdPrefundingBalance_ClientDecision_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_ClientDecision_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdPrefundingBalance_ClientDecision_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_ClientDecision_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_ClientDecision_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_PBGCAgreement_Yes : WinWindow
    {
        
        public wGI_PrefundingBalance_PBGCAgreement_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_PBGCAgreement_Yes
        {
            get
            {
                if ((this.mrdPrefundingBalance_PBGCAgreement_Yes == null))
                {
                    this.mrdPrefundingBalance_PBGCAgreement_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_PBGCAgreement_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdPrefundingBalance_PBGCAgreement_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_PBGCAgreement_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_PBGCAgreement_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_PBGCAgreement_No : WinWindow
    {
        
        public wGI_PrefundingBalance_PBGCAgreement_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_PBGCAgreement_No
        {
            get
            {
                if ((this.mrdPrefundingBalance_PBGCAgreement_No == null))
                {
                    this.mrdPrefundingBalance_PBGCAgreement_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_PBGCAgreement_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdPrefundingBalance_PBGCAgreement_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_PBGCAgreement_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_PBGCAgreement_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PrefundingBalance_PBGCAgreement_Unknown : WinWindow
    {
        
        public wGI_PrefundingBalance_PBGCAgreement_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrefundingBalance_PBGCAgreement_Unknown
        {
            get
            {
                if ((this.mrdPrefundingBalance_PBGCAgreement_Unknown == null))
                {
                    this.mrdPrefundingBalance_PBGCAgreement_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrefundingBalance_PBGCAgreement_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdPrefundingBalance_PBGCAgreement_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrefundingBalance_PBGCAgreement_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrefundingBalance_PBGCAgreement_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_PlanSponsor_Yes : WinWindow
    {
        
        public wGI_BenefitRestriction_PlanSponsor_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_PlanSponsor_Yes
        {
            get
            {
                if ((this.mrdBenefitRestriction_PlanSponsor_Yes == null))
                {
                    this.mrdBenefitRestriction_PlanSponsor_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_PlanSponsor_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdBenefitRestriction_PlanSponsor_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_PlanSponsor_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_PlanSponsor_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_PlanSponsor_No : WinWindow
    {
        
        public wGI_BenefitRestriction_PlanSponsor_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_PlanSponsor_No
        {
            get
            {
                if ((this.mrdBenefitRestriction_PlanSponsor_No == null))
                {
                    this.mrdBenefitRestriction_PlanSponsor_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_PlanSponsor_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdBenefitRestriction_PlanSponsor_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_PlanSponsor_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_PlanSponsor_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_PlanSponsor_Unknown : WinWindow
    {
        
        public wGI_BenefitRestriction_PlanSponsor_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_PlanSponsor_Unknown
        {
            get
            {
                if ((this.mrdBenefitRestriction_PlanSponsor_Unknown == null))
                {
                    this.mrdBenefitRestriction_PlanSponsor_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_PlanSponsor_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdBenefitRestriction_PlanSponsor_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_PlanSponsor_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_PlanSponsor_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_IncreaseDueToPlanAmendment : WinWindow
    {
        
        public wGI_BenefitRestriction_IncreaseDueToPlanAmendment(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBenefitRestriction_IncreaseDueToPlanAmendment txtBenefitRestriction_IncreaseDueToPlanAmendment
        {
            get
            {
                if ((this.mtxtBenefitRestriction_IncreaseDueToPlanAmendment == null))
                {
                    this.mtxtBenefitRestriction_IncreaseDueToPlanAmendment = new txtBenefitRestriction_IncreaseDueToPlanAmendment(this);
                }
                return this.mtxtBenefitRestriction_IncreaseDueToPlanAmendment;
            }
        }
        #endregion
        
        #region Fields
        private txtBenefitRestriction_IncreaseDueToPlanAmendment mtxtBenefitRestriction_IncreaseDueToPlanAmendment;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBenefitRestriction_IncreaseDueToPlanAmendment : WinEdit
    {
        
        public txtBenefitRestriction_IncreaseDueToPlanAmendment(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_ExemptFrom_Yes : WinWindow
    {
        
        public wGI_BenefitRestriction_ExemptFrom_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_ExemptFrom_Yes
        {
            get
            {
                if ((this.mrdBenefitRestriction_ExemptFrom_Yes == null))
                {
                    this.mrdBenefitRestriction_ExemptFrom_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_ExemptFrom_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdBenefitRestriction_ExemptFrom_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_ExemptFrom_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_ExemptFrom_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_ExemptFrom_No : WinWindow
    {
        
        public wGI_BenefitRestriction_ExemptFrom_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_ExemptFrom_No
        {
            get
            {
                if ((this.mrdBenefitRestriction_ExemptFrom_No == null))
                {
                    this.mrdBenefitRestriction_ExemptFrom_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_ExemptFrom_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdBenefitRestriction_ExemptFrom_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_ExemptFrom_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_ExemptFrom_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_ExemptFrom_Unknown : WinWindow
    {
        
        public wGI_BenefitRestriction_ExemptFrom_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_ExemptFrom_Unknown
        {
            get
            {
                if ((this.mrdBenefitRestriction_ExemptFrom_Unknown == null))
                {
                    this.mrdBenefitRestriction_ExemptFrom_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_ExemptFrom_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdBenefitRestriction_ExemptFrom_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_ExemptFrom_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_ExemptFrom_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_IncreaseDueToShutdown : WinWindow
    {
        
        public wGI_BenefitRestriction_IncreaseDueToShutdown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtBenefitRestriction_IncreaseDueToShutdown txtBenefitRestriction_IncreaseDueToShutdown
        {
            get
            {
                if ((this.mtxtBenefitRestriction_IncreaseDueToShutdown == null))
                {
                    this.mtxtBenefitRestriction_IncreaseDueToShutdown = new txtBenefitRestriction_IncreaseDueToShutdown(this);
                }
                return this.mtxtBenefitRestriction_IncreaseDueToShutdown;
            }
        }
        #endregion
        
        #region Fields
        private txtBenefitRestriction_IncreaseDueToShutdown mtxtBenefitRestriction_IncreaseDueToShutdown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtBenefitRestriction_IncreaseDueToShutdown : WinEdit
    {
        
        public txtBenefitRestriction_IncreaseDueToShutdown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_OriginalPlanEffectiveDate : WinWindow
    {
        
        public wGI_BenefitRestriction_OriginalPlanEffectiveDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtOriginalPlanEffectiveDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cboBenefitRestriction_OriginalPlanEffectiveDate cboBenefitRestriction_OriginalPlanEffectiveDate
        {
            get
            {
                if ((this.mcboBenefitRestriction_OriginalPlanEffectiveDate == null))
                {
                    this.mcboBenefitRestriction_OriginalPlanEffectiveDate = new cboBenefitRestriction_OriginalPlanEffectiveDate(this);
                }
                return this.mcboBenefitRestriction_OriginalPlanEffectiveDate;
            }
        }
        #endregion
        
        #region Fields
        private cboBenefitRestriction_OriginalPlanEffectiveDate mcboBenefitRestriction_OriginalPlanEffectiveDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cboBenefitRestriction_OriginalPlanEffectiveDate : WinComboBox
    {
        
        public cboBenefitRestriction_OriginalPlanEffectiveDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtBenefitRestriction_OriginalPlanEffectiveDate
        {
            get
            {
                if ((this.mtxtBenefitRestriction_OriginalPlanEffectiveDate == null))
                {
                    this.mtxtBenefitRestriction_OriginalPlanEffectiveDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtBenefitRestriction_OriginalPlanEffectiveDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtBenefitRestriction_OriginalPlanEffectiveDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtBenefitRestriction_OriginalPlanEffectiveDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtBenefitRestriction_OriginalPlanEffectiveDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_PlanWasFrozen_Yes : WinWindow
    {
        
        public wGI_BenefitRestriction_PlanWasFrozen_Yes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTrue";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_PlanWasFrozen_Yes
        {
            get
            {
                if ((this.mrdBenefitRestriction_PlanWasFrozen_Yes == null))
                {
                    this.mrdBenefitRestriction_PlanWasFrozen_Yes = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_PlanWasFrozen_Yes.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yes";
                    this.mrdBenefitRestriction_PlanWasFrozen_Yes.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_PlanWasFrozen_Yes;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_PlanWasFrozen_Yes;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_PlanWasFrozen_No : WinWindow
    {
        
        public wGI_BenefitRestriction_PlanWasFrozen_No(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFalse";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_PlanWasFrozen_No
        {
            get
            {
                if ((this.mrdBenefitRestriction_PlanWasFrozen_No == null))
                {
                    this.mrdBenefitRestriction_PlanWasFrozen_No = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_PlanWasFrozen_No.SearchProperties[WinRadioButton.PropertyNames.Name] = "No";
                    this.mrdBenefitRestriction_PlanWasFrozen_No.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_PlanWasFrozen_No;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_PlanWasFrozen_No;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_BenefitRestriction_PlanWasFrozen_Unknown : WinWindow
    {
        
        public wGI_BenefitRestriction_PlanWasFrozen_Unknown(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNull";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdBenefitRestriction_PlanWasFrozen_Unknown
        {
            get
            {
                if ((this.mrdBenefitRestriction_PlanWasFrozen_Unknown == null))
                {
                    this.mrdBenefitRestriction_PlanWasFrozen_Unknown = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdBenefitRestriction_PlanWasFrozen_Unknown.SearchProperties[WinRadioButton.PropertyNames.Name] = "Unknown";
                    this.mrdBenefitRestriction_PlanWasFrozen_Unknown.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdBenefitRestriction_PlanWasFrozen_Unknown;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdBenefitRestriction_PlanWasFrozen_Unknown;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_CompanyName : WinWindow
    {
        
        public wGI_CompanyName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtCompanyName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtCompanyName
        {
            get
            {
                if ((this.mtxtCompanyName == null))
                {
                    this.mtxtCompanyName = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtCompanyName.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtCompanyName;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtCompanyName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Telephone : WinWindow
    {
        
        public wGI_Telephone(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTelephoneNumber";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtTelephone
        {
            get
            {
                if ((this.mtxtTelephone == null))
                {
                    this.mtxtTelephone = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtTelephone.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtTelephone;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtTelephone;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_AddressLine1 : WinWindow
    {
        
        public wGI_AddressLine1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAddressLine1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtAddressLine1
        {
            get
            {
                if ((this.mtxtAddressLine1 == null))
                {
                    this.mtxtAddressLine1 = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtAddressLine1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtAddressLine1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtAddressLine1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_AddressLine2 : WinWindow
    {
        
        public wGI_AddressLine2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAddressLine2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtAddressLine2
        {
            get
            {
                if ((this.mtxtAddressLine2 == null))
                {
                    this.mtxtAddressLine2 = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtAddressLine2.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtAddressLine2;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtAddressLine2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_AddressLine3 : WinWindow
    {
        
        public wGI_AddressLine3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAddressLine3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtAddressLine3
        {
            get
            {
                if ((this.mtxtAddressLine3 == null))
                {
                    this.mtxtAddressLine3 = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtAddressLine3.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtAddressLine3;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtAddressLine3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Signer1Name : WinWindow
    {
        
        public wGI_Signer1Name(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSigner1Name";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtSigner1Name
        {
            get
            {
                if ((this.mtxtSigner1Name == null))
                {
                    this.mtxtSigner1Name = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtSigner1Name.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtSigner1Name;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtSigner1Name;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Signer1Credential : WinWindow
    {
        
        public wGI_Signer1Credential(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSigner1Credentials";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtSigner1Credential
        {
            get
            {
                if ((this.mtxtSigner1Credential == null))
                {
                    this.mtxtSigner1Credential = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtSigner1Credential.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtSigner1Credential;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtSigner1Credential;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Signer2Name : WinWindow
    {
        
        public wGI_Signer2Name(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSigner2Name";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtSigner2Name
        {
            get
            {
                if ((this.mtxtSigner2Name == null))
                {
                    this.mtxtSigner2Name = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtSigner2Name.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtSigner2Name;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtSigner2Name;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_Signer2Credential : WinWindow
    {
        
        public wGI_Signer2Credential(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSigner2Credentials";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtSigner2Credential
        {
            get
            {
                if ((this.mtxtSigner2Credential == null))
                {
                    this.mtxtSigner2Credential = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtSigner2Credential.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtSigner2Credential;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtSigner2Credential;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PeerReviewName : WinWindow
    {
        
        public wGI_PeerReviewName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPeerReviewActuaryName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtPeerReviewName
        {
            get
            {
                if ((this.mtxtPeerReviewName == null))
                {
                    this.mtxtPeerReviewName = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtPeerReviewName.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtPeerReviewName;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtPeerReviewName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGI_PeerReviewCredentials : WinWindow
    {
        
        public wGI_PeerReviewCredentials(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPeerReviewActuaryCredentials";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtPeerReviewCredentials
        {
            get
            {
                if ((this.mtxtPeerReviewCredentials == null))
                {
                    this.mtxtPeerReviewCredentials = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtPeerReviewCredentials.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtPeerReviewCredentials;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtPeerReviewCredentials;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPYR_SummaryView : WinWindow
    {
        
        public wPYR_SummaryView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbSummaryView";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdSummaryView
        {
            get
            {
                if ((this.mrdSummaryView == null))
                {
                    this.mrdSummaryView = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdSummaryView.SearchProperties[WinRadioButton.PropertyNames.Name] = "Summary View";
                    this.mrdSummaryView.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdSummaryView;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdSummaryView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPYR_DetailView : WinWindow
    {
        
        public wPYR_DetailView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbDetailView";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdDetailView
        {
            get
            {
                if ((this.mrdDetailView == null))
                {
                    this.mrdDetailView = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdDetailView.SearchProperties[WinRadioButton.PropertyNames.Name] = "Detail View";
                    this.mrdDetailView.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdDetailView;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdDetailView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPYR_Tab : WinWindow
    {
        
        public wPYR_Tab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tabDetailView";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public listTab listTab
        {
            get
            {
                if ((this.mlistTab == null))
                {
                    this.mlistTab = new listTab(this);
                }
                return this.mlistTab;
            }
        }
        #endregion
        
        #region Fields
        private listTab mlistTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class listTab : WinTabList
    {
        
        public listTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Notes";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTabPage item
        {
            get
            {
                if ((this.mitem == null))
                {
                    this.mitem = new WinTabPage(this);
                    #region Search Criteria
                    this.mitem.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mitem.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mitem;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mitem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEL_UseEstimatedLiabilities : WinWindow
    {
        
        public wEL_UseEstimatedLiabilities(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkUseEstimateLibs";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkUseEstimatedLiabilities
        {
            get
            {
                if ((this.mchkUseEstimatedLiabilities == null))
                {
                    this.mchkUseEstimatedLiabilities = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkUseEstimatedLiabilities.SearchProperties[WinCheckBox.PropertyNames.Name] = "Use estimated liabilities";
                    this.mchkUseEstimatedLiabilities.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkUseEstimatedLiabilities;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkUseEstimatedLiabilities;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEL_FundingService : WinWindow
    {
        
        public wEL_FundingService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbValServs";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboFundingService
        {
            get
            {
                if ((this.mcboFundingService == null))
                {
                    this.mcboFundingService = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboFundingService.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboFundingService;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboFundingService;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEL_ValuationNode : WinWindow
    {
        
        public wEL_ValuationNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbValNodes";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboValuationNode
        {
            get
            {
                if ((this.mcboValuationNode == null))
                {
                    this.mcboValuationNode = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboValuationNode.SearchProperties[WinComboBox.PropertyNames.Name] = "Valuation node";
                    this.mcboValuationNode.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboValuationNode;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboValuationNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssets_AssetsSnapshots_FPGrid : WinWindow
    {
        
        public wAssets_AssetsSnapshots_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadSnapshot";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssets_ActualBenefitPayments_FPGrid : WinWindow
    {
        
        public wAssets_ActualBenefitPayments_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ActualBenefitPaymentsSpread";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt : WinWindow
    {
        
        public wCommon_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAssets_WeightsForAssetsGL_FPGrid : WinWindow
    {
        
        public wAssets_WeightsForAssetsGL_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadWeightsForAssetGL";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Weights for Asset Gain Loss";
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_InterestRates_Rate_GC : WinWindow
    {
        
        public wGP_InterestRates_Rate_GC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "28";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_InterestRates_Rate_Slv : WinWindow
    {
        
        public wGP_InterestRates_Rate_Slv(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "27";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_InterestRates_AsOfDate_GC : WinWindow
    {
        
        public wGP_InterestRates_AsOfDate_GC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtInterestRateGoingConcern";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_InterestRates_AsOfDate_Slv : WinWindow
    {
        
        public wGP_InterestRates_AsOfDate_Slv(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtInterestRateSolvency";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo1 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo1(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo1 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo1 : WinComboBox
    {
        
        public cbo1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_InterestRates_YearsForShortFall_GC : WinWindow
    {
        
        public wGP_InterestRates_YearsForShortFall_GC(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "30";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_InterestRates_YearsForShortFall_Slv : WinWindow
    {
        
        public wGP_InterestRates_YearsForShortFall_Slv(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "29";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt3 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt3(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt3 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt3 : WinEdit
    {
        
        public txt3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Solvency_Termination_chk : WinWindow
    {
        
        public wGP_Expense_Solvency_Termination_chk(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbSolvencyTEP";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "%";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Solvency_Termination_C : WinWindow
    {
        
        public wGP_Expense_Solvency_Termination_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Solvency_Termination_P : WinWindow
    {
        
        public wGP_Expense_Solvency_Termination_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Windup_Termination_chk : WinWindow
    {
        
        public wGP_Expense_Windup_Termination_chk(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbWindup";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Windup_Termination_C : WinWindow
    {
        
        public wGP_Expense_Windup_Termination_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Windup_Termination_P : WinWindow
    {
        
        public wGP_Expense_Windup_Termination_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Common_txt_C : WinWindow
    {
        
        public wGP_Expense_Common_txt_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt4 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt4(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt4 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt4 : WinEdit
    {
        
        public txt4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Instance] = "3";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_Expense_Common_txt_P : WinWindow
    {
        
        public wGP_Expense_Common_txt_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt5 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt5(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt5 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt5 : WinEdit
    {
        
        public txt5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_OtherLiabilities_DifferenceInCircumstance : WinWindow
    {
        
        public wGP_OtherLiabilities_DifferenceInCircumstance(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "31";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt6 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt6(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt6 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt6 : WinEdit
    {
        
        public txt6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_OtherLiabilities_ValueOfExcludedBenefits : WinWindow
    {
        
        public wGP_OtherLiabilities_ValueOfExcludedBenefits(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "32";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt7 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt7(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt7 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt7 : WinEdit
    {
        
        public txt7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_RoundingScalingOptions_Thousands69470000 : WinWindow
    {
        
        public wGP_RoundingScalingOptions_Thousands69470000(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbRoundingThousandsFull";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Thousands (69,470,000)";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_OtherAssets_FPGrid : WinWindow
    {
        
        public wGP_OtherAssets_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadOtherAssets";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Other Liabilities";
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_OtherLiabilities_FPGrid : WinWindow
    {
        
        public wGP_OtherLiabilities_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadOtherLiabilities";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGP_FPGrid_Common_txt : WinWindow
    {
        
        public wGP_FPGrid_Common_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "17";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_PlanDates_OriginalPlanEffectiveDate : WinWindow
    {
        
        public wPVR_PlanDates_OriginalPlanEffectiveDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtOriginalPlanEffectiveDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo2 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo2(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo2 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo2 : WinComboBox
    {
        
        public cbo2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_PlanDates_EndOfPlanYear : WinWindow
    {
        
        public wPVR_PlanDates_EndOfPlanYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtEopYear";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo3 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo3(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo3 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo3 : WinComboBox
    {
        
        public cbo3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_PlanDates_ValuationDate : WinWindow
    {
        
        public wPVR_PlanDates_ValuationDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dpValuationDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo4 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo4(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo4 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo4 : WinComboBox
    {
        
        public cbo4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_PlanDates_ValuationYear : WinWindow
    {
        
        public wPVR_PlanDates_ValuationYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "intValuationYear";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_LiabilityMeasures_SolvencyTerm : WinWindow
    {
        
        public wPVR_LiabilityMeasures_SolvencyTerm(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt8 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt8(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt8 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt8 : WinEdit
    {
        
        public txt8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_LiabilityMeasures_WindUpTerm : WinWindow
    {
        
        public wPVR_LiabilityMeasures_WindUpTerm(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt9 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt9(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt9 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt9 : WinEdit
    {
        
        public txt9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_Assets_BenefitPayments : WinWindow
    {
        
        public wPVR_Assets_BenefitPayments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "48";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt10 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt10(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt10 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt10 : WinEdit
    {
        
        public txt10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_Assets_PensionPayments : WinWindow
    {
        
        public wPVR_Assets_PensionPayments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "40";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt11 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt11(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt11 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt11 : WinEdit
    {
        
        public txt11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_Assets_ActuarialValueOfAssets : WinWindow
    {
        
        public wPVR_Assets_ActuarialValueOfAssets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "46";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt12 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt12(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt12 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt12 : WinEdit
    {
        
        public txt12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_NormalCost_Refresh : WinWindow
    {
        
        public wPVR_NormalCost_Refresh(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "linkLabel8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt13 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt13(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt13 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt13 : WinText
    {
        
        public txt13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Refresh";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinHyperlink link
        {
            get
            {
                if ((this.mlink == null))
                {
                    this.mlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Refresh";
                    this.mlink.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_Assets_MarketValueOfAssets : WinWindow
    {
        
        public wPVR_Assets_MarketValueOfAssets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "52";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt14 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt14(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt14 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt14 : WinEdit
    {
        
        public txt14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumEditorEdit1
        {
            get
            {
                if ((this.mUINumEditorEdit1 == null))
                {
                    this.mUINumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContributions_Date : WinWindow
    {
        
        public wContributions_Date(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlDateEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt15 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt15(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt15 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt15 : WinEdit
    {
        
        public txt15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UICtlDateEditorEdit1
        {
            get
            {
                if ((this.mUICtlDateEditorEdit1 == null))
                {
                    this.mUICtlDateEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUICtlDateEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUICtlDateEditorEdit1.SearchProperties[WinEdit.PropertyNames.Instance] = "3";
                    this.mUICtlDateEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUICtlDateEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICtlDateEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContributions_Employer_Category : WinWindow
    {
        
        public wContributions_Employer_Category(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wContributions_Com_txt : WinWindow
    {
        
        public wContributions_Com_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlNumEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt16 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt16(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt16 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt16 : WinEdit
    {
        
        public txt16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UICtlNumEditorEdit1
        {
            get
            {
                if ((this.mUICtlNumEditorEdit1 == null))
                {
                    this.mUICtlNumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUICtlNumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Selected text";
                    this.mUICtlNumEditorEdit1.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUICtlNumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUICtlNumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICtlNumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActuarialValueOfAssets_MarketValue : WinWindow
    {
        
        public wActuarialValueOfAssets_MarketValue(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbtMarketValue";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdMarketValue
        {
            get
            {
                if ((this.mrdMarketValue == null))
                {
                    this.mrdMarketValue = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdMarketValue.SearchProperties[WinRadioButton.PropertyNames.Name] = "Market Value";
                    this.mrdMarketValue.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdMarketValue;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdMarketValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActuarialValueOfAssets_Average : WinWindow
    {
        
        public wActuarialValueOfAssets_Average(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbtAverage";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdAverage
        {
            get
            {
                if ((this.mrdAverage == null))
                {
                    this.mrdAverage = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdAverage.SearchProperties[WinRadioButton.PropertyNames.Name] = "Average";
                    this.mrdAverage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdAverage;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdAverage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActuarialValueOfAssets_Custom : WinWindow
    {
        
        public wActuarialValueOfAssets_Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbtCustom";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdCustom
        {
            get
            {
                if ((this.mrdCustom == null))
                {
                    this.mrdCustom = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdCustom.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom";
                    this.mrdCustom.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActuarialValueOfAssets : WinWindow
    {
        
        public wActuarialValueOfAssets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtActuarialValueOfAssets txtActuarialValueOfAssets
        {
            get
            {
                if ((this.mtxtActuarialValueOfAssets == null))
                {
                    this.mtxtActuarialValueOfAssets = new txtActuarialValueOfAssets(this);
                }
                return this.mtxtActuarialValueOfAssets;
            }
        }
        #endregion
        
        #region Fields
        private txtActuarialValueOfAssets mtxtActuarialValueOfAssets;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtActuarialValueOfAssets : WinEdit
    {
        
        public txtActuarialValueOfAssets(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wApplyMarketValueCorridor : WinWindow
    {
        
        public wApplyMarketValueCorridor(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkActuarialValueOfAssets";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chkApplyMarketValueCorridor
        {
            get
            {
                if ((this.mchkApplyMarketValueCorridor == null))
                {
                    this.mchkApplyMarketValueCorridor = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkApplyMarketValueCorridor.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply 90% - 110% market value corridor";
                    this.mchkApplyMarketValueCorridor.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchkApplyMarketValueCorridor;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkApplyMarketValueCorridor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITabDetailViewWindow : WinWindow
    {
        
        public UITabDetailViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tabDetailView";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UINotesTabList UINotesTabList
        {
            get
            {
                if ((this.mUINotesTabList == null))
                {
                    this.mUINotesTabList = new UINotesTabList(this);
                }
                return this.mUINotesTabList;
            }
        }
        #endregion
        
        #region Fields
        private UINotesTabList mUINotesTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINotesTabList : WinTabList
    {
        
        public UINotesTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Notes";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIPreliminaryResultsanTabPage
        {
            get
            {
                if ((this.mUIPreliminaryResultsanTabPage == null))
                {
                    this.mUIPreliminaryResultsanTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIPreliminaryResultsanTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Preliminary Results and PBGC Premiums";
                    this.mUIPreliminaryResultsanTabPage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIPreliminaryResultsanTabPage;
            }
        }
        
        public WinTabPage UIFTAPsBenefitRestrictTabPage
        {
            get
            {
                if ((this.mUIFTAPsBenefitRestrictTabPage == null))
                {
                    this.mUIFTAPsBenefitRestrictTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIFTAPsBenefitRestrictTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "FTAPs, Benefit Restrictions, and At-Risk Determination";
                    this.mUIFTAPsBenefitRestrictTabPage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIFTAPsBenefitRestrictTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIPreliminaryResultsanTabPage;
        
        private WinTabPage mUIFTAPsBenefitRestrictTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPVR_PlanDates_BeginningOfPlanYear : WinWindow
    {
        
        public wPVR_PlanDates_BeginningOfPlanYear(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtBopYear";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public cbo5 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo5(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo5 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo5 : WinComboBox
    {
        
        public cbo5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDtEopYearWindow : WinWindow
    {
        
        public UIDtEopYearWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtEopYear";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIItemComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDtEopYearEdit
        {
            get
            {
                if ((this.mUIDtEopYearEdit == null))
                {
                    this.mUIDtEopYearEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDtEopYearEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUIDtEopYearEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIDtEopYearEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDtEopYearEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wComBox : WinWindow
    {
        
        public wComBox()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wbox wbox
        {
            get
            {
                if ((this.mwbox == null))
                {
                    this.mwbox = new wbox(this);
                }
                return this.mwbox;
            }
        }
        #endregion
        
        #region Fields
        private wbox mwbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wbox : WinWindow
    {
        
        public wbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.LISTBOX", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wList wList
        {
            get
            {
                if ((this.mwList == null))
                {
                    this.mwList = new wList(this);
                }
                return this.mwList;
            }
        }
        #endregion
        
        #region Fields
        private wList mwList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wList : WinList
    {
        
        public wList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public WinListItem item
        {
            get
            {
                if ((this.mitem == null))
                {
                    this.mitem = new WinListItem(this);
                    #region Search Criteria
                    this.mitem.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    #endregion
                }
                return this.mitem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mitem;
        #endregion
    }
}
