// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.FromToAgeClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class FromToAge
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinClient uISprFromToAgeClient = this.wRetirementStudio.UISprFromToAgeWindow.UISprFromToAgeClient;
            #endregion

            // Click 'sprFromToAge' client
            Mouse.Click(uISprFromToAgeClient, new Point(47, 67));

            // Click 'sprFromToAge' client
            Mouse.Click(uISprFromToAgeClient, new Point(52, 89));
        }
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wInsertRow wInsertRow
        {
            get
            {
                if ((this.mwInsertRow == null))
                {
                    this.mwInsertRow = new wInsertRow(this);
                }
                return this.mwInsertRow;
            }
        }
        
        public wFPGrid wFPGrid
        {
            get
            {
                if ((this.mwFPGrid == null))
                {
                    this.mwFPGrid = new wFPGrid(this);
                }
                return this.mwFPGrid;
            }
        }
        
        public wCommonTXT_FPGrid wCommonTXT_FPGrid
        {
            get
            {
                if ((this.mwCommonTXT_FPGrid == null))
                {
                    this.mwCommonTXT_FPGrid = new wCommonTXT_FPGrid(this);
                }
                return this.mwCommonTXT_FPGrid;
            }
        }
        
        public wCommonCombo_FPGrid wCommonCombo_FPGrid
        {
            get
            {
                if ((this.mwCommonCombo_FPGrid == null))
                {
                    this.mwCommonCombo_FPGrid = new wCommonCombo_FPGrid(this);
                }
                return this.mwCommonCombo_FPGrid;
            }
        }
        
        public wCompareAbove_Comparison wCompareAbove_Comparison
        {
            get
            {
                if ((this.mwCompareAbove_Comparison == null))
                {
                    this.mwCompareAbove_Comparison = new wCompareAbove_Comparison(this);
                }
                return this.mwCompareAbove_Comparison;
            }
        }
        
        public wCompareAbove_FromToAge wCompareAbove_FromToAge
        {
            get
            {
                if ((this.mwCompareAbove_FromToAge == null))
                {
                    this.mwCompareAbove_FromToAge = new wCompareAbove_FromToAge(this);
                }
                return this.mwCompareAbove_FromToAge;
            }
        }
        
        public wAddRow wAddRow
        {
            get
            {
                if ((this.mwAddRow == null))
                {
                    this.mwAddRow = new wAddRow(this);
                }
                return this.mwAddRow;
            }
        }
        
        public wCustomCode wCustomCode
        {
            get
            {
                if ((this.mwCustomCode == null))
                {
                    this.mwCustomCode = new wCustomCode(this);
                }
                return this.mwCustomCode;
            }
        }
        
        public wStandard wStandard
        {
            get
            {
                if ((this.mwStandard == null))
                {
                    this.mwStandard = new wStandard(this);
                }
                return this.mwStandard;
            }
        }
        
        public UISprFromToAgeWindow UISprFromToAgeWindow
        {
            get
            {
                if ((this.mUISprFromToAgeWindow == null))
                {
                    this.mUISprFromToAgeWindow = new UISprFromToAgeWindow(this);
                }
                return this.mUISprFromToAgeWindow;
            }
        }
        
        public wCommonDate_FPGrid wCommonDate_FPGrid
        {
            get
            {
                if ((this.mwCommonDate_FPGrid == null))
                {
                    this.mwCommonDate_FPGrid = new wCommonDate_FPGrid(this);
                }
                return this.mwCommonDate_FPGrid;
            }
        }
        
        public wNoservicegrowin wNoservicegrowin
        {
            get
            {
                if ((this.mwNoservicegrowin == null))
                {
                    this.mwNoservicegrowin = new wNoservicegrowin(this);
                }
                return this.mwNoservicegrowin;
            }
        }
        
        public wFreezeServiceAtValuation wFreezeServiceAtValuation
        {
            get
            {
                if ((this.mwFreezeServiceAtValuation == null))
                {
                    this.mwFreezeServiceAtValuation = new wFreezeServiceAtValuation(this);
                }
                return this.mwFreezeServiceAtValuation;
            }
        }
        
        public wDateConstant wDateConstant
        {
            get
            {
                if ((this.mwDateConstant == null))
                {
                    this.mwDateConstant = new wDateConstant(this);
                }
                return this.mwDateConstant;
            }
        }
        #endregion
        
        #region Fields
        private wInsertRow mwInsertRow;
        
        private wFPGrid mwFPGrid;
        
        private wCommonTXT_FPGrid mwCommonTXT_FPGrid;
        
        private wCommonCombo_FPGrid mwCommonCombo_FPGrid;
        
        private wCompareAbove_Comparison mwCompareAbove_Comparison;
        
        private wCompareAbove_FromToAge mwCompareAbove_FromToAge;
        
        private wAddRow mwAddRow;
        
        private wCustomCode mwCustomCode;
        
        private wStandard mwStandard;
        
        private UISprFromToAgeWindow mUISprFromToAgeWindow;
        
        private wCommonDate_FPGrid mwCommonDate_FPGrid;
        
        private wNoservicegrowin mwNoservicegrowin;
        
        private wFreezeServiceAtValuation mwFreezeServiceAtValuation;
        
        private wDateConstant mwDateConstant;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wInsertRow : WinWindow
    {
        
        public wInsertRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnInsertRow";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnInsertRow
        {
            get
            {
                if ((this.mbtnInsertRow == null))
                {
                    this.mbtnInsertRow = new WinButton(this);
                    #region Search Criteria
                    this.mbtnInsertRow.SearchProperties[WinButton.PropertyNames.Name] = "Insert Row";
                    this.mbtnInsertRow.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mbtnInsertRow.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnInsertRow;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnInsertRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFPGrid : WinWindow
    {
        
        public wFPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprFromToAge";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommonTXT_FPGrid : WinWindow
    {
        
        public wCommonTXT_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt1
        {
            get
            {
                if ((this.mtxt1 == null))
                {
                    this.mtxt1 = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt1.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxt1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommonCombo_FPGrid : WinWindow
    {
        
        public wCommonCombo_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCompareAbove_Comparison : WinWindow
    {
        
        public wCompareAbove_Comparison(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboComparisonType";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboComparison
        {
            get
            {
                if ((this.mcboComparison == null))
                {
                    this.mcboComparison = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboComparison.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcboComparison.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboComparison;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboComparison;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCompareAbove_FromToAge : WinWindow
    {
        
        public wCompareAbove_FromToAge(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboComparisonFromToAge";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboFromToAge
        {
            get
            {
                if ((this.mcboFromToAge == null))
                {
                    this.mcboFromToAge = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboFromToAge.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mcboFromToAge.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboFromToAge;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboFromToAge;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAddRow : WinWindow
    {
        
        public wAddRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAddRow";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnAddRow
        {
            get
            {
                if ((this.mbtnAddRow == null))
                {
                    this.mbtnAddRow = new WinButton(this);
                    #region Search Criteria
                    this.mbtnAddRow.SearchProperties[WinButton.PropertyNames.Name] = "Add Row";
                    this.mbtnAddRow.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mbtnAddRow.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnAddRow;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnAddRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCustomCode : WinWindow
    {
        
        public wCustomCode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCustomCode";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Custom code";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStandard : WinWindow
    {
        
        public wStandard(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radStandard";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Standard";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISprFromToAgeWindow : WinWindow
    {
        
        public UISprFromToAgeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprFromToAge";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient UISprFromToAgeClient
        {
            get
            {
                if ((this.mUISprFromToAgeClient == null))
                {
                    this.mUISprFromToAgeClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISprFromToAgeClient.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUISprFromToAgeClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISprFromToAgeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommonDate_FPGrid : WinWindow
    {
        
        public wCommonDate_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlDateEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UICtlDateEditorEdit1
        {
            get
            {
                if ((this.mUICtlDateEditorEdit1 == null))
                {
                    this.mUICtlDateEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUICtlDateEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUICtlDateEditorEdit1.SearchProperties[WinEdit.PropertyNames.Instance] = "2";
                    this.mUICtlDateEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUICtlDateEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICtlDateEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNoservicegrowin : WinWindow
    {
        
        public wNoservicegrowin(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkNoServiceGrowIn";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "No service grow-in";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFreezeServiceAtValuation : WinWindow
    {
        
        public wFreezeServiceAtValuation(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkFreezeServiceatValdateforSolWUpNoGrowinCalc";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chx
        {
            get
            {
                if ((this.mchx == null))
                {
                    this.mchx = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchx.SearchProperties[WinCheckBox.PropertyNames.Name] = "Freeze service at valuation date for Solvency/Wind-Up no grow-in calculations";
                    this.mchx.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchx;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchx;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDateConstant : WinWindow
    {
        
        public wDateConstant(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlDateEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UICtlDateEditorEdit1
        {
            get
            {
                if ((this.mUICtlDateEditorEdit1 == null))
                {
                    this.mUICtlDateEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUICtlDateEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUICtlDateEditorEdit1.SearchProperties[WinEdit.PropertyNames.Instance] = "3";
                    this.mUICtlDateEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUICtlDateEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICtlDateEditorEdit1;
        #endregion
    }
}
