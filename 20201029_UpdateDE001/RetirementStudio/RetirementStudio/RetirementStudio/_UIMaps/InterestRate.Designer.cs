// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.InterestRateClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class InterestRate
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wPrescribedRates wPrescribedRates
        {
            get
            {
                if ((this.mwPrescribedRates == null))
                {
                    this.mwPrescribedRates = new wPrescribedRates(this);
                }
                return this.mwPrescribedRates;
            }
        }
        
        public wSameStructureForAllPeriods wSameStructureForAllPeriods
        {
            get
            {
                if ((this.mwSameStructureForAllPeriods == null))
                {
                    this.mwSameStructureForAllPeriods = new wSameStructureForAllPeriods(this);
                }
                return this.mwSameStructureForAllPeriods;
            }
        }
        
        public wTimeBased wTimeBased
        {
            get
            {
                if ((this.mwTimeBased == null))
                {
                    this.mwTimeBased = new wTimeBased(this);
                }
                return this.mwTimeBased;
            }
        }
        
        public wSameStructureForAllPeriods_Rate_PercentIcon wSameStructureForAllPeriods_Rate_PercentIcon
        {
            get
            {
                if ((this.mwSameStructureForAllPeriods_Rate_PercentIcon == null))
                {
                    this.mwSameStructureForAllPeriods_Rate_PercentIcon = new wSameStructureForAllPeriods_Rate_PercentIcon(this);
                }
                return this.mwSameStructureForAllPeriods_Rate_PercentIcon;
            }
        }
        
        public wSameStructureForAllPeriods_Rate_TIcon wSameStructureForAllPeriods_Rate_TIcon
        {
            get
            {
                if ((this.mwSameStructureForAllPeriods_Rate_TIcon == null))
                {
                    this.mwSameStructureForAllPeriods_Rate_TIcon = new wSameStructureForAllPeriods_Rate_TIcon(this);
                }
                return this.mwSameStructureForAllPeriods_Rate_TIcon;
            }
        }
        
        public wSameStructureForAllPeriods_Rate_txt wSameStructureForAllPeriods_Rate_txt
        {
            get
            {
                if ((this.mwSameStructureForAllPeriods_Rate_txt == null))
                {
                    this.mwSameStructureForAllPeriods_Rate_txt = new wSameStructureForAllPeriods_Rate_txt(this);
                }
                return this.mwSameStructureForAllPeriods_Rate_txt;
            }
        }
        
        public wSameStructureForAllPeriods_Rate_cbo wSameStructureForAllPeriods_Rate_cbo
        {
            get
            {
                if ((this.mwSameStructureForAllPeriods_Rate_cbo == null))
                {
                    this.mwSameStructureForAllPeriods_Rate_cbo = new wSameStructureForAllPeriods_Rate_cbo(this);
                }
                return this.mwSameStructureForAllPeriods_Rate_cbo;
            }
        }
        
        public wPrescribedRates_Rate wPrescribedRates_Rate
        {
            get
            {
                if ((this.mwPrescribedRates_Rate == null))
                {
                    this.mwPrescribedRates_Rate = new wPrescribedRates_Rate(this);
                }
                return this.mwPrescribedRates_Rate;
            }
        }
        
        public wPrecribedRates_AsOfDate wPrecribedRates_AsOfDate
        {
            get
            {
                if ((this.mwPrecribedRates_AsOfDate == null))
                {
                    this.mwPrecribedRates_AsOfDate = new wPrecribedRates_AsOfDate(this);
                }
                return this.mwPrecribedRates_AsOfDate;
            }
        }
        
        public wForActuarialEquivalence wForActuarialEquivalence
        {
            get
            {
                if ((this.mwForActuarialEquivalence == null))
                {
                    this.mwForActuarialEquivalence = new wForActuarialEquivalence(this);
                }
                return this.mwForActuarialEquivalence;
            }
        }
        
        public wForwardRate wForwardRate
        {
            get
            {
                if ((this.mwForwardRate == null))
                {
                    this.mwForwardRate = new wForwardRate(this);
                }
                return this.mwForwardRate;
            }
        }
        
        public wAddRow wAddRow
        {
            get
            {
                if ((this.mwAddRow == null))
                {
                    this.mwAddRow = new wAddRow(this);
                }
                return this.mwAddRow;
            }
        }
        
        public wTimeBased_FPGrid wTimeBased_FPGrid
        {
            get
            {
                if ((this.mwTimeBased_FPGrid == null))
                {
                    this.mwTimeBased_FPGrid = new wTimeBased_FPGrid(this);
                }
                return this.mwTimeBased_FPGrid;
            }
        }
        
        public wTableField wTableField
        {
            get
            {
                if ((this.mwTableField == null))
                {
                    this.mwTableField = new wTableField(this);
                }
                return this.mwTableField;
            }
        }
        
        public wSpotRate wSpotRate
        {
            get
            {
                if ((this.mwSpotRate == null))
                {
                    this.mwSpotRate = new wSpotRate(this);
                }
                return this.mwSpotRate;
            }
        }
        
        public wTimeBased_BlankArea wTimeBased_BlankArea
        {
            get
            {
                if ((this.mwTimeBased_BlankArea == null))
                {
                    this.mwTimeBased_BlankArea = new wTimeBased_BlankArea(this);
                }
                return this.mwTimeBased_BlankArea;
            }
        }
        
        public wPreDecrementPrePostCommencement wPreDecrementPrePostCommencement
        {
            get
            {
                if ((this.mwPreDecrementPrePostCommencement == null))
                {
                    this.mwPreDecrementPrePostCommencement = new wPreDecrementPrePostCommencement(this);
                }
                return this.mwPreDecrementPrePostCommencement;
            }
        }
        
        public wPreDecrementRate wPreDecrementRate
        {
            get
            {
                if ((this.mwPreDecrementRate == null))
                {
                    this.mwPreDecrementRate = new wPreDecrementRate(this);
                }
                return this.mwPreDecrementRate;
            }
        }
        
        public wPreCommencementRate wPreCommencementRate
        {
            get
            {
                if ((this.mwPreCommencementRate == null))
                {
                    this.mwPreCommencementRate = new wPreCommencementRate(this);
                }
                return this.mwPreCommencementRate;
            }
        }
        
        public wPostCommencementRate wPostCommencementRate
        {
            get
            {
                if ((this.mwPostCommencementRate == null))
                {
                    this.mwPostCommencementRate = new wPostCommencementRate(this);
                }
                return this.mwPostCommencementRate;
            }
        }
        
        public wPrepostcommencement wPrepostcommencement
        {
            get
            {
                if ((this.mwPrepostcommencement == null))
                {
                    this.mwPrepostcommencement = new wPrepostcommencement(this);
                }
                return this.mwPrepostcommencement;
            }
        }
        
        public wPreCommencementRate_T wPreCommencementRate_T
        {
            get
            {
                if ((this.mwPreCommencementRate_T == null))
                {
                    this.mwPreCommencementRate_T = new wPreCommencementRate_T(this);
                }
                return this.mwPreCommencementRate_T;
            }
        }
        
        public wCom_C wCom_C
        {
            get
            {
                if ((this.mwCom_C == null))
                {
                    this.mwCom_C = new wCom_C(this);
                }
                return this.mwCom_C;
            }
        }
        
        public wCom_T wCom_T
        {
            get
            {
                if ((this.mwCom_T == null))
                {
                    this.mwCom_T = new wCom_T(this);
                }
                return this.mwCom_T;
            }
        }
        
        public wPreDecrementRate_txt wPreDecrementRate_txt
        {
            get
            {
                if ((this.mwPreDecrementRate_txt == null))
                {
                    this.mwPreDecrementRate_txt = new wPreDecrementRate_txt(this);
                }
                return this.mwPreDecrementRate_txt;
            }
        }
        
        public wPostDecrementRate_txt wPostDecrementRate_txt
        {
            get
            {
                if ((this.mwPostDecrementRate_txt == null))
                {
                    this.mwPostDecrementRate_txt = new wPostDecrementRate_txt(this);
                }
                return this.mwPostDecrementRate_txt;
            }
        }
        
        public wNonprescribedratesw wNonprescribedratesw
        {
            get
            {
                if ((this.mwNonprescribedratesw == null))
                {
                    this.mwNonprescribedratesw = new wNonprescribedratesw(this);
                }
                return this.mwNonprescribedratesw;
            }
        }
        
        public wNonPrescribe_txt wNonPrescribe_txt
        {
            get
            {
                if ((this.mwNonPrescribe_txt == null))
                {
                    this.mwNonPrescribe_txt = new wNonPrescribe_txt(this);
                }
                return this.mwNonPrescribe_txt;
            }
        }
        
        public wYieldcurve wYieldcurve
        {
            get
            {
                if ((this.mwYieldcurve == null))
                {
                    this.mwYieldcurve = new wYieldcurve(this);
                }
                return this.mwYieldcurve;
            }
        }
        
        public wAdjustments wAdjustments
        {
            get
            {
                if ((this.mwAdjustments == null))
                {
                    this.mwAdjustments = new wAdjustments(this);
                }
                return this.mwAdjustments;
            }
        }
        
        public wForwarDuration wForwarDuration
        {
            get
            {
                if ((this.mwForwarDuration == null))
                {
                    this.mwForwarDuration = new wForwarDuration(this);
                }
                return this.mwForwarDuration;
            }
        }
        
        public wAdjustment1Operat wAdjustment1Operat
        {
            get
            {
                if ((this.mwAdjustment1Operat == null))
                {
                    this.mwAdjustment1Operat = new wAdjustment1Operat(this);
                }
                return this.mwAdjustment1Operat;
            }
        }
        
        public wAdjustment2Operat wAdjustment2Operat
        {
            get
            {
                if ((this.mwAdjustment2Operat == null))
                {
                    this.mwAdjustment2Operat = new wAdjustment2Operat(this);
                }
                return this.mwAdjustment2Operat;
            }
        }
        
        public wAdjustment3Operat wAdjustment3Operat
        {
            get
            {
                if ((this.mwAdjustment3Operat == null))
                {
                    this.mwAdjustment3Operat = new wAdjustment3Operat(this);
                }
                return this.mwAdjustment3Operat;
            }
        }
        
        public wComm_C_txt wComm_C_txt
        {
            get
            {
                if ((this.mwComm_C_txt == null))
                {
                    this.mwComm_C_txt = new wComm_C_txt(this);
                }
                return this.mwComm_C_txt;
            }
        }
        
        public wComm_P_txt wComm_P_txt
        {
            get
            {
                if ((this.mwComm_P_txt == null))
                {
                    this.mwComm_P_txt = new wComm_P_txt(this);
                }
                return this.mwComm_P_txt;
            }
        }
        
        public wAdjustment1_C wAdjustment1_C
        {
            get
            {
                if ((this.mwAdjustment1_C == null))
                {
                    this.mwAdjustment1_C = new wAdjustment1_C(this);
                }
                return this.mwAdjustment1_C;
            }
        }
        
        public wForwardDuration_txt wForwardDuration_txt
        {
            get
            {
                if ((this.mwForwardDuration_txt == null))
                {
                    this.mwForwardDuration_txt = new wForwardDuration_txt(this);
                }
                return this.mwForwardDuration_txt;
            }
        }
        
        public wAdjustment2_P wAdjustment2_P
        {
            get
            {
                if ((this.mwAdjustment2_P == null))
                {
                    this.mwAdjustment2_P = new wAdjustment2_P(this);
                }
                return this.mwAdjustment2_P;
            }
        }
        
        public wAdjustment3_C wAdjustment3_C
        {
            get
            {
                if ((this.mwAdjustment3_C == null))
                {
                    this.mwAdjustment3_C = new wAdjustment3_C(this);
                }
                return this.mwAdjustment3_C;
            }
        }
        
        public wAdjustment3_P wAdjustment3_P
        {
            get
            {
                if ((this.mwAdjustment3_P == null))
                {
                    this.mwAdjustment3_P = new wAdjustment3_P(this);
                }
                return this.mwAdjustment3_P;
            }
        }
        
        public wAdjustment2_C wAdjustment2_C
        {
            get
            {
                if ((this.mwAdjustment2_C == null))
                {
                    this.mwAdjustment2_C = new wAdjustment2_C(this);
                }
                return this.mwAdjustment2_C;
            }
        }
        
        public wCom_V wCom_V
        {
            get
            {
                if ((this.mwCom_V == null))
                {
                    this.mwCom_V = new wCom_V(this);
                }
                return this.mwCom_V;
            }
        }
        #endregion
        
        #region Fields
        private wPrescribedRates mwPrescribedRates;
        
        private wSameStructureForAllPeriods mwSameStructureForAllPeriods;
        
        private wTimeBased mwTimeBased;
        
        private wSameStructureForAllPeriods_Rate_PercentIcon mwSameStructureForAllPeriods_Rate_PercentIcon;
        
        private wSameStructureForAllPeriods_Rate_TIcon mwSameStructureForAllPeriods_Rate_TIcon;
        
        private wSameStructureForAllPeriods_Rate_txt mwSameStructureForAllPeriods_Rate_txt;
        
        private wSameStructureForAllPeriods_Rate_cbo mwSameStructureForAllPeriods_Rate_cbo;
        
        private wPrescribedRates_Rate mwPrescribedRates_Rate;
        
        private wPrecribedRates_AsOfDate mwPrecribedRates_AsOfDate;
        
        private wForActuarialEquivalence mwForActuarialEquivalence;
        
        private wForwardRate mwForwardRate;
        
        private wAddRow mwAddRow;
        
        private wTimeBased_FPGrid mwTimeBased_FPGrid;
        
        private wTableField mwTableField;
        
        private wSpotRate mwSpotRate;
        
        private wTimeBased_BlankArea mwTimeBased_BlankArea;
        
        private wPreDecrementPrePostCommencement mwPreDecrementPrePostCommencement;
        
        private wPreDecrementRate mwPreDecrementRate;
        
        private wPreCommencementRate mwPreCommencementRate;
        
        private wPostCommencementRate mwPostCommencementRate;
        
        private wPrepostcommencement mwPrepostcommencement;
        
        private wPreCommencementRate_T mwPreCommencementRate_T;
        
        private wCom_C mwCom_C;
        
        private wCom_T mwCom_T;
        
        private wPreDecrementRate_txt mwPreDecrementRate_txt;
        
        private wPostDecrementRate_txt mwPostDecrementRate_txt;
        
        private wNonprescribedratesw mwNonprescribedratesw;
        
        private wNonPrescribe_txt mwNonPrescribe_txt;
        
        private wYieldcurve mwYieldcurve;
        
        private wAdjustments mwAdjustments;
        
        private wForwarDuration mwForwarDuration;
        
        private wAdjustment1Operat mwAdjustment1Operat;
        
        private wAdjustment2Operat mwAdjustment2Operat;
        
        private wAdjustment3Operat mwAdjustment3Operat;
        
        private wComm_C_txt mwComm_C_txt;
        
        private wComm_P_txt mwComm_P_txt;
        
        private wAdjustment1_C mwAdjustment1_C;
        
        private wForwardDuration_txt mwForwardDuration_txt;
        
        private wAdjustment2_P mwAdjustment2_P;
        
        private wAdjustment3_C mwAdjustment3_C;
        
        private wAdjustment3_P mwAdjustment3_P;
        
        private wAdjustment2_C mwAdjustment2_C;
        
        private wCom_V mwCom_V;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrescribedRates : WinWindow
    {
        
        public wPrescribedRates(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPrescribedRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdPrescribedRates
        {
            get
            {
                if ((this.mrdPrescribedRates == null))
                {
                    this.mrdPrescribedRates = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdPrescribedRates.SearchProperties[WinRadioButton.PropertyNames.Name] = "Prescribed rates";
                    this.mrdPrescribedRates.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdPrescribedRates;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdPrescribedRates;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameStructureForAllPeriods : WinWindow
    {
        
        public wSameStructureForAllPeriods(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSameStructure";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdSameStructureForAllPeriods
        {
            get
            {
                if ((this.mrdSameStructureForAllPeriods == null))
                {
                    this.mrdSameStructureForAllPeriods = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdSameStructureForAllPeriods.SearchProperties[WinRadioButton.PropertyNames.Name] = "Same structure for all periods";
                    this.mrdSameStructureForAllPeriods.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdSameStructureForAllPeriods;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdSameStructureForAllPeriods;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTimeBased : WinWindow
    {
        
        public wTimeBased(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTimeBased";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rdTimeBased
        {
            get
            {
                if ((this.mrdTimeBased == null))
                {
                    this.mrdTimeBased = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrdTimeBased.SearchProperties[WinRadioButton.PropertyNames.Name] = "Time based";
                    this.mrdTimeBased.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrdTimeBased;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrdTimeBased;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameStructureForAllPeriods_Rate_PercentIcon : WinWindow
    {
        
        public wSameStructureForAllPeriods_Rate_PercentIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnPercentIcon
        {
            get
            {
                if ((this.mbtnPercentIcon == null))
                {
                    this.mbtnPercentIcon = new WinButton(this);
                    #region Search Criteria
                    this.mbtnPercentIcon.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtnPercentIcon.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnPercentIcon;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnPercentIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameStructureForAllPeriods_Rate_TIcon : WinWindow
    {
        
        public wSameStructureForAllPeriods_Rate_TIcon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btnTIcon
        {
            get
            {
                if ((this.mbtnTIcon == null))
                {
                    this.mbtnTIcon = new WinButton(this);
                    #region Search Criteria
                    this.mbtnTIcon.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtnTIcon.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtnTIcon;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtnTIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameStructureForAllPeriods_Rate_txt : WinWindow
    {
        
        public wSameStructureForAllPeriods_Rate_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtRate txtRate
        {
            get
            {
                if ((this.mtxtRate == null))
                {
                    this.mtxtRate = new txtRate(this);
                }
                return this.mtxtRate;
            }
        }
        #endregion
        
        #region Fields
        private txtRate mtxtRate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtRate : WinEdit
    {
        
        public txtRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameStructureForAllPeriods_Rate_cbo : WinWindow
    {
        
        public wSameStructureForAllPeriods_Rate_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboRate
        {
            get
            {
                if ((this.mcboRate == null))
                {
                    this.mcboRate = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboRate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboRate;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboRate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrescribedRates_Rate : WinWindow
    {
        
        public wPrescribedRates_Rate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPrescribedRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cboRate
        {
            get
            {
                if ((this.mcboRate == null))
                {
                    this.mcboRate = new WinComboBox(this);
                    #region Search Criteria
                    this.mcboRate.SearchProperties[WinComboBox.PropertyNames.Name] = "Prescribed rates";
                    this.mcboRate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcboRate;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcboRate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrecribedRates_AsOfDate : WinWindow
    {
        
        public wPrecribedRates_AsOfDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtePrescribedRatesAsOfDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wAsOfDate wAsOfDate
        {
            get
            {
                if ((this.mwAsOfDate == null))
                {
                    this.mwAsOfDate = new wAsOfDate(this);
                }
                return this.mwAsOfDate;
            }
        }
        #endregion
        
        #region Fields
        private wAsOfDate mwAsOfDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAsOfDate : WinComboBox
    {
        
        public wAsOfDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txtAsOfDate
        {
            get
            {
                if ((this.mtxtAsOfDate == null))
                {
                    this.mtxtAsOfDate = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtAsOfDate.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxtAsOfDate.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxtAsOfDate;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtAsOfDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wForActuarialEquivalence : WinWindow
    {
        
        public wForActuarialEquivalence(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboAlignRatesWith";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "For actuarial equivalence align rates with";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wForwardRate : WinWindow
    {
        
        public wForwardRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFowardRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Forward rate";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAddRow : WinWindow
    {
        
        public wAddRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAddRow";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "Add Row";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTimeBased_FPGrid : WinWindow
    {
        
        public wTimeBased_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadTimeBased";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTableField : WinWindow
    {
        
        public wTableField(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlNumEditor";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txtNumOfYears txtNumOfYears
        {
            get
            {
                if ((this.mtxtNumOfYears == null))
                {
                    this.mtxtNumOfYears = new txtNumOfYears(this);
                }
                return this.mtxtNumOfYears;
            }
        }
        
        public txtRate1 txtRate
        {
            get
            {
                if ((this.mtxtRate == null))
                {
                    this.mtxtRate = new txtRate1(this);
                }
                return this.mtxtRate;
            }
        }
        #endregion
        
        #region Fields
        private txtNumOfYears mtxtNumOfYears;
        
        private txtRate1 mtxtRate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtNumOfYears : WinEdit
    {
        
        public txtNumOfYears(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UICtlNumEditorEdit1
        {
            get
            {
                if ((this.mUICtlNumEditorEdit1 == null))
                {
                    this.mUICtlNumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUICtlNumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUICtlNumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUICtlNumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICtlNumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txtRate1 : WinEdit
    {
        
        public txtRate1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UICtlNumEditorEdit1
        {
            get
            {
                if ((this.mUICtlNumEditorEdit1 == null))
                {
                    this.mUICtlNumEditorEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUICtlNumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUICtlNumEditorEdit1.SearchProperties[WinEdit.PropertyNames.Instance] = "6";
                    this.mUICtlNumEditorEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUICtlNumEditorEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICtlNumEditorEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSpotRate : WinWindow
    {
        
        public wSpotRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSpotRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Spot rate";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTimeBased_BlankArea : WinWindow
    {
        
        public wTimeBased_BlankArea(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "pnlTimeBased";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient pane
        {
            get
            {
                if ((this.mpane == null))
                {
                    this.mpane = new WinClient(this);
                    #region Search Criteria
                    this.mpane.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mpane;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mpane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPreDecrementPrePostCommencement : WinWindow
    {
        
        public wPreDecrementPrePostCommencement(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPreDecrementPrePostCommencement";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Pre decrement-pre/post commencement";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPreDecrementRate : WinWindow
    {
        
        public wPreDecrementRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPreDecrementRate2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPreDecrementRate2Edit1
        {
            get
            {
                if ((this.mUITxtPreDecrementRate2Edit1 == null))
                {
                    this.mUITxtPreDecrementRate2Edit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPreDecrementRate2Edit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUITxtPreDecrementRate2Edit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITxtPreDecrementRate2Edit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPreDecrementRate2Edit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPreCommencementRate : WinWindow
    {
        
        public wPreCommencementRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPreCommencementRate2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt1 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt1(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt1 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt1 : WinEdit
    {
        
        public txt1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPreCommencementRaEdit1
        {
            get
            {
                if ((this.mUITxtPreCommencementRaEdit1 == null))
                {
                    this.mUITxtPreCommencementRaEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPreCommencementRaEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUITxtPreCommencementRaEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITxtPreCommencementRaEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPreCommencementRaEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPostCommencementRate : WinWindow
    {
        
        public wPostCommencementRate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPostCommencementRate2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt2 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt2(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt2 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt2 : WinEdit
    {
        
        public txt2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPostCommencementREdit1
        {
            get
            {
                if ((this.mUITxtPostCommencementREdit1 == null))
                {
                    this.mUITxtPostCommencementREdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPostCommencementREdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUITxtPostCommencementREdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITxtPostCommencementREdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPostCommencementREdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPrepostcommencement : WinWindow
    {
        
        public wPrepostcommencement(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnPrePostCommencement";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Pre/post commencement";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPreCommencementRate_T : WinWindow
    {
        
        public wPreCommencementRate_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboTableName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCom_C : WinWindow
    {
        
        public wCom_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCom_T : WinWindow
    {
        
        public wCom_T(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnTable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "T";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPreDecrementRate_txt : WinWindow
    {
        
        public wPreDecrementRate_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPreDecrementRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt3 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt3(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt3 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt3 : WinEdit
    {
        
        public txt3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPreDecrementRateEdit1
        {
            get
            {
                if ((this.mUITxtPreDecrementRateEdit1 == null))
                {
                    this.mUITxtPreDecrementRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPreDecrementRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUITxtPreDecrementRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITxtPreDecrementRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPreDecrementRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPostDecrementRate_txt : WinWindow
    {
        
        public wPostDecrementRate_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPostDecrementRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt4 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt4(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt4 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt4 : WinEdit
    {
        
        public txt4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPostDecrementRateEdit1
        {
            get
            {
                if ((this.mUITxtPostDecrementRateEdit1 == null))
                {
                    this.mUITxtPostDecrementRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPostDecrementRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUITxtPostDecrementRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUITxtPostDecrementRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPostDecrementRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNonprescribedratesw : WinWindow
    {
        
        public wNonprescribedratesw(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbNonPrescribedRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Non prescribed rates";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wNonPrescribe_txt : WinWindow
    {
        
        public wNonPrescribe_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt5 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt5(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt5 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt5 : WinEdit
    {
        
        public txt5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wYieldcurve : WinWindow
    {
        
        public wYieldcurve(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnYieldCurve";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Yield curve";
                    this.mrd.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustments : WinWindow
    {
        
        public wAdjustments(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkAdjustments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Adjustments";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wForwarDuration : WinWindow
    {
        
        public wForwarDuration(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkForwardDuration";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Forward duration";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment1Operat : WinWindow
    {
        
        public wAdjustment1Operat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAdjustment1Operator";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Post-decrement rate";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment2Operat : WinWindow
    {
        
        public wAdjustment2Operat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAdjustment2Operator";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment3Operat : WinWindow
    {
        
        public wAdjustment3Operat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAdjustment3Operator";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wComm_C_txt : WinWindow
    {
        
        public wComm_C_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt6 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt6(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt6 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt6 : WinEdit
    {
        
        public txt6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wComm_P_txt : WinWindow
    {
        
        public wComm_P_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditRate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt7 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt7(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt7 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt7 : WinEdit
    {
        
        public txt7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditRateEdit1
        {
            get
            {
                if ((this.mUI_numEditRateEdit1 == null))
                {
                    this.mUI_numEditRateEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditRateEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUI_numEditRateEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUI_numEditRateEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditRateEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment1_C : WinWindow
    {
        
        public wAdjustment1_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wForwardDuration_txt : WinWindow
    {
        
        public wForwardDuration_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudForwardDuration";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public txt8 txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt8(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt8 mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt8 : WinEdit
    {
        
        public txt8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UINudForwardDurationEdit1
        {
            get
            {
                if ((this.mUINudForwardDurationEdit1 == null))
                {
                    this.mUINudForwardDurationEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUINudForwardDurationEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mUINudForwardDurationEdit1.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINudForwardDurationEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINudForwardDurationEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment2_P : WinWindow
    {
        
        public wAdjustment2_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment3_C : WinWindow
    {
        
        public wAdjustment3_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment3_P : WinWindow
    {
        
        public wAdjustment3_P(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnRate";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "%";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wAdjustment2_C : WinWindow
    {
        
        public wAdjustment2_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCom_V : WinWindow
    {
        
        public wCom_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
}
