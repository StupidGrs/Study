// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.TrancheDefinitionClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class TrancheDefinition
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        
        public wTrancheDefinition wTrancheDefinition
        {
            get
            {
                if ((this.mwTrancheDefinition == null))
                {
                    this.mwTrancheDefinition = new wTrancheDefinition();
                }
                return this.mwTrancheDefinition;
            }
        }
        
        public wFPGrid_Common_List wFPGrid_Common_List
        {
            get
            {
                if ((this.mwFPGrid_Common_List == null))
                {
                    this.mwFPGrid_Common_List = new wFPGrid_Common_List();
                }
                return this.mwFPGrid_Common_List;
            }
        }
        
        public wTrancheDefinition_Pen wTrancheDefinition_Pen
        {
            get
            {
                if ((this.mwTrancheDefinition_Pen == null))
                {
                    this.mwTrancheDefinition_Pen = new wTrancheDefinition_Pen();
                }
                return this.mwTrancheDefinition_Pen;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        
        private wTrancheDefinition mwTrancheDefinition;
        
        private wFPGrid_Common_List mwFPGrid_Common_List;
        
        private wTrancheDefinition_Pen mwTrancheDefinition_Pen;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wActive_Service wActive_Service
        {
            get
            {
                if ((this.mwActive_Service == null))
                {
                    this.mwActive_Service = new wActive_Service(this);
                }
                return this.mwActive_Service;
            }
        }
        
        public wDeferred_Service wDeferred_Service
        {
            get
            {
                if ((this.mwDeferred_Service == null))
                {
                    this.mwDeferred_Service = new wDeferred_Service(this);
                }
                return this.mwDeferred_Service;
            }
        }
        
        public wDeferred_ApplyTrancheSplits wDeferred_ApplyTrancheSplits
        {
            get
            {
                if ((this.mwDeferred_ApplyTrancheSplits == null))
                {
                    this.mwDeferred_ApplyTrancheSplits = new wDeferred_ApplyTrancheSplits(this);
                }
                return this.mwDeferred_ApplyTrancheSplits;
            }
        }
        
        public wPensioner_Service wPensioner_Service
        {
            get
            {
                if ((this.mwPensioner_Service == null))
                {
                    this.mwPensioner_Service = new wPensioner_Service(this);
                }
                return this.mwPensioner_Service;
            }
        }
        
        public wPensioner_ApplyTrancheSplits wPensioner_ApplyTrancheSplits
        {
            get
            {
                if ((this.mwPensioner_ApplyTrancheSplits == null))
                {
                    this.mwPensioner_ApplyTrancheSplits = new wPensioner_ApplyTrancheSplits(this);
                }
                return this.mwPensioner_ApplyTrancheSplits;
            }
        }
        
        public wActive_Definitions_FPGrid wActive_Definitions_FPGrid
        {
            get
            {
                if ((this.mwActive_Definitions_FPGrid == null))
                {
                    this.mwActive_Definitions_FPGrid = new wActive_Definitions_FPGrid(this);
                }
                return this.mwActive_Definitions_FPGrid;
            }
        }
        
        public wDeferred_Definitions_FPGrid wDeferred_Definitions_FPGrid
        {
            get
            {
                if ((this.mwDeferred_Definitions_FPGrid == null))
                {
                    this.mwDeferred_Definitions_FPGrid = new wDeferred_Definitions_FPGrid(this);
                }
                return this.mwDeferred_Definitions_FPGrid;
            }
        }
        
        public wPensioner_Definitions_FPGrid wPensioner_Definitions_FPGrid
        {
            get
            {
                if ((this.mwPensioner_Definitions_FPGrid == null))
                {
                    this.mwPensioner_Definitions_FPGrid = new wPensioner_Definitions_FPGrid(this);
                }
                return this.mwPensioner_Definitions_FPGrid;
            }
        }
        
        public wSelectTotalBenefitField_FPGrid_Deferred wSelectTotalBenefitField_FPGrid_Deferred
        {
            get
            {
                if ((this.mwSelectTotalBenefitField_FPGrid_Deferred == null))
                {
                    this.mwSelectTotalBenefitField_FPGrid_Deferred = new wSelectTotalBenefitField_FPGrid_Deferred(this);
                }
                return this.mwSelectTotalBenefitField_FPGrid_Deferred;
            }
        }
        
        public wCommon_txt_Internal wCommon_txt_Internal
        {
            get
            {
                if ((this.mwCommon_txt_Internal == null))
                {
                    this.mwCommon_txt_Internal = new wCommon_txt_Internal(this);
                }
                return this.mwCommon_txt_Internal;
            }
        }
        
        public wCommon_cbo wCommon_cbo
        {
            get
            {
                if ((this.mwCommon_cbo == null))
                {
                    this.mwCommon_cbo = new wCommon_cbo(this);
                }
                return this.mwCommon_cbo;
            }
        }
        #endregion
        
        #region Fields
        private wActive_Service mwActive_Service;
        
        private wDeferred_Service mwDeferred_Service;
        
        private wDeferred_ApplyTrancheSplits mwDeferred_ApplyTrancheSplits;
        
        private wPensioner_Service mwPensioner_Service;
        
        private wPensioner_ApplyTrancheSplits mwPensioner_ApplyTrancheSplits;
        
        private wActive_Definitions_FPGrid mwActive_Definitions_FPGrid;
        
        private wDeferred_Definitions_FPGrid mwDeferred_Definitions_FPGrid;
        
        private wPensioner_Definitions_FPGrid mwPensioner_Definitions_FPGrid;
        
        private wSelectTotalBenefitField_FPGrid_Deferred mwSelectTotalBenefitField_FPGrid_Deferred;
        
        private wCommon_txt_Internal mwCommon_txt_Internal;
        
        private wCommon_cbo mwCommon_cbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_Service : WinWindow
    {
        
        public wActive_Service(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboActiveCategoryService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Service";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDeferred_Service : WinWindow
    {
        
        public wDeferred_Service(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboDeferredCategoryService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Service";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDeferred_ApplyTrancheSplits : WinWindow
    {
        
        public wDeferred_ApplyTrancheSplits(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkDeferredTrancheSplit";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply tranche splits to total inactive deferred benefits";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPensioner_Service : WinWindow
    {
        
        public wPensioner_Service(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPensionerCategoryService";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Service";
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPensioner_ApplyTrancheSplits : WinWindow
    {
        
        public wPensioner_ApplyTrancheSplits(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkPensionerTrancheSplit";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Apply tranche splits to total inactive pensioner benefits";
                    this.mchk.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_Definitions_FPGrid : WinWindow
    {
        
        public wActive_Definitions_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadActiveDefinitions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Definitions";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDeferred_Definitions_FPGrid : WinWindow
    {
        
        public wDeferred_Definitions_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadDeferredDefinitions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Definitions";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPensioner_Definitions_FPGrid : WinWindow
    {
        
        public wPensioner_Definitions_FPGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadPensionerDefinitions";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Definitions";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSelectTotalBenefitField_FPGrid_Deferred : WinWindow
    {
        
        public wSelectTotalBenefitField_FPGrid_Deferred(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadDeferredTotalBenefits";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties[WinControl.PropertyNames.Name] = "Select total benefit fields";
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt_Internal : WinWindow
    {
        
        public wCommon_txt_Internal(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "InputTextBox_Internal";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo : WinWindow
    {
        
        public wCommon_cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.COMBOBOX", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTrancheDefinition : WinWindow
    {
        
        public wTrancheDefinition()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Tranche Definition", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public wOK wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK(this);
                }
                return this.mwOK;
            }
        }
        
        public wName wName
        {
            get
            {
                if ((this.mwName == null))
                {
                    this.mwName = new wName(this);
                }
                return this.mwName;
            }
        }
        
        public wActives wActives
        {
            get
            {
                if ((this.mwActives == null))
                {
                    this.mwActives = new wActives(this);
                }
                return this.mwActives;
            }
        }
        
        public wDeferred wDeferred
        {
            get
            {
                if ((this.mwDeferred == null))
                {
                    this.mwDeferred = new wDeferred(this);
                }
                return this.mwDeferred;
            }
        }
        
        public wPensioner wPensioner
        {
            get
            {
                if ((this.mwPensioner == null))
                {
                    this.mwPensioner = new wPensioner(this);
                }
                return this.mwPensioner;
            }
        }
        
        public wStartDate wStartDate
        {
            get
            {
                if ((this.mwStartDate == null))
                {
                    this.mwStartDate = new wStartDate(this);
                }
                return this.mwStartDate;
            }
        }
        
        public wEndDate wEndDate
        {
            get
            {
                if ((this.mwEndDate == null))
                {
                    this.mwEndDate = new wEndDate(this);
                }
                return this.mwEndDate;
            }
        }
        
        public wGMPApplies wGMPApplies
        {
            get
            {
                if ((this.mwGMPApplies == null))
                {
                    this.mwGMPApplies = new wGMPApplies(this);
                }
                return this.mwGMPApplies;
            }
        }
        
        public wActive_PPFTranche wActive_PPFTranche
        {
            get
            {
                if ((this.mwActive_PPFTranche == null))
                {
                    this.mwActive_PPFTranche = new wActive_PPFTranche(this);
                }
                return this.mwActive_PPFTranche;
            }
        }
        
        public wActive_FullySalaryRelated wActive_FullySalaryRelated
        {
            get
            {
                if ((this.mwActive_FullySalaryRelated == null))
                {
                    this.mwActive_FullySalaryRelated = new wActive_FullySalaryRelated(this);
                }
                return this.mwActive_FullySalaryRelated;
            }
        }
        
        public wActive_MalePPF_V wActive_MalePPF_V
        {
            get
            {
                if ((this.mwActive_MalePPF_V == null))
                {
                    this.mwActive_MalePPF_V = new wActive_MalePPF_V(this);
                }
                return this.mwActive_MalePPF_V;
            }
        }
        
        public wActive_MalePPF_C wActive_MalePPF_C
        {
            get
            {
                if ((this.mwActive_MalePPF_C == null))
                {
                    this.mwActive_MalePPF_C = new wActive_MalePPF_C(this);
                }
                return this.mwActive_MalePPF_C;
            }
        }
        
        public wActive_FemalePPF_V wActive_FemalePPF_V
        {
            get
            {
                if ((this.mwActive_FemalePPF_V == null))
                {
                    this.mwActive_FemalePPF_V = new wActive_FemalePPF_V(this);
                }
                return this.mwActive_FemalePPF_V;
            }
        }
        
        public wActive_FemalePPF_C wActive_FemalePPF_C
        {
            get
            {
                if ((this.mwActive_FemalePPF_C == null))
                {
                    this.mwActive_FemalePPF_C = new wActive_FemalePPF_C(this);
                }
                return this.mwActive_FemalePPF_C;
            }
        }
        
        public wActive_MaleSolvency_V wActive_MaleSolvency_V
        {
            get
            {
                if ((this.mwActive_MaleSolvency_V == null))
                {
                    this.mwActive_MaleSolvency_V = new wActive_MaleSolvency_V(this);
                }
                return this.mwActive_MaleSolvency_V;
            }
        }
        
        public wActive_MaleSolvency_C wActive_MaleSolvency_C
        {
            get
            {
                if ((this.mwActive_MaleSolvency_C == null))
                {
                    this.mwActive_MaleSolvency_C = new wActive_MaleSolvency_C(this);
                }
                return this.mwActive_MaleSolvency_C;
            }
        }
        
        public wActive_FemaleSolvency_V wActive_FemaleSolvency_V
        {
            get
            {
                if ((this.mwActive_FemaleSolvency_V == null))
                {
                    this.mwActive_FemaleSolvency_V = new wActive_FemaleSolvency_V(this);
                }
                return this.mwActive_FemaleSolvency_V;
            }
        }
        
        public wActive_FemaleSolvency_C wActive_FemaleSolvency_C
        {
            get
            {
                if ((this.mwActive_FemaleSolvency_C == null))
                {
                    this.mwActive_FemaleSolvency_C = new wActive_FemaleSolvency_C(this);
                }
                return this.mwActive_FemaleSolvency_C;
            }
        }
        
        public wCommon_cbo1 wCommon_cbo
        {
            get
            {
                if ((this.mwCommon_cbo == null))
                {
                    this.mwCommon_cbo = new wCommon_cbo1(this);
                }
                return this.mwCommon_cbo;
            }
        }
        
        public wCommon_txt wCommon_txt
        {
            get
            {
                if ((this.mwCommon_txt == null))
                {
                    this.mwCommon_txt = new wCommon_txt(this);
                }
                return this.mwCommon_txt;
            }
        }
        
        public wDef_PPFTranche wDef_PPFTranche
        {
            get
            {
                if ((this.mwDef_PPFTranche == null))
                {
                    this.mwDef_PPFTranche = new wDef_PPFTranche(this);
                }
                return this.mwDef_PPFTranche;
            }
        }
        
        public wDef_MalePPF_V wDef_MalePPF_V
        {
            get
            {
                if ((this.mwDef_MalePPF_V == null))
                {
                    this.mwDef_MalePPF_V = new wDef_MalePPF_V(this);
                }
                return this.mwDef_MalePPF_V;
            }
        }
        
        public wDef_MalePPF_C wDef_MalePPF_C
        {
            get
            {
                if ((this.mwDef_MalePPF_C == null))
                {
                    this.mwDef_MalePPF_C = new wDef_MalePPF_C(this);
                }
                return this.mwDef_MalePPF_C;
            }
        }
        
        public wDef_FemalePPF_V wDef_FemalePPF_V
        {
            get
            {
                if ((this.mwDef_FemalePPF_V == null))
                {
                    this.mwDef_FemalePPF_V = new wDef_FemalePPF_V(this);
                }
                return this.mwDef_FemalePPF_V;
            }
        }
        
        public wDef_FemalePPF_C wDef_FemalePPF_C
        {
            get
            {
                if ((this.mwDef_FemalePPF_C == null))
                {
                    this.mwDef_FemalePPF_C = new wDef_FemalePPF_C(this);
                }
                return this.mwDef_FemalePPF_C;
            }
        }
        
        public wDef_MaleSolvency_V wDef_MaleSolvency_V
        {
            get
            {
                if ((this.mwDef_MaleSolvency_V == null))
                {
                    this.mwDef_MaleSolvency_V = new wDef_MaleSolvency_V(this);
                }
                return this.mwDef_MaleSolvency_V;
            }
        }
        
        public wDef_MaleSolvency_C wDef_MaleSolvency_C
        {
            get
            {
                if ((this.mwDef_MaleSolvency_C == null))
                {
                    this.mwDef_MaleSolvency_C = new wDef_MaleSolvency_C(this);
                }
                return this.mwDef_MaleSolvency_C;
            }
        }
        
        public wDef_FemaleSolvency_V wDef_FemaleSolvency_V
        {
            get
            {
                if ((this.mwDef_FemaleSolvency_V == null))
                {
                    this.mwDef_FemaleSolvency_V = new wDef_FemaleSolvency_V(this);
                }
                return this.mwDef_FemaleSolvency_V;
            }
        }
        
        public wDef_FemaleSolvency_C wDef_FemaleSolvency_C
        {
            get
            {
                if ((this.mwDef_FemaleSolvency_C == null))
                {
                    this.mwDef_FemaleSolvency_C = new wDef_FemaleSolvency_C(this);
                }
                return this.mwDef_FemaleSolvency_C;
            }
        }
        #endregion
        
        #region Fields
        private wOK mwOK;
        
        private wName mwName;
        
        private wActives mwActives;
        
        private wDeferred mwDeferred;
        
        private wPensioner mwPensioner;
        
        private wStartDate mwStartDate;
        
        private wEndDate mwEndDate;
        
        private wGMPApplies mwGMPApplies;
        
        private wActive_PPFTranche mwActive_PPFTranche;
        
        private wActive_FullySalaryRelated mwActive_FullySalaryRelated;
        
        private wActive_MalePPF_V mwActive_MalePPF_V;
        
        private wActive_MalePPF_C mwActive_MalePPF_C;
        
        private wActive_FemalePPF_V mwActive_FemalePPF_V;
        
        private wActive_FemalePPF_C mwActive_FemalePPF_C;
        
        private wActive_MaleSolvency_V mwActive_MaleSolvency_V;
        
        private wActive_MaleSolvency_C mwActive_MaleSolvency_C;
        
        private wActive_FemaleSolvency_V mwActive_FemaleSolvency_V;
        
        private wActive_FemaleSolvency_C mwActive_FemaleSolvency_C;
        
        private wCommon_cbo1 mwCommon_cbo;
        
        private wCommon_txt mwCommon_txt;
        
        private wDef_PPFTranche mwDef_PPFTranche;
        
        private wDef_MalePPF_V mwDef_MalePPF_V;
        
        private wDef_MalePPF_C mwDef_MalePPF_C;
        
        private wDef_FemalePPF_V mwDef_FemalePPF_V;
        
        private wDef_FemalePPF_C mwDef_FemalePPF_C;
        
        private wDef_MaleSolvency_V mwDef_MaleSolvency_V;
        
        private wDef_MaleSolvency_C mwDef_MaleSolvency_C;
        
        private wDef_FemaleSolvency_V mwDef_FemaleSolvency_V;
        
        private wDef_FemaleSolvency_C mwDef_FemaleSolvency_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK : WinWindow
    {
        
        public wOK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wName : WinWindow
    {
        
        public wName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Name:";
                    this.mtxt.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActives : WinWindow
    {
        
        public wActives(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkActives";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Actives";
                    this.mchk.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDeferred : WinWindow
    {
        
        public wDeferred(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkDeferred";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Deferred";
                    this.mchk.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPensioner : WinWindow
    {
        
        public wPensioner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkPensioner";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Pensioner";
                    this.mchk.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wStartDate : WinWindow
    {
        
        public wStartDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteStartDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public cbo cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo : WinComboBox
    {
        
        public cbo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEndDate : WinWindow
    {
        
        public wEndDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dteEndDate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public cbo1 cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new cbo1(this);
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private cbo1 mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class cbo1 : WinComboBox
    {
        
        public cbo1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGMPApplies : WinWindow
    {
        
        public wGMPApplies(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkGMPApplies";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_PPFTranche : WinWindow
    {
        
        public wActive_PPFTranche(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPPFTrancheActives";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Female PPF payment age";
                    this.mcbo.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_FullySalaryRelated : WinWindow
    {
        
        public wActive_FullySalaryRelated(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkFullySalaryRelatedBenefit";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Fully salary-related benefit";
                    this.mchk.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_MalePPF_V : WinWindow
    {
        
        public wActive_MalePPF_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_MalePPF_C : WinWindow
    {
        
        public wActive_MalePPF_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_FemalePPF_V : WinWindow
    {
        
        public wActive_FemalePPF_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_FemalePPF_C : WinWindow
    {
        
        public wActive_FemalePPF_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_MaleSolvency_V : WinWindow
    {
        
        public wActive_MaleSolvency_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_MaleSolvency_C : WinWindow
    {
        
        public wActive_MaleSolvency_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_FemaleSolvency_V : WinWindow
    {
        
        public wActive_FemaleSolvency_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wActive_FemaleSolvency_C : WinWindow
    {
        
        public wActive_FemaleSolvency_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_cbo1 : WinWindow
    {
        
        public wCommon_cbo1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cboVariable";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt : WinWindow
    {
        
        public wCommon_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_numEditConstant";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public txt txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new txt(this);
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private txt mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class txt : WinEdit
    {
        
        public txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_numEditConstantEdit1
        {
            get
            {
                if ((this.mUI_numEditConstantEdit1 == null))
                {
                    this.mUI_numEditConstantEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_numEditConstantEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mUI_numEditConstantEdit1.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mUI_numEditConstantEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_numEditConstantEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_PPFTranche : WinWindow
    {
        
        public wDef_PPFTranche(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPPFTrancheDeferred";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Female PPF payment age";
                    this.mcbo.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_MalePPF_V : WinWindow
    {
        
        public wDef_MalePPF_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_MalePPF_C : WinWindow
    {
        
        public wDef_MalePPF_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_FemalePPF_V : WinWindow
    {
        
        public wDef_FemalePPF_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_FemalePPF_C : WinWindow
    {
        
        public wDef_FemalePPF_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_MaleSolvency_V : WinWindow
    {
        
        public wDef_MaleSolvency_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_MaleSolvency_C : WinWindow
    {
        
        public wDef_MaleSolvency_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_FemaleSolvency_V : WinWindow
    {
        
        public wDef_FemaleSolvency_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDef_FemaleSolvency_C : WinWindow
    {
        
        public wDef_FemaleSolvency_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Define New Tranche Definition");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Define New Tranche Definition");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFPGrid_Common_List : WinWindow
    {
        
        public wFPGrid_Common_List()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public wlist wlist
        {
            get
            {
                if ((this.mwlist == null))
                {
                    this.mwlist = new wlist(this);
                }
                return this.mwlist;
            }
        }
        #endregion
        
        #region Fields
        private wlist mwlist;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wlist : WinWindow
    {
        
        public wlist(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.LISTBOX", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public list list
        {
            get
            {
                if ((this.mlist == null))
                {
                    this.mlist = new list(this);
                }
                return this.mlist;
            }
        }
        #endregion
        
        #region Fields
        private list mlist;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class list : WinList
    {
        
        public list(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinCheckBox chkAll
        {
            get
            {
                if ((this.mchkAll == null))
                {
                    this.mchkAll = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchkAll.SearchProperties[WinCheckBox.PropertyNames.Name] = "All";
                    #endregion
                }
                return this.mchkAll;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchkAll;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTrancheDefinition_Pen : WinWindow
    {
        
        public wTrancheDefinition_Pen()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Tranche Definition", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public wPen_PPFTranche wPen_PPFTranche
        {
            get
            {
                if ((this.mwPen_PPFTranche == null))
                {
                    this.mwPen_PPFTranche = new wPen_PPFTranche(this);
                }
                return this.mwPen_PPFTranche;
            }
        }
        
        public wPen_MalePPF_V wPen_MalePPF_V
        {
            get
            {
                if ((this.mwPen_MalePPF_V == null))
                {
                    this.mwPen_MalePPF_V = new wPen_MalePPF_V(this);
                }
                return this.mwPen_MalePPF_V;
            }
        }
        
        public wPen_MalePPF_C wPen_MalePPF_C
        {
            get
            {
                if ((this.mwPen_MalePPF_C == null))
                {
                    this.mwPen_MalePPF_C = new wPen_MalePPF_C(this);
                }
                return this.mwPen_MalePPF_C;
            }
        }
        
        public wPen_FemalePPF_V wPen_FemalePPF_V
        {
            get
            {
                if ((this.mwPen_FemalePPF_V == null))
                {
                    this.mwPen_FemalePPF_V = new wPen_FemalePPF_V(this);
                }
                return this.mwPen_FemalePPF_V;
            }
        }
        
        public wPen_FemalePPF_C wPen_FemalePPF_C
        {
            get
            {
                if ((this.mwPen_FemalePPF_C == null))
                {
                    this.mwPen_FemalePPF_C = new wPen_FemalePPF_C(this);
                }
                return this.mwPen_FemalePPF_C;
            }
        }
        
        public wPen_MaleSolvency_V wPen_MaleSolvency_V
        {
            get
            {
                if ((this.mwPen_MaleSolvency_V == null))
                {
                    this.mwPen_MaleSolvency_V = new wPen_MaleSolvency_V(this);
                }
                return this.mwPen_MaleSolvency_V;
            }
        }
        
        public wPen_MaleSolvency_C wPen_MaleSolvency_C
        {
            get
            {
                if ((this.mwPen_MaleSolvency_C == null))
                {
                    this.mwPen_MaleSolvency_C = new wPen_MaleSolvency_C(this);
                }
                return this.mwPen_MaleSolvency_C;
            }
        }
        
        public wPen_FemaleSolvency_V wPen_FemaleSolvency_V
        {
            get
            {
                if ((this.mwPen_FemaleSolvency_V == null))
                {
                    this.mwPen_FemaleSolvency_V = new wPen_FemaleSolvency_V(this);
                }
                return this.mwPen_FemaleSolvency_V;
            }
        }
        
        public wPen_FemaleSolvency_C wPen_FemaleSolvency_C
        {
            get
            {
                if ((this.mwPen_FemaleSolvency_C == null))
                {
                    this.mwPen_FemaleSolvency_C = new wPen_FemaleSolvency_C(this);
                }
                return this.mwPen_FemaleSolvency_C;
            }
        }
        #endregion
        
        #region Fields
        private wPen_PPFTranche mwPen_PPFTranche;
        
        private wPen_MalePPF_V mwPen_MalePPF_V;
        
        private wPen_MalePPF_C mwPen_MalePPF_C;
        
        private wPen_FemalePPF_V mwPen_FemalePPF_V;
        
        private wPen_FemalePPF_C mwPen_FemalePPF_C;
        
        private wPen_MaleSolvency_V mwPen_MaleSolvency_V;
        
        private wPen_MaleSolvency_C mwPen_MaleSolvency_C;
        
        private wPen_FemaleSolvency_V mwPen_FemaleSolvency_V;
        
        private wPen_FemaleSolvency_C mwPen_FemaleSolvency_C;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_PPFTranche : WinWindow
    {
        
        public wPen_PPFTranche(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboPPFTranchePensioner";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Female PPF payment age";
                    this.mcbo.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_MalePPF_V : WinWindow
    {
        
        public wPen_MalePPF_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_MalePPF_C : WinWindow
    {
        
        public wPen_MalePPF_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_FemalePPF_V : WinWindow
    {
        
        public wPen_FemalePPF_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_FemalePPF_C : WinWindow
    {
        
        public wPen_FemalePPF_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_MaleSolvency_V : WinWindow
    {
        
        public wPen_MaleSolvency_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_MaleSolvency_C : WinWindow
    {
        
        public wPen_MaleSolvency_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_FemaleSolvency_V : WinWindow
    {
        
        public wPen_FemaleSolvency_V(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnVariable";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "V";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wPen_FemaleSolvency_C : WinWindow
    {
        
        public wPen_FemaleSolvency_C(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btnConstant";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Tranche Definition - Pre1990");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "C";
                    this.mbtn.WindowTitles.Add("Tranche Definition - Pre1990");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
}
