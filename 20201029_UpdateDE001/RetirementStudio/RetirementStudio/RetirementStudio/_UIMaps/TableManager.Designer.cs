// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio._UIMaps.TableManagerClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class TableManager
    {
        
        #region Properties
        public wRetirementStudio wRetirementStudio
        {
            get
            {
                if ((this.mwRetirementStudio == null))
                {
                    this.mwRetirementStudio = new wRetirementStudio();
                }
                return this.mwRetirementStudio;
            }
        }
        
        public wParameters wParameters
        {
            get
            {
                if ((this.mwParameters == null))
                {
                    this.mwParameters = new wParameters();
                }
                return this.mwParameters;
            }
        }
        #endregion
        
        #region Fields
        private wRetirementStudio mwRetirementStudio;
        
        private wParameters mwParameters;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wRetirementStudio : WinWindow
    {
        
        public wRetirementStudio()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public wTableSetup wTableSetup
        {
            get
            {
                if ((this.mwTableSetup == null))
                {
                    this.mwTableSetup = new wTableSetup(this);
                }
                return this.mwTableSetup;
            }
        }
        
        public wTab wTab
        {
            get
            {
                if ((this.mwTab == null))
                {
                    this.mwTab = new wTab(this);
                }
                return this.mwTab;
            }
        }
        
        public wEntrySetup wEntrySetup
        {
            get
            {
                if ((this.mwEntrySetup == null))
                {
                    this.mwEntrySetup = new wEntrySetup(this);
                }
                return this.mwEntrySetup;
            }
        }
        
        public wTableField wTableField
        {
            get
            {
                if ((this.mwTableField == null))
                {
                    this.mwTableField = new wTableField(this);
                }
                return this.mwTableField;
            }
        }
        #endregion
        
        #region Fields
        private wTableSetup mwTableSetup;
        
        private wTab mwTab;
        
        private wEntrySetup mwEntrySetup;
        
        private wTableField mwTableField;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTableSetup : WinWindow
    {
        
        public wTableSetup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sprTableSetup";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTab : WinWindow
    {
        
        public wTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ratesTabWorkspace";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIMaleRatesTabPage
        {
            get
            {
                if ((this.mUIMaleRatesTabPage == null))
                {
                    this.mUIMaleRatesTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIMaleRatesTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Male Rates";
                    this.mUIMaleRatesTabPage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIMaleRatesTabPage;
            }
        }
        
        public WinTabPage UIFemaleRatesTabPage
        {
            get
            {
                if ((this.mUIFemaleRatesTabPage == null))
                {
                    this.mUIFemaleRatesTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIFemaleRatesTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Female Rates";
                    this.mUIFemaleRatesTabPage.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIFemaleRatesTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIMaleRatesTabPage;
        
        private WinTabPage mUIFemaleRatesTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEntrySetup : WinWindow
    {
        
        public wEntrySetup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_fpRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient grid
        {
            get
            {
                if ((this.mgrid == null))
                {
                    this.mgrid = new WinClient(this);
                    #region Search Criteria
                    this.mgrid.SearchProperties.Add(new PropertyExpression(WinControl.PropertyNames.Name, "Entry Setup:", PropertyExpressionOperator.Contains));
                    this.mgrid.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mgrid.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mgrid;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mgrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTableField : WinWindow
    {
        
        public wTableField(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxt.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wParameters : WinWindow
    {
        
        public wParameters()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Parameters";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public wName wName
        {
            get
            {
                if ((this.mwName == null))
                {
                    this.mwName = new wName(this);
                }
                return this.mwName;
            }
        }
        
        public wType wType
        {
            get
            {
                if ((this.mwType == null))
                {
                    this.mwType = new wType(this);
                }
                return this.mwType;
            }
        }
        
        public wDescription wDescription
        {
            get
            {
                if ((this.mwDescription == null))
                {
                    this.mwDescription = new wDescription(this);
                }
                return this.mwDescription;
            }
        }
        
        public wUltimate wUltimate
        {
            get
            {
                if ((this.mwUltimate == null))
                {
                    this.mwUltimate = new wUltimate(this);
                }
                return this.mwUltimate;
            }
        }
        
        public wSelectAndUltimate wSelectAndUltimate
        {
            get
            {
                if ((this.mwSelectAndUltimate == null))
                {
                    this.mwSelectAndUltimate = new wSelectAndUltimate(this);
                }
                return this.mwSelectAndUltimate;
            }
        }
        
        public wSelectPeriods wSelectPeriods
        {
            get
            {
                if ((this.mwSelectPeriods == null))
                {
                    this.mwSelectPeriods = new wSelectPeriods(this);
                }
                return this.mwSelectPeriods;
            }
        }
        
        public wGenerational wGenerational
        {
            get
            {
                if ((this.mwGenerational == null))
                {
                    this.mwGenerational = new wGenerational(this);
                }
                return this.mwGenerational;
            }
        }
        
        public wTwoDimensional wTwoDimensional
        {
            get
            {
                if ((this.mwTwoDimensional == null))
                {
                    this.mwTwoDimensional = new wTwoDimensional(this);
                }
                return this.mwTwoDimensional;
            }
        }
        
        public wIndex1 wIndex1
        {
            get
            {
                if ((this.mwIndex1 == null))
                {
                    this.mwIndex1 = new wIndex1(this);
                }
                return this.mwIndex1;
            }
        }
        
        public wIndex2 wIndex2
        {
            get
            {
                if ((this.mwIndex2 == null))
                {
                    this.mwIndex2 = new wIndex2(this);
                }
                return this.mwIndex2;
            }
        }
        
        public wExtend wExtend
        {
            get
            {
                if ((this.mwExtend == null))
                {
                    this.mwExtend = new wExtend(this);
                }
                return this.mwExtend;
            }
        }
        
        public wZero wZero
        {
            get
            {
                if ((this.mwZero == null))
                {
                    this.mwZero = new wZero(this);
                }
                return this.mwZero;
            }
        }
        
        public wSameRatesUsed wSameRatesUsed
        {
            get
            {
                if ((this.mwSameRatesUsed == null))
                {
                    this.mwSameRatesUsed = new wSameRatesUsed(this);
                }
                return this.mwSameRatesUsed;
            }
        }
        
        public wFormat wFormat
        {
            get
            {
                if ((this.mwFormat == null))
                {
                    this.mwFormat = new wFormat(this);
                }
                return this.mwFormat;
            }
        }
        
        public wUse1000Separator wUse1000Separator
        {
            get
            {
                if ((this.mwUse1000Separator == null))
                {
                    this.mwUse1000Separator = new wUse1000Separator(this);
                }
                return this.mwUse1000Separator;
            }
        }
        
        public wOK wOK
        {
            get
            {
                if ((this.mwOK == null))
                {
                    this.mwOK = new wOK(this);
                }
                return this.mwOK;
            }
        }
        
        public wCommon_txt wCommon_txt
        {
            get
            {
                if ((this.mwCommon_txt == null))
                {
                    this.mwCommon_txt = new wCommon_txt(this);
                }
                return this.mwCommon_txt;
            }
        }
        
        public wFrom2 wFrom2
        {
            get
            {
                if ((this.mwFrom2 == null))
                {
                    this.mwFrom2 = new wFrom2(this);
                }
                return this.mwFrom2;
            }
        }
        
        public wDecimalPlace wDecimalPlace
        {
            get
            {
                if ((this.mwDecimalPlace == null))
                {
                    this.mwDecimalPlace = new wDecimalPlace(this);
                }
                return this.mwDecimalPlace;
            }
        }
        
        public wEffectiveDate wEffectiveDate
        {
            get
            {
                if ((this.mwEffectiveDate == null))
                {
                    this.mwEffectiveDate = new wEffectiveDate(this);
                }
                return this.mwEffectiveDate;
            }
        }
        #endregion
        
        #region Fields
        private wName mwName;
        
        private wType mwType;
        
        private wDescription mwDescription;
        
        private wUltimate mwUltimate;
        
        private wSelectAndUltimate mwSelectAndUltimate;
        
        private wSelectPeriods mwSelectPeriods;
        
        private wGenerational mwGenerational;
        
        private wTwoDimensional mwTwoDimensional;
        
        private wIndex1 mwIndex1;
        
        private wIndex2 mwIndex2;
        
        private wExtend mwExtend;
        
        private wZero mwZero;
        
        private wSameRatesUsed mwSameRatesUsed;
        
        private wFormat mwFormat;
        
        private wUse1000Separator mwUse1000Separator;
        
        private wOK mwOK;
        
        private wCommon_txt mwCommon_txt;
        
        private wFrom2 mwFrom2;
        
        private wDecimalPlace mwDecimalPlace;
        
        private wEffectiveDate mwEffectiveDate;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wName : WinWindow
    {
        
        public wName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wType : WinWindow
    {
        
        public wType(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbType";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDescription : WinWindow
    {
        
        public wDescription(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wUltimate : WinWindow
    {
        
        public wUltimate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radUltimate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Ultimate";
                    this.mrd.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSelectAndUltimate : WinWindow
    {
        
        public wSelectAndUltimate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radSelectUltimate";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Select & Ultimate";
                    this.mrd.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSelectPeriods : WinEdit
    {
        
        public wSelectPeriods(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txtSelectPeriods
        {
            get
            {
                if ((this.mtxtSelectPeriods == null))
                {
                    this.mtxtSelectPeriods = new WinEdit(this);
                    #region Search Criteria
                    this.mtxtSelectPeriods.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mtxtSelectPeriods.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxtSelectPeriods.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxtSelectPeriods;
            }
        }
        
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Instance] = "2";
                    this.mtxt.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxtSelectPeriods;
        
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wGenerational : WinWindow
    {
        
        public wGenerational(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radGenerational";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Generational";
                    this.mrd.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wTwoDimensional : WinWindow
    {
        
        public wTwoDimensional(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "radTwoDimenIndex";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Two-dimensional with Two Index Fields";
                    this.mrd.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIndex1 : WinWindow
    {
        
        public wIndex1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbIndex1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Columns";
                    this.mcbo.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wIndex2 : WinWindow
    {
        
        public wIndex2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbIndex2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wExtend : WinWindow
    {
        
        public wExtend(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbExtend";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Extend";
                    this.mrd.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wZero : WinWindow
    {
        
        public wZero(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rbZero";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinRadioButton rd
        {
            get
            {
                if ((this.mrd == null))
                {
                    this.mrd = new WinRadioButton(this);
                    #region Search Criteria
                    this.mrd.SearchProperties[WinRadioButton.PropertyNames.Name] = "Zero";
                    this.mrd.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mrd;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mrd;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wSameRatesUsed : WinWindow
    {
        
        public wSameRatesUsed(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chkUnisexRates";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Same Rates Used for Males and Females";
                    this.mchk.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFormat : WinWindow
    {
        
        public wFormat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbFormat";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinComboBox cbo
        {
            get
            {
                if ((this.mcbo == null))
                {
                    this.mcbo = new WinComboBox(this);
                    #region Search Criteria
                    this.mcbo.SearchProperties[WinComboBox.PropertyNames.Name] = "Description";
                    this.mcbo.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mcbo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mcbo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wUse1000Separator : WinWindow
    {
        
        public wUse1000Separator(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbSeparator";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinCheckBox chk
        {
            get
            {
                if ((this.mchk == null))
                {
                    this.mchk = new WinCheckBox(this);
                    #region Search Criteria
                    this.mchk.SearchProperties[WinCheckBox.PropertyNames.Name] = "Use 1000 Separator";
                    this.mchk.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mchk;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mchk;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wOK : WinWindow
    {
        
        public wOK(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmdOK";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinButton btn
        {
            get
            {
                if ((this.mbtn == null))
                {
                    this.mbtn = new WinButton(this);
                    #region Search Criteria
                    this.mbtn.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mbtn.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mbtn;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mbtn;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wCommon_txt : WinEdit
    {
        
        public wCommon_txt(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "A single text character";
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Instance] = "9";
                    this.mtxt.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wFrom2 : WinEdit
    {
        
        public wFrom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wDecimalPlace : WinWindow
    {
        
        public wDecimalPlace(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nudDec";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class wEffectiveDate : WinComboBox
    {
        
        public wEffectiveDate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit txt
        {
            get
            {
                if ((this.mtxt == null))
                {
                    this.mtxt = new WinEdit(this);
                    #region Search Criteria
                    this.mtxt.SearchProperties[WinEdit.PropertyNames.Name] = "Text area";
                    this.mtxt.WindowTitles.Add("Parameters");
                    #endregion
                }
                return this.mtxt;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mtxt;
        #endregion
    }
}
