// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RetirementStudio
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinClient uIFlowTreeClient = this.UIRetirementStudioWindow.UIFlowTreeWindow.UIFlowTreeClient;
            #endregion

            // Click 'flowTree' client
            Mouse.Click(uIFlowTreeClient, new Point(95, 151));

            // Click 'flowTree' client
            Mouse.Click(uIFlowTreeClient, new Point(246, 150));
        }
        
        /// <summary>
        /// RecordedMethod2
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinClient uIFlowTreeClient = this.UIProvisionsPropertiesWindow.UIFlowTreeWindow.UIFlowTreeClient;
            #endregion

            // Click 'flowTree' client
            Mouse.Click(uIFlowTreeClient, new Point(110, 93));
        }
        
        #region Properties
        public UIRetirementStudioWindow UIRetirementStudioWindow
        {
            get
            {
                if ((this.mUIRetirementStudioWindow == null))
                {
                    this.mUIRetirementStudioWindow = new UIRetirementStudioWindow();
                }
                return this.mUIRetirementStudioWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIProvisionsPropertiesWindow UIProvisionsPropertiesWindow
        {
            get
            {
                if ((this.mUIProvisionsPropertiesWindow == null))
                {
                    this.mUIProvisionsPropertiesWindow = new UIProvisionsPropertiesWindow();
                }
                return this.mUIProvisionsPropertiesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRetirementStudioWindow mUIRetirementStudioWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIProvisionsPropertiesWindow mUIProvisionsPropertiesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRetirementStudioWindow : WinWindow
    {
        
        public UIRetirementStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Retirement Studio";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public UISpreadEmployerWindow UISpreadEmployerWindow
        {
            get
            {
                if ((this.mUISpreadEmployerWindow == null))
                {
                    this.mUISpreadEmployerWindow = new UISpreadEmployerWindow(this);
                }
                return this.mUISpreadEmployerWindow;
            }
        }
        
        public UIInputTextBox_InternaWindow UIInputTextBox_InternaWindow
        {
            get
            {
                if ((this.mUIInputTextBox_InternaWindow == null))
                {
                    this.mUIInputTextBox_InternaWindow = new UIInputTextBox_InternaWindow(this);
                }
                return this.mUIInputTextBox_InternaWindow;
            }
        }
        
        public UIFlowTreeWindow UIFlowTreeWindow
        {
            get
            {
                if ((this.mUIFlowTreeWindow == null))
                {
                    this.mUIFlowTreeWindow = new UIFlowTreeWindow(this);
                }
                return this.mUIFlowTreeWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISpreadEmployerWindow mUISpreadEmployerWindow;
        
        private UIInputTextBox_InternaWindow mUIInputTextBox_InternaWindow;
        
        private UIFlowTreeWindow mUIFlowTreeWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISpreadEmployerWindow : WinWindow
    {
        
        public UISpreadEmployerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadEmployer";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient UISpreadEmployerClient
        {
            get
            {
                if ((this.mUISpreadEmployerClient == null))
                {
                    this.mUISpreadEmployerClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISpreadEmployerClient.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUISpreadEmployerClient;
            }
        }
        
        public WinClient UINOClient
        {
            get
            {
                if ((this.mUINOClient == null))
                {
                    this.mUINOClient = new WinClient(this);
                    #region Search Criteria
                    this.mUINOClient.SearchProperties[WinControl.PropertyNames.Name] = "No";
                    this.mUINOClient.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUINOClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISpreadEmployerClient;
        
        private WinClient mUINOClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIInputTextBox_InternaWindow : WinWindow
    {
        
        public UIInputTextBox_InternaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "InputTextBox_Internal";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinEdit UIInputTextBox_InternaEdit
        {
            get
            {
                if ((this.mUIInputTextBox_InternaEdit == null))
                {
                    this.mUIInputTextBox_InternaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIInputTextBox_InternaEdit.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIInputTextBox_InternaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIInputTextBox_InternaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFlowTreeWindow : WinWindow
    {
        
        public UIFlowTreeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "flowTree";
            this.WindowTitles.Add("Retirement Studio");
            #endregion
        }
        
        #region Properties
        public WinClient UIFlowTreeClient
        {
            get
            {
                if ((this.mUIFlowTreeClient == null))
                {
                    this.mUIFlowTreeClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIFlowTreeClient.SearchProperties[WinControl.PropertyNames.Name] = "flowTree";
                    this.mUIFlowTreeClient.WindowTitles.Add("Retirement Studio");
                    #endregion
                }
                return this.mUIFlowTreeClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIFlowTreeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.LISTBOX", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinListItem UIYesListItem
        {
            get
            {
                if ((this.mUIYesListItem == null))
                {
                    this.mUIYesListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIYesListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Yes";
                    #endregion
                }
                return this.mUIYesListItem;
            }
        }
        
        public WinListItem UINOListItem
        {
            get
            {
                if ((this.mUINOListItem == null))
                {
                    this.mUINOListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUINOListItem.SearchProperties[WinListItem.PropertyNames.Name] = "No";
                    #endregion
                }
                return this.mUINOListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIYesListItem;
        
        private WinListItem mUINOListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIProvisionsPropertiesWindow : WinWindow
    {
        
        public UIProvisionsPropertiesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Provisions Properties";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Provisions Properties");
            #endregion
        }
        
        #region Properties
        public UIFlowTreeWindow1 UIFlowTreeWindow
        {
            get
            {
                if ((this.mUIFlowTreeWindow == null))
                {
                    this.mUIFlowTreeWindow = new UIFlowTreeWindow1(this);
                }
                return this.mUIFlowTreeWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowTreeWindow1 mUIFlowTreeWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFlowTreeWindow1 : WinWindow
    {
        
        public UIFlowTreeWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "flowTree";
            this.WindowTitles.Add("Provisions Properties");
            #endregion
        }
        
        #region Properties
        public WinClient UIFlowTreeClient
        {
            get
            {
                if ((this.mUIFlowTreeClient == null))
                {
                    this.mUIFlowTreeClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIFlowTreeClient.SearchProperties[WinControl.PropertyNames.Name] = "flowTree";
                    this.mUIFlowTreeClient.WindowTitles.Add("Provisions Properties");
                    #endregion
                }
                return this.mUIFlowTreeClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIFlowTreeClient;
        #endregion
    }
}
